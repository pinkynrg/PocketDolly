

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sat Jun  1 00:04:29 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 44 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 44 "main.c"
    45  2007  2004               	dw 0x2007 & 0xFFFF & 0xEFFF & 0xF7FF & 0xFBFF & 0xFCFF & 0xFFFF & 0xFFFF & 0xFFDF & 0xF
                                 FFF & 0xFFF7 & 0xFFFC ;#
    46                           # 45 "main.c"
    47                           	psect config,class=CONFIG,delta=2 ;#
    48                           # 45 "main.c"
    49  2008  2008               	dw 0x2008 & 0xFFFF & 0xFEFF ;#
    50                           	FNCALL	_main,_pic_init
    51                           	FNCALL	_main,_lcd_init
    52                           	FNCALL	_main,_motorRelax
    53                           	FNCALL	_main,_print
    54                           	FNCALL	_main,_getKey
    55                           	FNCALL	_main,_left
    56                           	FNCALL	_main,_right
    57                           	FNCALL	_main,_select
    58                           	FNCALL	_main,_deselect
    59                           	FNCALL	_main,_getData
    60                           	FNCALL	_main,_start
    61                           	FNCALL	_start,_printData
    62                           	FNCALL	_start,_DelayS
    63                           	FNCALL	_start,_spin
    64                           	FNCALL	_start,_takePic
    65                           	FNCALL	_printData,___fttol
    66                           	FNCALL	_printData,_clear
    67                           	FNCALL	_printData,_sprintf
    68                           	FNCALL	_printData,_cmd
    69                           	FNCALL	_printData,_string
    70                           	FNCALL	_print,_clear
    71                           	FNCALL	_print,___bmul
    72                           	FNCALL	_print,_sprintf
    73                           	FNCALL	_print,_cmd
    74                           	FNCALL	_print,_string
    75                           	FNCALL	_string,_data
    76                           	FNCALL	_clear,_cmd
    77                           	FNCALL	_select,___bmul
    78                           	FNCALL	_select,_takePic
    79                           	FNCALL	_lcd_init,_cmd
    80                           	FNCALL	_data,_LCD_STROBE
    81                           	FNCALL	_cmd,_LCD_STROBE
    82                           	FNCALL	_takePic,_SendIRSequence
    83                           	FNCALL	_spin,___ftmul
    84                           	FNCALL	_spin,___fttol
    85                           	FNCALL	_spin,_DelayMs
    86                           	FNCALL	_spin,_abs
    87                           	FNCALL	_spin,_motorRelax
    88                           	FNCALL	_getData,___wmul
    89                           	FNCALL	_getData,___lwdiv
    90                           	FNCALL	_getData,___lwtoft
    91                           	FNCALL	___lwtoft,___ftpack
    92                           	FNCALL	___ftmul,___ftpack
    93                           	FNCALL	_sprintf,___lwdiv
    94                           	FNCALL	_sprintf,___lwmod
    95                           	FNCALL	_SendIRSequence,_SendIRPulseCycles
    96                           	FNCALL	_deselect,___bmul
    97                           	FNCALL	_right,___bmul
    98                           	FNCALL	_left,___bmul
    99                           	FNCALL	_DelayS,_DelayMs
   100                           	FNROOT	_main
   101                           	global	main@F1933
   102                           	global	main@mainMenu
   103                           	global	main@time
   104                           	global	main@settings
   105                           	global	main@try
   106                           psect	idataBANK1,class=CODE,space=0,delta=2
   107                           global __pidataBANK1
   108  0908                     __pidataBANK1:
   109                           	file	"main.c"
   110                           	line	119
   111                           
   112                           ;initializer for main@F1933
   113  0908  3400               	retlw	0
   114  0909  3400               	retlw	0
   115                           
   116  090A  3400               	retlw	0
   117  090B  3400               	retlw	0
   118  090C  3400               	retlw	0
   119  090D  3490               	retlw	low(main@mainMenu)
   120  090E  3401               	retlw	high(main@mainMenu)
   121                           
   122  090F  34AD               	retlw	low(main@settings)
   123  0910  3400               	retlw	high(main@settings)
   124                           
   125  0911  34BB               	retlw	low(main@try)
   126  0912  3400               	retlw	high(main@try)
   127                           
   128  0913  34A5               	retlw	low(main@time)
   129  0914  3401               	retlw	high(main@time)
   130                           
   131                           psect	idataBANK3,class=CODE,space=0,delta=2
   132                           global __pidataBANK3
   133  0977                     __pidataBANK3:
   134                           	line	115
   135                           
   136                           ;initializer for main@mainMenu
   137  0977  347E               	retlw	(STR_1-__stringbase)&0ffh
   138  0978  34AD               	retlw	(STR_2-__stringbase)&0ffh
   139  0979  34FF               	retlw	0FFh
   140  097A  34FF               	retlw	0FFh
   141  097B  3401               	retlw	01h
   142  097C  34FF               	retlw	0FFh
   143  097D  3400               	retlw	0
   144                           
   145  097E  344E               	retlw	(STR_3-__stringbase)&0ffh
   146  097F  34AD               	retlw	(STR_4-__stringbase)&0ffh
   147  0980  34FF               	retlw	0FFh
   148  0981  34FF               	retlw	0FFh
   149  0982  3402               	retlw	02h
   150  0983  34FF               	retlw	0FFh
   151  0984  3400               	retlw	0
   152                           
   153  0985  34B4               	retlw	(STR_5-__stringbase)&0ffh
   154  0986  34AD               	retlw	(STR_6-__stringbase)&0ffh
   155  0987  34FF               	retlw	0FFh
   156  0988  34FF               	retlw	0FFh
   157  0989  34FE               	retlw	0FEh
   158  098A  34FF               	retlw	0FFh
   159  098B  3400               	retlw	0
   160                           
   161                           	line	118
   162                           
   163                           ;initializer for main@time
   164  098C  34AE               	retlw	(STR_13-__stringbase)&0ffh
   165  098D  34C4               	retlw	(STR_14-__stringbase)&0ffh
   166  098E  3401               	retlw	01h
   167  098F  3400               	retlw	0
   168  0990  34FF               	retlw	0FFh
   169  0991  3400               	retlw	0
   170  0992  3400               	retlw	0
   171                           
   172  0993  349F               	retlw	(STR_15-__stringbase)&0ffh
   173  0994  34C6               	retlw	(STR_16-__stringbase)&0ffh
   174  0995  3401               	retlw	01h
   175  0996  3400               	retlw	0
   176  0997  34FF               	retlw	0FFh
   177  0998  3403               	retlw	03h
   178  0999  3400               	retlw	0
   179                           
   180  099A  3497               	retlw	(STR_17-__stringbase)&0ffh
   181  099B  34BD               	retlw	(STR_18-__stringbase)&0ffh
   182  099C  3401               	retlw	01h
   183  099D  3400               	retlw	0
   184  099E  34FF               	retlw	0FFh
   185  099F  3400               	retlw	0
   186  09A0  3400               	retlw	0
   187                           
   188                           psect	idataBANK1
   189                           	line	116
   190                           
   191                           ;initializer for main@settings
   192  0915  3473               	retlw	(STR_7-__stringbase)&0ffh
   193  0916  34AD               	retlw	(STR_8-__stringbase)&0ffh
   194  0917  3400               	retlw	0
   195  0918  3400               	retlw	0
   196  0919  3403               	retlw	03h
   197  091A  34FF               	retlw	0FFh
   198  091B  3400               	retlw	0
   199                           
   200  091C  3467               	retlw	(STR_9-__stringbase)&0ffh
   201  091D  34AD               	retlw	(STR_10-__stringbase)&0ffh
   202  091E  3400               	retlw	0
   203  091F  3400               	retlw	0
   204  0920  34FF               	retlw	0FFh
   205  0921  3464               	retlw	064h
   206  0922  3400               	retlw	0
   207                           
   208                           	line	117
   209                           
   210                           ;initializer for main@try
   211  0923  343F               	retlw	(STR_11-__stringbase)&0ffh
   212  0924  34AD               	retlw	(STR_12-__stringbase)&0ffh
   213  0925  3400               	retlw	0
   214  0926  3401               	retlw	01h
   215  0927  34FD               	retlw	0FDh
   216  0928  34FF               	retlw	0FFh
   217  0929  3400               	retlw	0
   218                           
   219                           	global	_pulse
   220                           psect	strings,class=STRING,delta=2
   221                           global __pstrings
   222  0800                     __pstrings:
   223                           ;	global	stringdir,stringtab,__stringbase
   224  0800                     stringtab:
   225                           ;	String table - string pointers are 1 byte each
   226  0800                     stringcode:stringdir:
      + 0800                     stringdir:	
   227  0800  3008               movlw high(stringdir)
   228  0801  008A               movwf pclath
   229  0802  0804               movf fsr,w
   230  0803  0A84               incf fsr
   231  0804  0782               	addwf pc
   232  0805                     __stringbase:
   233  0805  3400               	retlw	0
   234                           psect	strings
   235                           	file	"main.c"
   236                           	line	48
   237  0806                     _pulse:
   238  0806  3400               	retlw	0
   239  0807  3400               	retlw	0
   240                           
   241  0808  3401               	retlw	01h
   242  0809  3400               	retlw	0
   243                           
   244  080A  3401               	retlw	01h
   245  080B  3400               	retlw	0
   246                           
   247  080C  3400               	retlw	0
   248  080D  3400               	retlw	0
   249                           
   250  080E  3401               	retlw	01h
   251  080F  3400               	retlw	0
   252                           
   253  0810  3400               	retlw	0
   254  0811  3400               	retlw	0
   255                           
   256  0812  3401               	retlw	01h
   257  0813  3400               	retlw	0
   258                           
   259  0814  3400               	retlw	0
   260  0815  3400               	retlw	0
   261                           
   262  0816  3401               	retlw	01h
   263  0817  3400               	retlw	0
   264                           
   265  0818  3400               	retlw	0
   266  0819  3400               	retlw	0
   267                           
   268  081A  3400               	retlw	0
   269  081B  3400               	retlw	0
   270                           
   271  081C  3401               	retlw	01h
   272  081D  3400               	retlw	0
   273                           
   274  081E  3400               	retlw	0
   275  081F  3400               	retlw	0
   276                           
   277  0820  3401               	retlw	01h
   278  0821  3400               	retlw	0
   279                           
   280  0822  3400               	retlw	0
   281  0823  3400               	retlw	0
   282                           
   283  0824  3401               	retlw	01h
   284  0825  3400               	retlw	0
   285                           
   286                           	global	_dpowers
   287                           psect	strings
   288                           	file	"/Applications/HI-TECH/picc/9.83/lib/doprnt.c"
   289                           	line	350
   290  0826                     _dpowers:
   291  0826  3401               	retlw	01h
   292  0827  3400               	retlw	0
   293                           
   294  0828  340A               	retlw	0Ah
   295  0829  3400               	retlw	0
   296                           
   297  082A  3464               	retlw	064h
   298  082B  3400               	retlw	0
   299                           
   300  082C  34E8               	retlw	0E8h
   301  082D  3403               	retlw	03h
   302                           
   303  082E  3410               	retlw	010h
   304  082F  3427               	retlw	027h
   305                           
   306                           	global	_menuLengths
   307                           psect	strings
   308                           	file	"main.c"
   309                           	line	47
   310  0830                     _menuLengths:
   311  0830  3403               	retlw	03h
   312  0831  3402               	retlw	02h
   313  0832  3401               	retlw	01h
   314  0833  3403               	retlw	03h
   315                           	global	_pulse
   316                           	global	_dpowers
   317                           	global	_menuLengths
   318                           	global	_delayus_variable
   319                           	global	main@F1935
   320                           	global	_wise
   321                           	global	_PORTA
   322  0005                     _PORTA	set	5
   323                           	global	_PORTB
   324  0006                     _PORTB	set	6
   325                           	global	_PORTC
   326  0007                     _PORTC	set	7
   327                           	global	_PORTD
   328  0008                     _PORTD	set	8
   329                           	global	_PORTE
   330  0009                     _PORTE	set	9
   331                           	global	_CARRY
   332  0018                     _CARRY	set	24
   333                           	global	_GIE
   334  005F                     _GIE	set	95
   335                           	global	_RA0
   336  0028                     _RA0	set	40
   337                           	global	_RA1
   338  0029                     _RA1	set	41
   339                           	global	_RA2
   340  002A                     _RA2	set	42
   341                           	global	_RA3
   342  002B                     _RA3	set	43
   343                           	global	_RA4
   344  002C                     _RA4	set	44
   345                           	global	_RA5
   346  002D                     _RA5	set	45
   347                           	global	_RB0
   348  0030                     _RB0	set	48
   349                           	global	_RB1
   350  0031                     _RB1	set	49
   351                           	global	_RB4
   352  0034                     _RB4	set	52
   353                           	global	_RB5
   354  0035                     _RB5	set	53
   355                           	global	_RB6
   356  0036                     _RB6	set	54
   357                           	global	_RB7
   358  0037                     _RB7	set	55
   359                           	global	_RC4
   360  003C                     _RC4	set	60
   361                           	global	_OSCCON
   362  008F                     _OSCCON	set	143
   363                           	global	_TRISA
   364  0085                     _TRISA	set	133
   365                           	global	_TRISB
   366  0086                     _TRISB	set	134
   367                           	global	_TRISC
   368  0087                     _TRISC	set	135
   369                           	global	_TRISD
   370  0088                     _TRISD	set	136
   371                           	global	_TRISE
   372  0089                     _TRISE	set	137
   373                           	global	_EEADR
   374  010D                     _EEADR	set	269
   375                           	global	_EEDATA
   376  010C                     _EEDATA	set	268
   377                           	global	_ANSEL
   378  0188                     _ANSEL	set	392
   379                           	global	_ANSELH
   380  0189                     _ANSELH	set	393
   381                           	global	_EECON1
   382  018C                     _EECON1	set	396
   383                           	global	_EECON2
   384  018D                     _EECON2	set	397
   385                           	global	_RD
   386  0C60                     _RD	set	3168
   387                           	global	_WR
   388  0C61                     _WR	set	3169
   389                           	global	_WREN
   390  0C62                     _WREN	set	3170
   391                           	
   392  0834                     STR_23:	
   393  0834  3454               	retlw	84	;'T'
   394  0835  346F               	retlw	111	;'o'
   395  0836  346F               	retlw	111	;'o'
   396  0837  346B               	retlw	107	;'k'
   397  0838  343A               	retlw	58	;':'
   398  0839  3425               	retlw	37	;'%'
   399  083A  3464               	retlw	100	;'d'
   400  083B  3420               	retlw	32	;' '
   401  083C  3454               	retlw	84	;'T'
   402  083D  346F               	retlw	111	;'o'
   403  083E  3444               	retlw	68	;'D'
   404  083F  346F               	retlw	111	;'o'
   405  0840  343A               	retlw	58	;':'
   406  0841  3425               	retlw	37	;'%'
   407  0842  3464               	retlw	100	;'d'
   408  0843  3400               	retlw	0
   409                           psect	strings
   410                           	
   411  0844                     STR_11:	
   412  0844  3454               	retlw	84	;'T'
   413  0845  3461               	retlw	97	;'a'
   414  0846  346B               	retlw	107	;'k'
   415  0847  3465               	retlw	101	;'e'
   416  0848  3420               	retlw	32	;' '
   417  0849  3461               	retlw	97	;'a'
   418  084A  3420               	retlw	32	;' '
   419  084B  3450               	retlw	80	;'P'
   420  084C  3469               	retlw	105	;'i'
   421  084D  3463               	retlw	99	;'c'
   422  084E  3474               	retlw	116	;'t'
   423  084F  3475               	retlw	117	;'u'
   424  0850  3472               	retlw	114	;'r'
   425  0851  3465               	retlw	101	;'e'
   426  0852  3400               	retlw	0
   427                           psect	strings
   428                           	
   429  0853                     STR_3:	
   430  0853  3454               	retlw	84	;'T'
   431  0854  3472               	retlw	114	;'r'
   432  0855  3479               	retlw	121	;'y'
   433  0856  3420               	retlw	32	;' '
   434  0857  3446               	retlw	70	;'F'
   435  0858  3465               	retlw	101	;'e'
   436  0859  3461               	retlw	97	;'a'
   437  085A  3474               	retlw	116	;'t'
   438  085B  3475               	retlw	117	;'u'
   439  085C  3472               	retlw	114	;'r'
   440  085D  3465               	retlw	101	;'e'
   441  085E  3473               	retlw	115	;'s'
   442  085F  3400               	retlw	0
   443                           psect	strings
   444                           	
   445  0860                     STR_24:	
   446  0860  3453               	retlw	83	;'S'
   447  0861  3470               	retlw	112	;'p'
   448  0862  343A               	retlw	58	;':'
   449  0863  3425               	retlw	37	;'%'
   450  0864  3464               	retlw	100	;'d'
   451  0865  3420               	retlw	32	;' '
   452  0866  3453               	retlw	83	;'S'
   453  0867  3463               	retlw	99	;'c'
   454  0868  343A               	retlw	58	;':'
   455  0869  3425               	retlw	37	;'%'
   456  086A  3464               	retlw	100	;'d'
   457  086B  3400               	retlw	0
   458                           psect	strings
   459                           	
   460  086C                     STR_9:	
   461  086C  3454               	retlw	84	;'T'
   462  086D  346F               	retlw	111	;'o'
   463  086E  3474               	retlw	116	;'t'
   464  086F  3461               	retlw	97	;'a'
   465  0870  346C               	retlw	108	;'l'
   466  0871  3420               	retlw	32	;' '
   467  0872  3453               	retlw	83	;'S'
   468  0873  3468               	retlw	104	;'h'
   469  0874  346F               	retlw	111	;'o'
   470  0875  3474               	retlw	116	;'t'
   471  0876  3473               	retlw	115	;'s'
   472  0877  3400               	retlw	0
   473                           psect	strings
   474                           	
   475  0878                     STR_7:	
   476  0878  3454               	retlw	84	;'T'
   477  0879  346F               	retlw	111	;'o'
   478  087A  3474               	retlw	116	;'t'
   479  087B  3461               	retlw	97	;'a'
   480  087C  346C               	retlw	108	;'l'
   481  087D  3420               	retlw	32	;' '
   482  087E  3454               	retlw	84	;'T'
   483  087F  3469               	retlw	105	;'i'
   484  0880  346D               	retlw	109	;'m'
   485  0881  3465               	retlw	101	;'e'
   486  0882  3400               	retlw	0
   487                           psect	strings
   488                           	
   489  0883                     STR_1:	
   490  0883  3453               	retlw	83	;'S'
   491  0884  3465               	retlw	101	;'e'
   492  0885  3474               	retlw	116	;'t'
   493  0886  3474               	retlw	116	;'t'
   494  0887  3469               	retlw	105	;'i'
   495  0888  346E               	retlw	110	;'n'
   496  0889  3467               	retlw	103	;'g'
   497  088A  3473               	retlw	115	;'s'
   498  088B  3400               	retlw	0
   499                           psect	strings
   500                           	
   501  088C                     STR_21:	
   502  088C  3420               	retlw	32	;' '
   503  088D  3420               	retlw	32	;' '
   504  088E  3425               	retlw	37	;'%'
   505  088F  3464               	retlw	100	;'d'
   506  0890  3420               	retlw	32	;' '
   507  0891  3425               	retlw	37	;'%'
   508  0892  3473               	retlw	115	;'s'
   509  0893  3400               	retlw	0
   510                           psect	strings
   511                           	
   512  0894                     STR_22:	
   513  0894  343E               	retlw	62	;'>'
   514  0895  3420               	retlw	32	;' '
   515  0896  3425               	retlw	37	;'%'
   516  0897  3464               	retlw	100	;'d'
   517  0898  3420               	retlw	32	;' '
   518  0899  3425               	retlw	37	;'%'
   519  089A  3473               	retlw	115	;'s'
   520  089B  3400               	retlw	0
   521                           psect	strings
   522                           	
   523  089C                     STR_17:	
   524  089C  3453               	retlw	83	;'S'
   525  089D  3465               	retlw	101	;'e'
   526  089E  3463               	retlw	99	;'c'
   527  089F  346F               	retlw	111	;'o'
   528  08A0  346E               	retlw	110	;'n'
   529  08A1  3464               	retlw	100	;'d'
   530  08A2  3473               	retlw	115	;'s'
   531  08A3  3400               	retlw	0
   532                           psect	strings
   533                           	
   534  08A4                     STR_15:	
   535  08A4  344D               	retlw	77	;'M'
   536  08A5  3469               	retlw	105	;'i'
   537  08A6  346E               	retlw	110	;'n'
   538  08A7  3475               	retlw	117	;'u'
   539  08A8  3474               	retlw	116	;'t'
   540  08A9  3465               	retlw	101	;'e'
   541  08AA  3473               	retlw	115	;'s'
   542  08AB  3400               	retlw	0
   543                           psect	strings
   544                           	
   545  08AC                     STR_25:	
   546  08AC  3428               	retlw	40	;'('
   547  08AD  346E               	retlw	110	;'n'
   548  08AE  3475               	retlw	117	;'u'
   549  08AF  346C               	retlw	108	;'l'
   550  08B0  346C               	retlw	108	;'l'
   551  08B1  3429               	retlw	41	;')'
   552  08B2  3400               	retlw	0
   553                           psect	strings
   554                           	
   555  08B3                     STR_13:	
   556  08B3  3448               	retlw	72	;'H'
   557  08B4  346F               	retlw	111	;'o'
   558  08B5  3475               	retlw	117	;'u'
   559  08B6  3472               	retlw	114	;'r'
   560  08B7  3473               	retlw	115	;'s'
   561  08B8  3400               	retlw	0
   562                           psect	strings
   563                           	
   564  08B9                     STR_5:	
   565  08B9  3453               	retlw	83	;'S'
   566  08BA  3474               	retlw	116	;'t'
   567  08BB  3461               	retlw	97	;'a'
   568  08BC  3472               	retlw	114	;'r'
   569  08BD  3474               	retlw	116	;'t'
   570  08BE  3400               	retlw	0
   571                           psect	strings
   572                           	
   573  08BF                     STR_20:	
   574  08BF  3420               	retlw	32	;' '
   575  08C0  3420               	retlw	32	;' '
   576  08C1  3425               	retlw	37	;'%'
   577  08C2  3473               	retlw	115	;'s'
   578  08C3  3400               	retlw	0
   579                           psect	strings
   580                           	
   581  08C4                     STR_19:	
   582  08C4  343E               	retlw	62	;'>'
   583  08C5  3420               	retlw	32	;' '
   584  08C6  3425               	retlw	37	;'%'
   585  08C7  3473               	retlw	115	;'s'
   586  08C8  3400               	retlw	0
   587                           psect	strings
   588                           	
   589  08C9                     STR_14:	
   590  08C9  3468               	retlw	104	;'h'
   591  08CA  3400               	retlw	0
   592                           psect	strings
   593                           	
   594  08CB                     STR_16:	
   595  08CB  346D               	retlw	109	;'m'
   596  08CC  3400               	retlw	0
   597                           psect	strings
   598  08C2                     STR_18	equ	STR_20+3
   599  08B2                     STR_2	equ	STR_25+6
   600  08B2                     STR_4	equ	STR_25+6
   601  08B2                     STR_6	equ	STR_25+6
   602  08B2                     STR_8	equ	STR_25+6
   603  08B2                     STR_10	equ	STR_25+6
   604  08B2                     STR_12	equ	STR_25+6
   605                           	file	"/tmp/cgthaKZPG"
   606                           	line	#
   607                           psect cinit,class=CODE,delta=2
   608                           global start_initialization
   609  09FC                     start_initialization:
   610                           
   611                           psect	bssBANK0,class=BANK0,space=1
   612                           global __pbssBANK0
   613  006F                     __pbssBANK0:
   614  006F                     _delayus_variable:
   615  006F                            ds      1
   616                           
   617                           psect	bssBANK1,class=BANK1,space=1
   618                           global __pbssBANK1
   619  00DC                     __pbssBANK1:
   620  00DC                     main@F1935:
   621  00DC                            ds      11
   622                           
   623  00E7                     _wise:
   624  00E7                            ds      1
   625                           
   626                           psect	dataBANK1,class=BANK1,space=1
   627                           global __pdataBANK1
   628  00A0                     __pdataBANK1:
   629                           	file	"main.c"
   630                           	line	119
   631  00A0                     main@F1933:
   632  00A0                            ds      13
   633                           
   634                           psect	dataBANK1
   635                           	file	"main.c"
   636                           	line	116
   637  00AD                     main@settings:
   638  00AD                            ds      14
   639                           
   640                           psect	dataBANK1
   641                           	file	"main.c"
   642                           	line	117
   643  00BB                     main@try:
   644  00BB                            ds      7
   645                           
   646                           psect	dataBANK3,class=BANK3,space=1
   647                           global __pdataBANK3
   648  0190                     __pdataBANK3:
   649                           	file	"main.c"
   650                           	line	115
   651  0190                     main@mainMenu:
   652  0190                            ds      21
   653                           
   654                           psect	dataBANK3
   655                           	file	"main.c"
   656                           	line	118
   657  01A5                     main@time:
   658  01A5                            ds      21
   659                           
   660                           ; Clear objects allocated to BANK0
   661                           psect cinit,class=CODE,delta=2
   662  09FC  01EF               	clrf	((__pbssBANK0)+0)&07Fh
   663                           ; Clear objects allocated to BANK1
   664                           psect cinit,class=CODE,delta=2
   665  09FD  1683               	bsf	status, 5	;RP0=1, select bank1
   666  09FE  1303               	bcf	status, 6	;RP1=0, select bank1
   667  09FF  01DC               	clrf	((__pbssBANK1)+0)&07Fh
   668  0A00  01DD               	clrf	((__pbssBANK1)+1)&07Fh
   669  0A01  01DE               	clrf	((__pbssBANK1)+2)&07Fh
   670  0A02  01DF               	clrf	((__pbssBANK1)+3)&07Fh
   671  0A03  01E0               	clrf	((__pbssBANK1)+4)&07Fh
   672  0A04  01E1               	clrf	((__pbssBANK1)+5)&07Fh
   673  0A05  01E2               	clrf	((__pbssBANK1)+6)&07Fh
   674  0A06  01E3               	clrf	((__pbssBANK1)+7)&07Fh
   675  0A07  01E4               	clrf	((__pbssBANK1)+8)&07Fh
   676  0A08  01E5               	clrf	((__pbssBANK1)+9)&07Fh
   677  0A09  01E6               	clrf	((__pbssBANK1)+10)&07Fh
   678  0A0A  01E7               	clrf	((__pbssBANK1)+11)&07Fh
   679                           global btemp
   680                           psect inittext,class=CODE,delta=2
   681                           global init_fetch,btemp
   682                           ;	Called with low address in FSR and high address in W
   683  1771                     init_fetch:
   684  1771  087E               	movf btemp,w
   685  1772  008A               	movwf pclath
   686  1773  087F               	movf btemp+1,w
   687  1774  0082               	movwf pc
   688                           global init_ram
   689                           ;Called with:
   690                           ;	high address of idata address in btemp 
   691                           ;	low address of idata address in btemp+1 
   692                           ;	low address of data in FSR
   693                           ;	high address + 1 of data in btemp-1
   694  1775                     init_ram:
   695  1775  160A  118A  2771   	fcall init_fetch
              160A  118A         
   696  177A  0080               	movwf indf,f
   697  177B  0A84               	incf fsr,f
   698  177C  0804               	movf fsr,w
   699  177D  067D               	xorwf btemp-1,w
   700  177E  1903               	btfsc status,2
   701  177F  3400               	retlw 0
   702  1780  0AFF               	incf btemp+1,f
   703  1781  1903               	btfsc status,2
   704  1782  0AFE               	incf btemp,f
   705  1783  2F75               	goto init_ram
   706                           ; Initialize objects allocated to BANK3
   707                           psect cinit,class=CODE,delta=2
   708                           global init_ram, __pidataBANK3
   709  0A0B  1783               	bsf	status, 7	;select IRP bank2
   710  0A0C  30BA               	movlw low(__pdataBANK3+42)
   711  0A0D  00FD               	movwf btemp-1,f
   712  0A0E  3009               	movlw high(__pidataBANK3)
   713  0A0F  00FE               	movwf btemp,f
   714  0A10  3077               	movlw low(__pidataBANK3)
   715  0A11  00FF               	movwf btemp+1,f
   716  0A12  3090               	movlw low(__pdataBANK3)
   717  0A13  0084               	movwf fsr,f
   718  0A14  160A  118A  2775   	fcall init_ram
              120A  158A         
   719                           ; Initialize objects allocated to BANK1
   720                           psect cinit,class=CODE,delta=2
   721                           global init_ram, __pidataBANK1
   722  0A19  1383               	bcf	status, 7	;select IRP bank0
   723  0A1A  30C2               	movlw low(__pdataBANK1+34)
   724  0A1B  00FD               	movwf btemp-1,f
   725  0A1C  3009               	movlw high(__pidataBANK1)
   726  0A1D  00FE               	movwf btemp,f
   727  0A1E  3008               	movlw low(__pidataBANK1)
   728  0A1F  00FF               	movwf btemp+1,f
   729  0A20  30A0               	movlw low(__pdataBANK1)
   730  0A21  0084               	movwf fsr,f
   731  0A22  160A  118A  2775   	fcall init_ram
              120A  158A         
   732                           psect cinit,class=CODE,delta=2
   733                           global end_of_initialization
   734                           
   735                           ;End of C runtime variable initialization code
   736                           
   737  0A27                     end_of_initialization:
   738  0A27  0183               clrf status
   739  0A28  120A  118A  2E50   ljmp _main	;jump to C main() function
   740                           psect	cstackBANK1,class=BANK1,space=1
   741                           global __pcstackBANK1
   742  00C2                     __pcstackBANK1:
   743                           	global	main@key
   744  00C2                     main@key:	; 2 bytes @ 0x0
   745  00C2                     	ds	2
   746                           	global	main@myData
   747  00C4                     main@myData:	; 11 bytes @ 0x2
   748  00C4                     	ds	11
   749                           	global	main@myMenu
   750  00CF                     main@myMenu:	; 13 bytes @ 0xD
   751  00CF                     	ds	13
   752                           psect	cstackCOMMON,class=COMMON,space=1
   753                           global __pcstackCOMMON
   754  0070                     __pcstackCOMMON:
   755                           	global	?_pic_init
   756  0070                     ?_pic_init:	; 0 bytes @ 0x0
   757                           	global	??_pic_init
   758  0070                     ??_pic_init:	; 0 bytes @ 0x0
   759                           	global	?_lcd_init
   760  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   761                           	global	?_motorRelax
   762  0070                     ?_motorRelax:	; 0 bytes @ 0x0
   763                           	global	??_motorRelax
   764  0070                     ??_motorRelax:	; 0 bytes @ 0x0
   765                           	global	?_clear
   766  0070                     ?_clear:	; 0 bytes @ 0x0
   767                           	global	?_cmd
   768  0070                     ?_cmd:	; 0 bytes @ 0x0
   769                           	global	??_cmd
   770  0070                     ??_cmd:	; 0 bytes @ 0x0
   771                           	global	?_string
   772  0070                     ?_string:	; 0 bytes @ 0x0
   773                           	global	?_DelayMs
   774  0070                     ?_DelayMs:	; 0 bytes @ 0x0
   775                           	global	??_DelayMs
   776  0070                     ??_DelayMs:	; 0 bytes @ 0x0
   777                           	global	?_DelayS
   778  0070                     ?_DelayS:	; 0 bytes @ 0x0
   779                           	global	?_main
   780  0070                     ?_main:	; 0 bytes @ 0x0
   781                           	global	?_SendIRPulseCycles
   782  0070                     ?_SendIRPulseCycles:	; 0 bytes @ 0x0
   783                           	global	??_SendIRPulseCycles
   784  0070                     ??_SendIRPulseCycles:	; 0 bytes @ 0x0
   785                           	global	?_SendIRSequence
   786  0070                     ?_SendIRSequence:	; 0 bytes @ 0x0
   787                           	global	?_LCD_STROBE
   788  0070                     ?_LCD_STROBE:	; 0 bytes @ 0x0
   789                           	global	??_LCD_STROBE
   790  0070                     ??_LCD_STROBE:	; 0 bytes @ 0x0
   791                           	global	?_data
   792  0070                     ?_data:	; 0 bytes @ 0x0
   793                           	global	??_data
   794  0070                     ??_data:	; 0 bytes @ 0x0
   795                           	global	?_takePic
   796  0070                     ?_takePic:	; 1 bytes @ 0x0
   797                           	global	?___bmul
   798  0070                     ?___bmul:	; 1 bytes @ 0x0
   799                           	global	?_getKey
   800  0070                     ?_getKey:	; 2 bytes @ 0x0
   801                           	global	?_abs
   802  0070                     ?_abs:	; 2 bytes @ 0x0
   803                           	global	?___wmul
   804  0070                     ?___wmul:	; 2 bytes @ 0x0
   805                           	global	?___lwdiv
   806  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   807                           	global	?___ftpack
   808  0070                     ?___ftpack:	; 3 bytes @ 0x0
   809                           	global	SendIRPulseCycles@cycles
   810  0070                     SendIRPulseCycles@cycles:	; 1 bytes @ 0x0
   811                           	global	___bmul@multiplicand
   812  0070                     ___bmul@multiplicand:	; 1 bytes @ 0x0
   813                           	global	abs@a
   814  0070                     abs@a:	; 2 bytes @ 0x0
   815                           	global	___wmul@multiplier
   816  0070                     ___wmul@multiplier:	; 2 bytes @ 0x0
   817                           	global	___lwdiv@divisor
   818  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   819                           	global	___ftpack@arg
   820  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   821  0070                     	ds	1
   822                           	global	??_SendIRSequence
   823  0071                     ??_SendIRSequence:	; 0 bytes @ 0x1
   824                           	global	??___bmul
   825  0071                     ??___bmul:	; 0 bytes @ 0x1
   826                           	global	DelayMs@cnt
   827  0071                     DelayMs@cnt:	; 1 bytes @ 0x1
   828                           	global	data@c
   829  0071                     data@c:	; 1 bytes @ 0x1
   830  0071                     	ds	1
   831                           	global	??_getKey
   832  0072                     ??_getKey:	; 0 bytes @ 0x2
   833                           	global	??_abs
   834  0072                     ??_abs:	; 0 bytes @ 0x2
   835                           	global	??_string
   836  0072                     ??_string:	; 0 bytes @ 0x2
   837                           	global	DelayMs@i
   838  0072                     DelayMs@i:	; 1 bytes @ 0x2
   839                           	global	cmd@c
   840  0072                     cmd@c:	; 1 bytes @ 0x2
   841                           	global	___bmul@product
   842  0072                     ___bmul@product:	; 1 bytes @ 0x2
   843                           	global	getKey@btn
   844  0072                     getKey@btn:	; 2 bytes @ 0x2
   845                           	global	___wmul@multiplicand
   846  0072                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   847                           	global	___lwdiv@dividend
   848  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   849  0072                     	ds	1
   850                           	global	??_lcd_init
   851  0073                     ??_lcd_init:	; 0 bytes @ 0x3
   852                           	global	??_takePic
   853  0073                     ??_takePic:	; 0 bytes @ 0x3
   854                           	global	??_clear
   855  0073                     ??_clear:	; 0 bytes @ 0x3
   856                           	global	??_DelayS
   857  0073                     ??_DelayS:	; 0 bytes @ 0x3
   858                           	global	string@q
   859  0073                     string@q:	; 1 bytes @ 0x3
   860                           	global	___bmul@multiplier
   861  0073                     ___bmul@multiplier:	; 1 bytes @ 0x3
   862                           	global	___ftpack@exp
   863  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   864  0073                     	ds	1
   865                           	global	??_left
   866  0074                     ??_left:	; 0 bytes @ 0x4
   867                           	global	??_right
   868  0074                     ??_right:	; 0 bytes @ 0x4
   869                           	global	??_deselect
   870  0074                     ??_deselect:	; 0 bytes @ 0x4
   871                           	global	??___wmul
   872  0074                     ??___wmul:	; 0 bytes @ 0x4
   873                           	global	??___lwdiv
   874  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   875                           	global	DelayS@cnt
   876  0074                     DelayS@cnt:	; 1 bytes @ 0x4
   877                           	global	___ftpack@sign
   878  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   879                           	global	___wmul@product
   880  0074                     ___wmul@product:	; 2 bytes @ 0x4
   881  0074                     	ds	1
   882                           	global	??___ftpack
   883  0075                     ??___ftpack:	; 0 bytes @ 0x5
   884                           	global	DelayS@i
   885  0075                     DelayS@i:	; 1 bytes @ 0x5
   886                           	global	takePic@actualShots
   887  0075                     takePic@actualShots:	; 1 bytes @ 0x5
   888                           	global	___lwdiv@quotient
   889  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   890  0075                     	ds	2
   891                           	global	___lwdiv@counter
   892  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   893  0077                     	ds	1
   894                           	global	?___lwmod
   895  0078                     ?___lwmod:	; 2 bytes @ 0x8
   896                           	global	?___lwtoft
   897  0078                     ?___lwtoft:	; 3 bytes @ 0x8
   898                           	global	?___fttol
   899  0078                     ?___fttol:	; 4 bytes @ 0x8
   900                           	global	___lwmod@divisor
   901  0078                     ___lwmod@divisor:	; 2 bytes @ 0x8
   902                           	global	___lwtoft@c
   903  0078                     ___lwtoft@c:	; 2 bytes @ 0x8
   904                           	global	___fttol@f1
   905  0078                     ___fttol@f1:	; 3 bytes @ 0x8
   906  0078                     	ds	2
   907                           	global	___lwmod@dividend
   908  007A                     ___lwmod@dividend:	; 2 bytes @ 0xA
   909  007A                     	ds	1
   910                           	global	??___lwtoft
   911  007B                     ??___lwtoft:	; 0 bytes @ 0xB
   912  007B                     	ds	1
   913                           	global	??___lwmod
   914  007C                     ??___lwmod:	; 0 bytes @ 0xC
   915  007C                     	ds	1
   916                           	global	___lwmod@counter
   917  007D                     ___lwmod@counter:	; 1 bytes @ 0xD
   918  007D                     	ds	1
   919                           psect	cstackBANK0,class=BANK0,space=1
   920                           global __pcstackBANK0
   921  0020                     __pcstackBANK0:
   922                           	global	??___fttol
   923  0020                     ??___fttol:	; 0 bytes @ 0x0
   924                           	global	?_sprintf
   925  0020                     ?_sprintf:	; 2 bytes @ 0x0
   926                           	global	?_getData
   927  0020                     ?_getData:	; 11 bytes @ 0x0
   928                           	global	?_left
   929  0020                     ?_left:	; 13 bytes @ 0x0
   930                           	global	?_right
   931  0020                     ?_right:	; 13 bytes @ 0x0
   932                           	global	?_select
   933  0020                     ?_select:	; 13 bytes @ 0x0
   934                           	global	?_deselect
   935  0020                     ?_deselect:	; 13 bytes @ 0x0
   936                           	global	sprintf@f
   937  0020                     sprintf@f:	; 1 bytes @ 0x0
   938                           	global	getData@myMenu
   939  0020                     getData@myMenu:	; 13 bytes @ 0x0
   940                           	global	left@myMenu
   941  0020                     left@myMenu:	; 13 bytes @ 0x0
   942                           	global	right@myMenu
   943  0020                     right@myMenu:	; 13 bytes @ 0x0
   944                           	global	select@myMenu
   945  0020                     select@myMenu:	; 13 bytes @ 0x0
   946                           	global	deselect@myMenu
   947  0020                     deselect@myMenu:	; 13 bytes @ 0x0
   948  0020                     	ds	4
   949                           	global	___fttol@sign1
   950  0024                     ___fttol@sign1:	; 1 bytes @ 0x4
   951  0024                     	ds	1
   952                           	global	??_sprintf
   953  0025                     ??_sprintf:	; 0 bytes @ 0x5
   954                           	global	___fttol@lval
   955  0025                     ___fttol@lval:	; 4 bytes @ 0x5
   956  0025                     	ds	3
   957                           	global	sprintf@flag
   958  0028                     sprintf@flag:	; 1 bytes @ 0x8
   959  0028                     	ds	1
   960                           	global	sprintf@prec
   961  0029                     sprintf@prec:	; 1 bytes @ 0x9
   962                           	global	___fttol@exp1
   963  0029                     ___fttol@exp1:	; 1 bytes @ 0x9
   964  0029                     	ds	1
   965                           	global	?___ftmul
   966  002A                     ?___ftmul:	; 3 bytes @ 0xA
   967                           	global	sprintf@ap
   968  002A                     sprintf@ap:	; 1 bytes @ 0xA
   969                           	global	___ftmul@f1
   970  002A                     ___ftmul@f1:	; 3 bytes @ 0xA
   971  002A                     	ds	1
   972                           	global	sprintf@sp
   973  002B                     sprintf@sp:	; 1 bytes @ 0xB
   974  002B                     	ds	1
   975                           	global	sprintf@_val
   976  002C                     sprintf@_val:	; 3 bytes @ 0xC
   977  002C                     	ds	1
   978                           	global	??_select
   979  002D                     ??_select:	; 0 bytes @ 0xD
   980                           	global	??_getData
   981  002D                     ??_getData:	; 0 bytes @ 0xD
   982                           	global	___ftmul@f2
   983  002D                     ___ftmul@f2:	; 3 bytes @ 0xD
   984  002D                     	ds	2
   985                           	global	sprintf@c
   986  002F                     sprintf@c:	; 1 bytes @ 0xF
   987  002F                     	ds	1
   988                           	global	?_print
   989  0030                     ?_print:	; 0 bytes @ 0x10
   990                           	global	?_printData
   991  0030                     ?_printData:	; 0 bytes @ 0x10
   992                           	global	??___ftmul
   993  0030                     ??___ftmul:	; 0 bytes @ 0x10
   994                           	global	printData@myData
   995  0030                     printData@myData:	; 11 bytes @ 0x10
   996                           	global	print@myMenu
   997  0030                     print@myMenu:	; 13 bytes @ 0x10
   998  0030                     	ds	4
   999                           	global	___ftmul@exp
  1000  0034                     ___ftmul@exp:	; 1 bytes @ 0x14
  1001  0034                     	ds	1
  1002                           	global	___ftmul@f3_as_product
  1003  0035                     ___ftmul@f3_as_product:	; 3 bytes @ 0x15
  1004  0035                     	ds	3
  1005                           	global	___ftmul@cntr
  1006  0038                     ___ftmul@cntr:	; 1 bytes @ 0x18
  1007  0038                     	ds	1
  1008                           	global	___ftmul@sign
  1009  0039                     ___ftmul@sign:	; 1 bytes @ 0x19
  1010                           	global	_getData$3070
  1011  0039                     _getData$3070:	; 2 bytes @ 0x19
  1012  0039                     	ds	1
  1013                           	global	?_spin
  1014  003A                     ?_spin:	; 11 bytes @ 0x1A
  1015                           	global	spin@myData
  1016  003A                     spin@myData:	; 11 bytes @ 0x1A
  1017  003A                     	ds	1
  1018                           	global	??_printData
  1019  003B                     ??_printData:	; 0 bytes @ 0x1B
  1020                           	global	getData@myData
  1021  003B                     getData@myData:	; 11 bytes @ 0x1B
  1022  003B                     	ds	2
  1023                           	global	??_print
  1024  003D                     ??_print:	; 0 bytes @ 0x1D
  1025  003D                     	ds	3
  1026                           	global	printData@buffer
  1027  0040                     printData@buffer:	; 16 bytes @ 0x20
  1028  0040                     	ds	5
  1029                           	global	??_spin
  1030  0045                     ??_spin:	; 0 bytes @ 0x25
  1031  0045                     	ds	7
  1032                           	global	spin@s
  1033  004C                     spin@s:	; 2 bytes @ 0x2C
  1034  004C                     	ds	2
  1035                           	global	spin@f
  1036  004E                     spin@f:	; 2 bytes @ 0x2E
  1037  004E                     	ds	1
  1038                           	global	print@buffer
  1039  004F                     print@buffer:	; 16 bytes @ 0x2F
  1040  004F                     	ds	1
  1041                           	global	spin@i
  1042  0050                     spin@i:	; 2 bytes @ 0x30
  1043                           	global	printData@morelessspins
  1044  0050                     printData@morelessspins:	; 2 bytes @ 0x30
  1045  0050                     	ds	2
  1046                           	global	?_start
  1047  0052                     ?_start:	; 0 bytes @ 0x32
  1048                           	global	start@myData
  1049  0052                     start@myData:	; 11 bytes @ 0x32
  1050  0052                     	ds	11
  1051                           	global	??_start
  1052  005D                     ??_start:	; 0 bytes @ 0x3D
  1053  005D                     	ds	8
  1054                           	global	start@i
  1055  0065                     start@i:	; 2 bytes @ 0x45
  1056  0065                     	ds	2
  1057                           	global	??_main
  1058  0067                     ??_main:	; 0 bytes @ 0x47
  1059  0067                     	ds	8
  1060 ;;Data sizes: Strings 153, constant 46, data 76, bss 13, persistent 0 stack 0
  1061 ;;Auto spaces:   Size  Autos    Used
  1062 ;; COMMON          14     14      14
  1063 ;; BANK0           80     79      80
  1064 ;; BANK1           80     26      72
  1065 ;; BANK3           96      0      42
  1066 ;; BANK2           96      0       0
  1067                           
  1068 ;;
  1069 ;; Pointer list with targets:
  1070                           
  1071 ;; ?___ftpack	float  size(1) Largest target is 11
  1072 ;;		 -> getData@myData(BANK0[11]), 
  1073 ;;
  1074 ;; ?___lwmod	unsigned int  size(1) Largest target is 15
  1075 ;;		 -> STR_18(CODE[2]), STR_17(CODE[8]), STR_16(CODE[2]), STR_15(CODE[8]), 
  1076 ;;		 -> STR_14(CODE[2]), STR_13(CODE[6]), STR_12(CODE[1]), STR_11(CODE[15]), 
  1077 ;;		 -> STR_10(CODE[1]), STR_9(CODE[12]), STR_8(CODE[1]), STR_7(CODE[11]), 
  1078 ;;		 -> STR_6(CODE[1]), STR_5(CODE[6]), STR_4(CODE[1]), STR_3(CODE[13]), 
  1079 ;;		 -> STR_2(CODE[1]), STR_1(CODE[9]), 
  1080 ;;
  1081 ;; ?_getKey	int  size(1) Largest target is 0
  1082 ;;
  1083 ;; ?___fttol	long  size(1) Largest target is 0
  1084 ;;
  1085 ;; ?_abs	int  size(1) Largest target is 0
  1086 ;;
  1087 ;; ?___ftmul	float  size(1) Largest target is 0
  1088 ;;
  1089 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
  1090 ;;
  1091 ;; ?___lwtoft	float  size(1) Largest target is 0
  1092 ;;
  1093 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1094 ;;
  1095 ;; ?_spin	struct data size(1) Largest target is 0
  1096 ;;
  1097 ;; ?_getData	struct data size(1) Largest target is 0
  1098 ;;
  1099 ;; ?_deselect	struct menu size(1) Largest target is 0
  1100 ;;
  1101 ;; ?_select	struct menu size(1) Largest target is 0
  1102 ;;
  1103 ;; ?_right	struct menu size(1) Largest target is 0
  1104 ;;
  1105 ;; ?_left	struct menu size(1) Largest target is 0
  1106 ;;
  1107 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 16
  1108 ;;		 -> STR_24(CODE[12]), STR_23(CODE[16]), STR_22(CODE[8]), STR_21(CODE[8]), 
  1109 ;;		 -> STR_20(CODE[5]), STR_19(CODE[5]), 
  1110 ;;
  1111 ;; sprintf@_val._cp	PTR const unsigned char  size(1) Largest target is 15
  1112 ;;		 -> STR_25(CODE[7]), STR_18(CODE[2]), STR_17(CODE[8]), STR_16(CODE[2]), 
  1113 ;;		 -> STR_15(CODE[8]), STR_14(CODE[2]), STR_13(CODE[6]), STR_12(CODE[1]), 
  1114 ;;		 -> STR_11(CODE[15]), STR_10(CODE[1]), STR_9(CODE[12]), STR_8(CODE[1]), 
  1115 ;;		 -> STR_7(CODE[11]), STR_6(CODE[1]), STR_5(CODE[6]), STR_4(CODE[1]), 
  1116 ;;		 -> STR_3(CODE[13]), STR_2(CODE[1]), STR_1(CODE[9]), 
  1117 ;;
  1118 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1119 ;;		 -> printData@buffer(BANK0[16]), print@buffer(BANK0[16]), 
  1120 ;;
  1121 ;; ?_sprintf	int  size(1) Largest target is 15
  1122 ;;		 -> STR_18(CODE[2]), STR_17(CODE[8]), STR_16(CODE[2]), STR_15(CODE[8]), 
  1123 ;;		 -> STR_14(CODE[2]), STR_13(CODE[6]), STR_12(CODE[1]), STR_11(CODE[15]), 
  1124 ;;		 -> STR_10(CODE[1]), STR_9(CODE[12]), STR_8(CODE[1]), STR_7(CODE[11]), 
  1125 ;;		 -> STR_6(CODE[1]), STR_5(CODE[6]), STR_4(CODE[1]), STR_3(CODE[13]), 
  1126 ;;		 -> STR_2(CODE[1]), STR_1(CODE[9]), 
  1127 ;;
  1128 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
  1129 ;;		 -> ?_sprintf(BANK0[2]), 
  1130 ;;
  1131 ;; S2161$_cp	PTR const unsigned char  size(1) Largest target is 15
  1132 ;;		 -> STR_25(CODE[7]), STR_18(CODE[2]), STR_17(CODE[8]), STR_16(CODE[2]), 
  1133 ;;		 -> STR_15(CODE[8]), STR_14(CODE[2]), STR_13(CODE[6]), STR_12(CODE[1]), 
  1134 ;;		 -> STR_11(CODE[15]), STR_10(CODE[1]), STR_9(CODE[12]), STR_8(CODE[1]), 
  1135 ;;		 -> STR_7(CODE[11]), STR_6(CODE[1]), STR_5(CODE[6]), STR_4(CODE[1]), 
  1136 ;;		 -> STR_3(CODE[13]), STR_2(CODE[1]), STR_1(CODE[9]), 
  1137 ;;
  1138 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 15
  1139 ;;		 -> STR_25(CODE[7]), STR_18(CODE[2]), STR_17(CODE[8]), STR_16(CODE[2]), 
  1140 ;;		 -> STR_15(CODE[8]), STR_14(CODE[2]), STR_13(CODE[6]), STR_12(CODE[1]), 
  1141 ;;		 -> STR_11(CODE[15]), STR_10(CODE[1]), STR_9(CODE[12]), STR_8(CODE[1]), 
  1142 ;;		 -> STR_7(CODE[11]), STR_6(CODE[1]), STR_5(CODE[6]), STR_4(CODE[1]), 
  1143 ;;		 -> STR_3(CODE[13]), STR_2(CODE[1]), STR_1(CODE[9]), 
  1144 ;;
  1145 ;; string@q	PTR const unsigned char  size(1) Largest target is 16
  1146 ;;		 -> printData@buffer(BANK0[16]), print@buffer(BANK0[16]), 
  1147 ;;
  1148 ;; myMenu.m.mask	PTR const unsigned char  size(1) Largest target is 2
  1149 ;;		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_12(CODE[1]), 
  1150 ;;		 -> STR_10(CODE[1]), STR_8(CODE[1]), STR_6(CODE[1]), STR_4(CODE[1]), 
  1151 ;;		 -> STR_2(CODE[1]), 
  1152 ;;
  1153 ;; myMenu.m.voice	PTR const unsigned char  size(1) Largest target is 15
  1154 ;;		 -> STR_17(CODE[8]), STR_15(CODE[8]), STR_13(CODE[6]), STR_11(CODE[15]), 
  1155 ;;		 -> STR_9(CODE[12]), STR_7(CODE[11]), STR_5(CODE[6]), STR_3(CODE[13]), 
  1156 ;;		 -> STR_1(CODE[9]), 
  1157 ;;
  1158 ;; myMenu.m	PTR struct menuItem[4] size(2) Largest target is 27
  1159 ;;		 -> main@time(BANK3[21]), main@try(BANK1[7]), main@settings(BANK1[14]), main@mainMenu(BANK3[21]), 
  1160 ;;
  1161 ;; myMenu.m.mask	PTR const unsigned char  size(1) Largest target is 2
  1162 ;;		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_12(CODE[1]), 
  1163 ;;		 -> STR_10(CODE[1]), STR_8(CODE[1]), STR_6(CODE[1]), STR_4(CODE[1]), 
  1164 ;;		 -> STR_2(CODE[1]), 
  1165 ;;
  1166 ;; myMenu.m.voice	PTR const unsigned char  size(1) Largest target is 15
  1167 ;;		 -> STR_17(CODE[8]), STR_15(CODE[8]), STR_13(CODE[6]), STR_11(CODE[15]), 
  1168 ;;		 -> STR_9(CODE[12]), STR_7(CODE[11]), STR_5(CODE[6]), STR_3(CODE[13]), 
  1169 ;;		 -> STR_1(CODE[9]), 
  1170 ;;
  1171 ;; myMenu.m	PTR struct menuItem[4] size(2) Largest target is 27
  1172 ;;		 -> main@time(BANK3[21]), main@try(BANK1[7]), main@settings(BANK1[14]), main@mainMenu(BANK3[21]), 
  1173 ;;
  1174 ;; myMenu.m.mask	PTR const unsigned char  size(1) Largest target is 2
  1175 ;;		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_12(CODE[1]), 
  1176 ;;		 -> STR_10(CODE[1]), STR_8(CODE[1]), STR_6(CODE[1]), STR_4(CODE[1]), 
  1177 ;;		 -> STR_2(CODE[1]), 
  1178 ;;
  1179 ;; myMenu.m.voice	PTR const unsigned char  size(1) Largest target is 15
  1180 ;;		 -> STR_17(CODE[8]), STR_15(CODE[8]), STR_13(CODE[6]), STR_11(CODE[15]), 
  1181 ;;		 -> STR_9(CODE[12]), STR_7(CODE[11]), STR_5(CODE[6]), STR_3(CODE[13]), 
  1182 ;;		 -> STR_1(CODE[9]), 
  1183 ;;
  1184 ;; myMenu.m	PTR struct menuItem[4] size(2) Largest target is 27
  1185 ;;		 -> main@time(BANK3[21]), main@try(BANK1[7]), main@settings(BANK1[14]), main@mainMenu(BANK3[21]), 
  1186 ;;
  1187 ;; myMenu.m.mask	PTR const unsigned char  size(1) Largest target is 2
  1188 ;;		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_12(CODE[1]), 
  1189 ;;		 -> STR_10(CODE[1]), STR_8(CODE[1]), STR_6(CODE[1]), STR_4(CODE[1]), 
  1190 ;;		 -> STR_2(CODE[1]), 
  1191 ;;
  1192 ;; myMenu.m.voice	PTR const unsigned char  size(1) Largest target is 15
  1193 ;;		 -> STR_17(CODE[8]), STR_15(CODE[8]), STR_13(CODE[6]), STR_11(CODE[15]), 
  1194 ;;		 -> STR_9(CODE[12]), STR_7(CODE[11]), STR_5(CODE[6]), STR_3(CODE[13]), 
  1195 ;;		 -> STR_1(CODE[9]), 
  1196 ;;
  1197 ;; myMenu.m	PTR struct menuItem[4] size(2) Largest target is 27
  1198 ;;		 -> main@time(BANK3[21]), main@try(BANK1[7]), main@settings(BANK1[14]), main@mainMenu(BANK3[21]), 
  1199 ;;
  1200 ;; myMenu.m.mask	PTR const unsigned char  size(1) Largest target is 2
  1201 ;;		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_12(CODE[1]), 
  1202 ;;		 -> STR_10(CODE[1]), STR_8(CODE[1]), STR_6(CODE[1]), STR_4(CODE[1]), 
  1203 ;;		 -> STR_2(CODE[1]), 
  1204 ;;
  1205 ;; myMenu.m.voice	PTR const unsigned char  size(1) Largest target is 15
  1206 ;;		 -> STR_17(CODE[8]), STR_15(CODE[8]), STR_13(CODE[6]), STR_11(CODE[15]), 
  1207 ;;		 -> STR_9(CODE[12]), STR_7(CODE[11]), STR_5(CODE[6]), STR_3(CODE[13]), 
  1208 ;;		 -> STR_1(CODE[9]), 
  1209 ;;
  1210 ;; myMenu.m	PTR struct menuItem[4] size(2) Largest target is 27
  1211 ;;		 -> main@time(BANK3[21]), main@try(BANK1[7]), main@settings(BANK1[14]), main@mainMenu(BANK3[21]), 
  1212 ;;
  1213 ;; myMenu.m.mask	PTR const unsigned char  size(1) Largest target is 2
  1214 ;;		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_12(CODE[1]), 
  1215 ;;		 -> STR_10(CODE[1]), STR_8(CODE[1]), STR_6(CODE[1]), STR_4(CODE[1]), 
  1216 ;;		 -> STR_2(CODE[1]), 
  1217 ;;
  1218 ;; myMenu.m.voice	PTR const unsigned char  size(1) Largest target is 15
  1219 ;;		 -> STR_17(CODE[8]), STR_15(CODE[8]), STR_13(CODE[6]), STR_11(CODE[15]), 
  1220 ;;		 -> STR_9(CODE[12]), STR_7(CODE[11]), STR_5(CODE[6]), STR_3(CODE[13]), 
  1221 ;;		 -> STR_1(CODE[9]), 
  1222 ;;
  1223 ;; myMenu.m	PTR struct menuItem[4] size(2) Largest target is 27
  1224 ;;		 -> main@time(BANK3[21]), main@try(BANK1[7]), main@settings(BANK1[14]), main@mainMenu(BANK3[21]), 
  1225 ;;
  1226 ;; F1933.m	PTR struct menuItem[4] size(2) Largest target is 27
  1227 ;;		 -> main@time(BANK3[21]), main@try(BANK1[7]), main@settings(BANK1[14]), main@mainMenu(BANK3[21]), 
  1228 ;;
  1229 ;; S1794menu$m	PTR struct menuItem[4] size(2) Largest target is 27
  1230 ;;		 -> main@time(BANK3[21]), main@try(BANK1[7]), main@settings(BANK1[14]), main@mainMenu(BANK3[21]), 
  1231 ;;
  1232 ;; myMenu.m	PTR struct menuItem[4] size(2) Largest target is 27
  1233 ;;		 -> main@time(BANK3[21]), main@try(BANK1[7]), main@settings(BANK1[14]), main@mainMenu(BANK3[21]), 
  1234 ;;
  1235 ;; main@time.mask	PTR const unsigned char  size(1) Largest target is 2
  1236 ;;		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_12(CODE[1]), 
  1237 ;;		 -> STR_10(CODE[1]), STR_8(CODE[1]), STR_6(CODE[1]), STR_4(CODE[1]), 
  1238 ;;		 -> STR_2(CODE[1]), 
  1239 ;;
  1240 ;; main@time.voice	PTR const unsigned char  size(1) Largest target is 15
  1241 ;;		 -> STR_17(CODE[8]), STR_15(CODE[8]), STR_13(CODE[6]), STR_11(CODE[15]), 
  1242 ;;		 -> STR_9(CODE[12]), STR_7(CODE[11]), STR_5(CODE[6]), STR_3(CODE[13]), 
  1243 ;;		 -> STR_1(CODE[9]), 
  1244 ;;
  1245 ;; main@try.mask	PTR const unsigned char  size(1) Largest target is 2
  1246 ;;		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_12(CODE[1]), 
  1247 ;;		 -> STR_10(CODE[1]), STR_8(CODE[1]), STR_6(CODE[1]), STR_4(CODE[1]), 
  1248 ;;		 -> STR_2(CODE[1]), 
  1249 ;;
  1250 ;; main@try.voice	PTR const unsigned char  size(1) Largest target is 15
  1251 ;;		 -> STR_17(CODE[8]), STR_15(CODE[8]), STR_13(CODE[6]), STR_11(CODE[15]), 
  1252 ;;		 -> STR_9(CODE[12]), STR_7(CODE[11]), STR_5(CODE[6]), STR_3(CODE[13]), 
  1253 ;;		 -> STR_1(CODE[9]), 
  1254 ;;
  1255 ;; main@settings.mask	PTR const unsigned char  size(1) Largest target is 2
  1256 ;;		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_12(CODE[1]), 
  1257 ;;		 -> STR_10(CODE[1]), STR_8(CODE[1]), STR_6(CODE[1]), STR_4(CODE[1]), 
  1258 ;;		 -> STR_2(CODE[1]), 
  1259 ;;
  1260 ;; main@settings.voice	PTR const unsigned char  size(1) Largest target is 15
  1261 ;;		 -> STR_17(CODE[8]), STR_15(CODE[8]), STR_13(CODE[6]), STR_11(CODE[15]), 
  1262 ;;		 -> STR_9(CODE[12]), STR_7(CODE[11]), STR_5(CODE[6]), STR_3(CODE[13]), 
  1263 ;;		 -> STR_1(CODE[9]), 
  1264 ;;
  1265 ;; S1783menuItem$mask	PTR const unsigned char  size(1) Largest target is 2
  1266 ;;		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_12(CODE[1]), 
  1267 ;;		 -> STR_10(CODE[1]), STR_8(CODE[1]), STR_6(CODE[1]), STR_4(CODE[1]), 
  1268 ;;		 -> STR_2(CODE[1]), 
  1269 ;;
  1270 ;; main@mainMenu.mask	PTR const unsigned char  size(1) Largest target is 2
  1271 ;;		 -> STR_18(CODE[2]), STR_16(CODE[2]), STR_14(CODE[2]), STR_12(CODE[1]), 
  1272 ;;		 -> STR_10(CODE[1]), STR_8(CODE[1]), STR_6(CODE[1]), STR_4(CODE[1]), 
  1273 ;;		 -> STR_2(CODE[1]), 
  1274 ;;
  1275 ;; S1783menuItem$voice	PTR const unsigned char  size(1) Largest target is 15
  1276 ;;		 -> STR_17(CODE[8]), STR_15(CODE[8]), STR_13(CODE[6]), STR_11(CODE[15]), 
  1277 ;;		 -> STR_9(CODE[12]), STR_7(CODE[11]), STR_5(CODE[6]), STR_3(CODE[13]), 
  1278 ;;		 -> STR_1(CODE[9]), 
  1279 ;;
  1280 ;; main@mainMenu.voice	PTR const unsigned char  size(1) Largest target is 15
  1281 ;;		 -> STR_17(CODE[8]), STR_15(CODE[8]), STR_13(CODE[6]), STR_11(CODE[15]), 
  1282 ;;		 -> STR_9(CODE[12]), STR_7(CODE[11]), STR_5(CODE[6]), STR_3(CODE[13]), 
  1283 ;;		 -> STR_1(CODE[9]), 
  1284 ;;
  1285                           
  1286                           
  1287 ;;
  1288 ;; Critical Paths under _main in COMMON
  1289 ;;
  1290 ;;   _main->_left
  1291 ;;   _main->_right
  1292 ;;   _string->_data
  1293 ;;   _clear->_cmd
  1294 ;;   _select->_takePic
  1295 ;;   _lcd_init->_cmd
  1296 ;;   _takePic->_SendIRSequence
  1297 ;;   _spin->___fttol
  1298 ;;   _getData->___lwtoft
  1299 ;;   ___lwtoft->___ftpack
  1300 ;;   ___lwtoft->___lwdiv
  1301 ;;   ___ftmul->___fttol
  1302 ;;   _sprintf->___lwmod
  1303 ;;   _SendIRSequence->_SendIRPulseCycles
  1304 ;;   _deselect->___bmul
  1305 ;;   _right->___bmul
  1306 ;;   _left->___bmul
  1307 ;;   _DelayS->_DelayMs
  1308 ;;   ___fttol->___ftpack
  1309 ;;   ___lwmod->___lwdiv
  1310 ;;
  1311 ;; Critical Paths under _main in BANK0
  1312 ;;
  1313 ;;   _main->_start
  1314 ;;   _start->_printData
  1315 ;;   _start->_spin
  1316 ;;   _printData->_sprintf
  1317 ;;   _print->_sprintf
  1318 ;;   _spin->___ftmul
  1319 ;;   ___ftmul->___fttol
  1320 ;;
  1321 ;; Critical Paths under _main in BANK1
  1322 ;;
  1323 ;;   None.
  1324 ;;
  1325 ;; Critical Paths under _main in BANK3
  1326 ;;
  1327 ;;   None.
  1328 ;;
  1329 ;; Critical Paths under _main in BANK2
  1330 ;;
  1331 ;;   None.
  1332                           
  1333 ;;
  1334 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1335 ;;
  1336                           
  1337 ;;
  1338 ;;Call Graph Tables:
  1339 ;;
  1340 ;; ---------------------------------------------------------------------------------
  1341 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1342 ;; ---------------------------------------------------------------------------------
  1343 ;; (0) _main                                                34    34      0    7848
  1344 ;;                                             71 BANK0      8     8      0
  1345 ;;                                              0 BANK1     26    26      0
  1346 ;;                           _pic_init
  1347 ;;                           _lcd_init
  1348 ;;                         _motorRelax
  1349 ;;                              _print
  1350 ;;                             _getKey
  1351 ;;                               _left
  1352 ;;                              _right
  1353 ;;                             _select
  1354 ;;                           _deselect
  1355 ;;                            _getData
  1356 ;;                              _start
  1357 ;; ---------------------------------------------------------------------------------
  1358 ;; (1) _start                                               21    10     11    3161
  1359 ;;                                             50 BANK0     21    10     11
  1360 ;;                          _printData
  1361 ;;                             _DelayS
  1362 ;;                               _spin
  1363 ;;                            _takePic
  1364 ;; ---------------------------------------------------------------------------------
  1365 ;; (2) _printData                                           34    23     11    1580
  1366 ;;                                             16 BANK0     34    23     11
  1367 ;;                            ___fttol
  1368 ;;                              _clear
  1369 ;;                            _sprintf
  1370 ;;                                _cmd
  1371 ;;                             _string
  1372 ;; ---------------------------------------------------------------------------------
  1373 ;; (1) _print                                               47    34     13    1831
  1374 ;;                                             16 BANK0     47    34     13
  1375 ;;                              _clear
  1376 ;;                             ___bmul
  1377 ;;                            _sprintf
  1378 ;;                                _cmd
  1379 ;;                             _string
  1380 ;; ---------------------------------------------------------------------------------
  1381 ;; (3) _string                                               2     2      0      89
  1382 ;;                                              2 COMMON     2     2      0
  1383 ;;                               _data
  1384 ;; ---------------------------------------------------------------------------------
  1385 ;; (3) _clear                                                0     0      0      44
  1386 ;;                                _cmd
  1387 ;; ---------------------------------------------------------------------------------
  1388 ;; (1) _select                                              22     9     13     635
  1389 ;;                                              0 BANK0     22     9     13
  1390 ;;                             ___bmul
  1391 ;;                            _takePic
  1392 ;; ---------------------------------------------------------------------------------
  1393 ;; (1) _lcd_init                                             0     0      0      44
  1394 ;;                                _cmd
  1395 ;; ---------------------------------------------------------------------------------
  1396 ;; (4) _data                                                 2     2      0      44
  1397 ;;                                              0 COMMON     2     2      0
  1398 ;;                         _LCD_STROBE
  1399 ;; ---------------------------------------------------------------------------------
  1400 ;; (3) _cmd                                                  3     3      0      44
  1401 ;;                                              0 COMMON     3     3      0
  1402 ;;                         _LCD_STROBE
  1403 ;; ---------------------------------------------------------------------------------
  1404 ;; (2) _takePic                                              3     3      0      45
  1405 ;;                                              3 COMMON     3     3      0
  1406 ;;                     _SendIRSequence
  1407 ;; ---------------------------------------------------------------------------------
  1408 ;; (2) _spin                                                24    13     11    1262
  1409 ;;                                             26 BANK0     24    13     11
  1410 ;;                            ___ftmul
  1411 ;;                            ___fttol
  1412 ;;                            _DelayMs
  1413 ;;                                _abs
  1414 ;;                         _motorRelax
  1415 ;; ---------------------------------------------------------------------------------
  1416 ;; (1) _getData                                             38    25     13     811
  1417 ;;                                              0 BANK0     38    25     13
  1418 ;;                             ___wmul
  1419 ;;                            ___lwdiv
  1420 ;;                           ___lwtoft
  1421 ;; ---------------------------------------------------------------------------------
  1422 ;; (2) ___lwtoft                                             4     1      3     231
  1423 ;;                                              8 COMMON     4     1      3
  1424 ;;                           ___ftpack
  1425 ;;                            ___lwdiv (ARG)
  1426 ;; ---------------------------------------------------------------------------------
  1427 ;; (3) ___ftmul                                             16    10      6     535
  1428 ;;                                             10 BANK0     16    10      6
  1429 ;;                           ___ftpack
  1430 ;;                            ___fttol (ARG)
  1431 ;; ---------------------------------------------------------------------------------
  1432 ;; (5) _LCD_STROBE                                           0     0      0       0
  1433 ;; ---------------------------------------------------------------------------------
  1434 ;; (3) _sprintf                                             16    11      5     913
  1435 ;;                                              0 BANK0     16    11      5
  1436 ;;                            ___lwdiv
  1437 ;;                            ___lwmod
  1438 ;;                             ___bmul (ARG)
  1439 ;; ---------------------------------------------------------------------------------
  1440 ;; (3) _SendIRSequence                                       2     2      0      22
  1441 ;;                                              1 COMMON     2     2      0
  1442 ;;                  _SendIRPulseCycles
  1443 ;; ---------------------------------------------------------------------------------
  1444 ;; (1) _deselect                                            22     9     13     392
  1445 ;;                                              4 COMMON     9     9      0
  1446 ;;                                              0 BANK0     13     0     13
  1447 ;;                             ___bmul
  1448 ;; ---------------------------------------------------------------------------------
  1449 ;; (1) _right                                               23    10     13     321
  1450 ;;                                              4 COMMON    10    10      0
  1451 ;;                                              0 BANK0     13     0     13
  1452 ;;                             ___bmul
  1453 ;; ---------------------------------------------------------------------------------
  1454 ;; (1) _left                                                23    10     13     298
  1455 ;;                                              4 COMMON    10    10      0
  1456 ;;                                              0 BANK0     13     0     13
  1457 ;;                             ___bmul
  1458 ;; ---------------------------------------------------------------------------------
  1459 ;; (2) _DelayS                                               3     3      0      90
  1460 ;;                                              3 COMMON     3     3      0
  1461 ;;                            _DelayMs
  1462 ;; ---------------------------------------------------------------------------------
  1463 ;; (3) ___fttol                                             14    10      4     252
  1464 ;;                                              8 COMMON     4     0      4
  1465 ;;                                              0 BANK0     10    10      0
  1466 ;;                           ___ftpack (ARG)
  1467 ;; ---------------------------------------------------------------------------------
  1468 ;; (4) ___ftpack                                             8     3      5     209
  1469 ;;                                              0 COMMON     8     3      5
  1470 ;; ---------------------------------------------------------------------------------
  1471 ;; (4) ___lwmod                                              6     2      4     159
  1472 ;;                                              8 COMMON     6     2      4
  1473 ;;                            ___lwdiv (ARG)
  1474 ;; ---------------------------------------------------------------------------------
  1475 ;; (4) ___lwdiv                                              8     4      4     162
  1476 ;;                                              0 COMMON     8     4      4
  1477 ;; ---------------------------------------------------------------------------------
  1478 ;; (2) ___wmul                                               6     2      4      92
  1479 ;;                                              0 COMMON     6     2      4
  1480 ;; ---------------------------------------------------------------------------------
  1481 ;; (2) ___bmul                                               4     3      1      68
  1482 ;;                                              0 COMMON     4     3      1
  1483 ;; ---------------------------------------------------------------------------------
  1484 ;; (3) _abs                                                  4     2      2      66
  1485 ;;                                              0 COMMON     4     2      2
  1486 ;; ---------------------------------------------------------------------------------
  1487 ;; (4) _SendIRPulseCycles                                    1     1      0      22
  1488 ;;                                              0 COMMON     1     1      0
  1489 ;; ---------------------------------------------------------------------------------
  1490 ;; (1) _getKey                                               4     2      2      49
  1491 ;;                                              0 COMMON     4     2      2
  1492 ;; ---------------------------------------------------------------------------------
  1493 ;; (3) _motorRelax                                           0     0      0       0
  1494 ;; ---------------------------------------------------------------------------------
  1495 ;; (1) _pic_init                                             0     0      0       0
  1496 ;; ---------------------------------------------------------------------------------
  1497 ;; (3) _DelayMs                                              3     3      0      45
  1498 ;;                                              0 COMMON     3     3      0
  1499 ;; ---------------------------------------------------------------------------------
  1500 ;; Estimated maximum stack depth 5
  1501 ;; ---------------------------------------------------------------------------------
  1502                           
  1503 ;; Call Graph Graphs:
  1504                           
  1505 ;; _main (ROOT)
  1506 ;;   _pic_init
  1507 ;;   _lcd_init
  1508 ;;     _cmd
  1509 ;;       _LCD_STROBE
  1510 ;;   _motorRelax
  1511 ;;   _print
  1512 ;;     _clear
  1513 ;;       _cmd
  1514 ;;         _LCD_STROBE
  1515 ;;     ___bmul
  1516 ;;     _sprintf
  1517 ;;       ___lwdiv
  1518 ;;       ___lwmod
  1519 ;;         ___lwdiv (ARG)
  1520 ;;       ___bmul (ARG)
  1521 ;;     _cmd
  1522 ;;       _LCD_STROBE
  1523 ;;     _string
  1524 ;;       _data
  1525 ;;         _LCD_STROBE
  1526 ;;   _getKey
  1527 ;;   _left
  1528 ;;     ___bmul
  1529 ;;   _right
  1530 ;;     ___bmul
  1531 ;;   _select
  1532 ;;     ___bmul
  1533 ;;     _takePic
  1534 ;;       _SendIRSequence
  1535 ;;         _SendIRPulseCycles
  1536 ;;   _deselect
  1537 ;;     ___bmul
  1538 ;;   _getData
  1539 ;;     ___wmul
  1540 ;;     ___lwdiv
  1541 ;;     ___lwtoft
  1542 ;;       ___ftpack
  1543 ;;       ___lwdiv (ARG)
  1544 ;;   _start
  1545 ;;     _printData
  1546 ;;       ___fttol
  1547 ;;         ___ftpack (ARG)
  1548 ;;       _clear
  1549 ;;         _cmd
  1550 ;;           _LCD_STROBE
  1551 ;;       _sprintf
  1552 ;;         ___lwdiv
  1553 ;;         ___lwmod
  1554 ;;           ___lwdiv (ARG)
  1555 ;;         ___bmul (ARG)
  1556 ;;       _cmd
  1557 ;;         _LCD_STROBE
  1558 ;;       _string
  1559 ;;         _data
  1560 ;;           _LCD_STROBE
  1561 ;;     _DelayS
  1562 ;;       _DelayMs
  1563 ;;     _spin
  1564 ;;       ___ftmul
  1565 ;;         ___ftpack
  1566 ;;         ___fttol (ARG)
  1567 ;;           ___ftpack (ARG)
  1568 ;;       ___fttol
  1569 ;;         ___ftpack (ARG)
  1570 ;;       _DelayMs
  1571 ;;       _abs
  1572 ;;       _motorRelax
  1573 ;;     _takePic
  1574 ;;       _SendIRSequence
  1575 ;;         _SendIRPulseCycles
  1576 ;;
  1577                           
  1578 ;; Address spaces:
  1579                           
  1580 ;;Name               Size   Autos  Total    Cost      Usage
  1581 ;;BANK3               60      0      2A       9       43.8%
  1582 ;;BITBANK3            60      0       0       8        0.0%
  1583 ;;SFR3                 0      0       0       4        0.0%
  1584 ;;BITSFR3              0      0       0       4        0.0%
  1585 ;;BANK2               60      0       0      11        0.0%
  1586 ;;BITBANK2            60      0       0      10        0.0%
  1587 ;;SFR2                 0      0       0       5        0.0%
  1588 ;;BITSFR2              0      0       0       5        0.0%
  1589 ;;SFR1                 0      0       0       2        0.0%
  1590 ;;BITSFR1              0      0       0       2        0.0%
  1591 ;;BANK1               50     1A      48       7       90.0%
  1592 ;;BITBANK1            50      0       0       6        0.0%
  1593 ;;CODE                 0      0       0       0        0.0%
  1594 ;;DATA                 0      0      D5      12        0.0%
  1595 ;;ABS                  0      0      D0       3        0.0%
  1596 ;;NULL                 0      0       0       0        0.0%
  1597 ;;STACK                0      0       5       2        0.0%
  1598 ;;BANK0               50     4F      50       5      100.0%
  1599 ;;BITBANK0            50      0       0       4        0.0%
  1600 ;;SFR0                 0      0       0       1        0.0%
  1601 ;;BITSFR0              0      0       0       1        0.0%
  1602 ;;COMMON               E      E       E       1      100.0%
  1603 ;;BITCOMMON            E      0       0       0        0.0%
  1604 ;;EEDATA             100      0       0       0        0.0%
  1605                           
  1606                           	global	_main
  1607                           psect	maintext,global,class=CODE,delta=2
  1608                           global __pmaintext
  1609  0650                     __pmaintext:
  1610                           
  1611 ;; *************** function _main *****************
  1612 ;; Defined at:
  1613 ;;		line 113 in file "main.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  myMenu         13   13[BANK1 ] struct menu
  1618 ;;  myData         11    2[BANK1 ] struct data
  1619 ;;  key             2    0[BANK1 ] int 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;		None               void
  1622 ;; Registers used:
  1623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 17F/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         0       0      26       0       0
  1631 ;;      Temps:          0       8       0       0       0
  1632 ;;      Totals:         0       8      26       0       0
  1633 ;;Total ram usage:       34 bytes
  1634 ;; Hardware stack levels required when called:    5
  1635 ;; This function calls:
  1636 ;;		_pic_init
  1637 ;;		_lcd_init
  1638 ;;		_motorRelax
  1639 ;;		_print
  1640 ;;		_getKey
  1641 ;;		_left
  1642 ;;		_right
  1643 ;;		_select
  1644 ;;		_deselect
  1645 ;;		_getData
  1646 ;;		_start
  1647 ;; This function is called by:
  1648 ;;		Startup code after reset
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           psect	maintext
  1652                           	file	"main.c"
  1653                           	line	113
  1654                           	global	__size_of_main
  1655  01B0                     	__size_of_main	equ	__end_of_main-_main
  1656                           	
  1657  0650                     _main:	
  1658                           	opt	stack 3
  1659                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1660                           	line	119
  1661                           	
  1662  0650                     l5526:	
  1663                           ;main.c: 114: int key;
  1664                           ;main.c: 115: static struct menuItem mainMenu[3] = {{"Settings","",255,255,1,255},{"Try 
                                 Features","",255,255,2,255},{"Start","",255,255,254,255}};
  1665                           ;main.c: 116: static struct menuItem settings[2] = {{"Total Time","",0,0,3,255},{"Total 
                                 Shots","",0,0,255,100}};
  1666                           ;main.c: 117: static struct menuItem try[1] = {{"Take a Picture","",0,1,253,255}};
  1667                           ;main.c: 118: static struct menuItem time[3] = {{"Hours","h", 1,0,255,0},{"Minutes","m",
                                  1,0,255,3},{"Seconds","s", 1,0,255,0}};
  1668                           ;main.c: 119: struct menu myMenu = {0,{0,0,0},{mainMenu,settings,try,time}};
  1669  0650  30CF               	movlw	(main@myMenu)&0ffh
  1670  0651  0084               	movwf	fsr0
  1671  0652  30A0               	movlw	low(main@F1933)
  1672  0653  1283               	bcf	status, 5	;RP0=0, select bank0
  1673  0654  1303               	bcf	status, 6	;RP1=0, select bank0
  1674  0655  00E7               	movwf	(??_main+0)+0
  1675  0656  0804               	movf	fsr0,w
  1676  0657  00E8               	movwf	((??_main+0)+0+1)
  1677  0658  300D               	movlw	13
  1678  0659  00E9               	movwf	((??_main+0)+0+2)
  1679  065A                     u5000:
  1680  065A  0867               	movf	(??_main+0)+0,w
  1681  065B  0084               	movwf	fsr0
  1682  065C  1383               	bcf	status, 7	;select IRP bank1
  1683                           	
  1684  065D  0800               	movf	indf,w
  1685  065E  00EA               	movwf	((??_main+0)+0+3)
  1686  065F  0AE7               	incf	(??_main+0)+0,f
  1687  0660  0868               	movf	((??_main+0)+0+1),w
  1688  0661  0084               	movwf	fsr0
  1689                           	
  1690  0662  086A               	movf	((??_main+0)+0+3),w
  1691  0663  0080               	movwf	indf
  1692  0664  0AE8               	incf	((??_main+0)+0+1),f
  1693  0665  0BE9               	decfsz	((??_main+0)+0+2),f
  1694  0666  2E5A               	goto	u5000
  1695                           	line	120
  1696                           ;main.c: 120: struct data myData = {0,0,0,0,0,0};
  1697  0667  30C4               	movlw	(main@myData)&0ffh
  1698  0668  0084               	movwf	fsr0
  1699  0669  30DC               	movlw	low(main@F1935)
  1700  066A  00E7               	movwf	(??_main+0)+0
  1701  066B  0804               	movf	fsr0,w
  1702  066C  00E8               	movwf	((??_main+0)+0+1)
  1703  066D  300B               	movlw	11
  1704  066E  00E9               	movwf	((??_main+0)+0+2)
  1705  066F                     u5010:
  1706  066F  0867               	movf	(??_main+0)+0,w
  1707  0670  0084               	movwf	fsr0
  1708  0671  1383               	bcf	status, 7	;select IRP bank1
  1709                           	
  1710  0672  0800               	movf	indf,w
  1711  0673  00EA               	movwf	((??_main+0)+0+3)
  1712  0674  0AE7               	incf	(??_main+0)+0,f
  1713  0675  0868               	movf	((??_main+0)+0+1),w
  1714  0676  0084               	movwf	fsr0
  1715                           	
  1716  0677  086A               	movf	((??_main+0)+0+3),w
  1717  0678  0080               	movwf	indf
  1718  0679  0AE8               	incf	((??_main+0)+0+1),f
  1719  067A  0BE9               	decfsz	((??_main+0)+0+2),f
  1720  067B  2E6F               	goto	u5010
  1721                           	line	123
  1722                           	
  1723  067C                     l5528:	
  1724                           ;main.c: 123: pic_init();
  1725  067C  160A  118A  279B   	fcall	_pic_init
              120A  118A         
  1726                           	line	124
  1727                           	
  1728  0681                     l5530:	
  1729                           ;main.c: 124: lcd_init();
  1730  0681  120A  158A  222B   	fcall	_lcd_init
              120A  118A         
  1731                           	line	125
  1732                           	
  1733  0686                     l5532:	
  1734                           ;main.c: 125: motorRelax();
  1735  0686  160A  118A  2749   	fcall	_motorRelax
              120A  118A         
  1736  068B  2F9C               	goto	l5550
  1737                           	line	129
  1738                           ;main.c: 129: while (1) {
  1739                           	
  1740  068C                     l1119:	
  1741                           	line	130
  1742                           ;main.c: 130: while(myMenu.start==0) {
  1743  068C  2F9C               	goto	l5550
  1744                           	
  1745  068D                     l1121:	
  1746                           	line	132
  1747                           	
  1748  068D                     l5534:	
  1749                           ;main.c: 132: print(myMenu);
  1750  068D  3030               	movlw	(?_print)&0ffh
  1751  068E  0084               	movwf	fsr0
  1752  068F  30CF               	movlw	low(main@myMenu)
  1753  0690  1283               	bcf	status, 5	;RP0=0, select bank0
  1754  0691  1303               	bcf	status, 6	;RP1=0, select bank0
  1755  0692  00E7               	movwf	(??_main+0)+0
  1756  0693  0804               	movf	fsr0,w
  1757  0694  00E8               	movwf	((??_main+0)+0+1)
  1758  0695  300D               	movlw	13
  1759  0696  00E9               	movwf	((??_main+0)+0+2)
  1760  0697                     u5020:
  1761  0697  0867               	movf	(??_main+0)+0,w
  1762  0698  0084               	movwf	fsr0
  1763  0699  1383               	bcf	status, 7	;select IRP bank1
  1764                           	
  1765  069A  0800               	movf	indf,w
  1766  069B  00EA               	movwf	((??_main+0)+0+3)
  1767  069C  0AE7               	incf	(??_main+0)+0,f
  1768  069D  0868               	movf	((??_main+0)+0+1),w
  1769  069E  0084               	movwf	fsr0
  1770                           	
  1771  069F  086A               	movf	((??_main+0)+0+3),w
  1772  06A0  0080               	movwf	indf
  1773  06A1  0AE8               	incf	((??_main+0)+0+1),f
  1774  06A2  0BE9               	decfsz	((??_main+0)+0+2),f
  1775  06A3  2E97               	goto	u5020
  1776  06A4  120A  118A  24A9   	fcall	_print
              120A  118A         
  1777                           	line	134
  1778                           	
  1779  06A9                     l5536:	
  1780                           ;main.c: 134: key=getKey();
  1781  06A9  120A  158A  22F4   	fcall	_getKey
              120A  118A         
  1782  06AE  0871               	movf	(1+(?_getKey)),w
  1783  06AF  1683               	bsf	status, 5	;RP0=1, select bank1
  1784  06B0  1303               	bcf	status, 6	;RP1=0, select bank1
  1785  06B1  01C3               	clrf	(main@key+1)^080h
  1786  06B2  07C3               	addwf	(main@key+1)^080h
  1787  06B3  0870               	movf	(0+(?_getKey)),w
  1788  06B4  01C2               	clrf	(main@key)^080h
  1789  06B5  07C2               	addwf	(main@key)^080h
  1790                           
  1791                           	line	136
  1792                           ;main.c: 136: switch (key) {
  1793  06B6  2F86               	goto	l5548
  1794                           	line	137
  1795                           ;main.c: 137: case 1: {
  1796                           	
  1797  06B7                     l1123:	
  1798                           	line	138
  1799                           	
  1800  06B7                     l5538:	
  1801                           ;main.c: 138: myMenu=left(myMenu);
  1802  06B7  3020               	movlw	(?_left)&0ffh
  1803  06B8  0084               	movwf	fsr0
  1804  06B9  30CF               	movlw	low(main@myMenu)
  1805  06BA  1283               	bcf	status, 5	;RP0=0, select bank0
  1806  06BB  1303               	bcf	status, 6	;RP1=0, select bank0
  1807  06BC  00E7               	movwf	(??_main+0)+0
  1808  06BD  0804               	movf	fsr0,w
  1809  06BE  00E8               	movwf	((??_main+0)+0+1)
  1810  06BF  300D               	movlw	13
  1811  06C0  00E9               	movwf	((??_main+0)+0+2)
  1812  06C1                     u5030:
  1813  06C1  0867               	movf	(??_main+0)+0,w
  1814  06C2  0084               	movwf	fsr0
  1815  06C3  1383               	bcf	status, 7	;select IRP bank1
  1816                           	
  1817  06C4  0800               	movf	indf,w
  1818  06C5  00EA               	movwf	((??_main+0)+0+3)
  1819  06C6  0AE7               	incf	(??_main+0)+0,f
  1820  06C7  0868               	movf	((??_main+0)+0+1),w
  1821  06C8  0084               	movwf	fsr0
  1822                           	
  1823  06C9  086A               	movf	((??_main+0)+0+3),w
  1824  06CA  0080               	movwf	indf
  1825  06CB  0AE8               	incf	((??_main+0)+0+1),f
  1826  06CC  0BE9               	decfsz	((??_main+0)+0+2),f
  1827  06CD  2EC1               	goto	u5030
  1828  06CE  120A  158A  2435   	fcall	_left
              120A  118A         
  1829  06D3  30CF               	movlw	(main@myMenu)&0ffh
  1830  06D4  0084               	movwf	fsr0
  1831  06D5  1283               	bcf	status, 5	;RP0=0, select bank0
  1832  06D6  1303               	bcf	status, 6	;RP1=0, select bank0
  1833  06D7  3020               	movlw	low((?_left))
  1834  06D8  00EB               	movwf	(??_main+4)+0
  1835  06D9  0804               	movf	fsr0,w
  1836  06DA  00EC               	movwf	((??_main+4)+0+1)
  1837  06DB  300D               	movlw	13
  1838  06DC  00ED               	movwf	((??_main+4)+0+2)
  1839  06DD                     u5040:
  1840  06DD  086B               	movf	(??_main+4)+0,w
  1841  06DE  0084               	movwf	fsr0
  1842  06DF  1383               	bcf	status, 7	;select IRP bank0
  1843                           	
  1844  06E0  0800               	movf	indf,w
  1845  06E1  00EE               	movwf	((??_main+4)+0+3)
  1846  06E2  0AEB               	incf	(??_main+4)+0,f
  1847  06E3  086C               	movf	((??_main+4)+0+1),w
  1848  06E4  0084               	movwf	fsr0
  1849                           	
  1850  06E5  086E               	movf	((??_main+4)+0+3),w
  1851  06E6  0080               	movwf	indf
  1852  06E7  0AEC               	incf	((??_main+4)+0+1),f
  1853  06E8  0BED               	decfsz	((??_main+4)+0+2),f
  1854  06E9  2EDD               	goto	u5040
  1855                           	line	139
  1856                           ;main.c: 139: break;
  1857  06EA  2F9C               	goto	l5550
  1858                           	line	141
  1859                           ;main.c: 140: }
  1860                           ;main.c: 141: case 2: {
  1861                           	
  1862  06EB                     l1125:	
  1863                           	line	142
  1864                           	
  1865  06EB                     l5540:	
  1866                           ;main.c: 142: myMenu=right(myMenu);
  1867  06EB  3020               	movlw	(?_right)&0ffh
  1868  06EC  0084               	movwf	fsr0
  1869  06ED  30CF               	movlw	low(main@myMenu)
  1870  06EE  1283               	bcf	status, 5	;RP0=0, select bank0
  1871  06EF  00E7               	movwf	(??_main+0)+0
  1872  06F0  0804               	movf	fsr0,w
  1873  06F1  00E8               	movwf	((??_main+0)+0+1)
  1874  06F2  300D               	movlw	13
  1875  06F3  00E9               	movwf	((??_main+0)+0+2)
  1876  06F4                     u5050:
  1877  06F4  0867               	movf	(??_main+0)+0,w
  1878  06F5  0084               	movwf	fsr0
  1879  06F6  1383               	bcf	status, 7	;select IRP bank1
  1880                           	
  1881  06F7  0800               	movf	indf,w
  1882  06F8  00EA               	movwf	((??_main+0)+0+3)
  1883  06F9  0AE7               	incf	(??_main+0)+0,f
  1884  06FA  0868               	movf	((??_main+0)+0+1),w
  1885  06FB  0084               	movwf	fsr0
  1886                           	
  1887  06FC  086A               	movf	((??_main+0)+0+3),w
  1888  06FD  0080               	movwf	indf
  1889  06FE  0AE8               	incf	((??_main+0)+0+1),f
  1890  06FF  0BE9               	decfsz	((??_main+0)+0+2),f
  1891  0700  2EF4               	goto	u5050
  1892  0701  120A  158A  24BC   	fcall	_right
              120A  118A         
  1893  0706  30CF               	movlw	(main@myMenu)&0ffh
  1894  0707  0084               	movwf	fsr0
  1895  0708  1283               	bcf	status, 5	;RP0=0, select bank0
  1896  0709  1303               	bcf	status, 6	;RP1=0, select bank0
  1897  070A  3020               	movlw	low((?_right))
  1898  070B  00EB               	movwf	(??_main+4)+0
  1899  070C  0804               	movf	fsr0,w
  1900  070D  00EC               	movwf	((??_main+4)+0+1)
  1901  070E  300D               	movlw	13
  1902  070F  00ED               	movwf	((??_main+4)+0+2)
  1903  0710                     u5060:
  1904  0710  086B               	movf	(??_main+4)+0,w
  1905  0711  0084               	movwf	fsr0
  1906  0712  1383               	bcf	status, 7	;select IRP bank0
  1907                           	
  1908  0713  0800               	movf	indf,w
  1909  0714  00EE               	movwf	((??_main+4)+0+3)
  1910  0715  0AEB               	incf	(??_main+4)+0,f
  1911  0716  086C               	movf	((??_main+4)+0+1),w
  1912  0717  0084               	movwf	fsr0
  1913                           	
  1914  0718  086E               	movf	((??_main+4)+0+3),w
  1915  0719  0080               	movwf	indf
  1916  071A  0AEC               	incf	((??_main+4)+0+1),f
  1917  071B  0BED               	decfsz	((??_main+4)+0+2),f
  1918  071C  2F10               	goto	u5060
  1919                           	line	143
  1920                           ;main.c: 143: break;
  1921  071D  2F9C               	goto	l5550
  1922                           	line	145
  1923                           ;main.c: 144: }
  1924                           ;main.c: 145: case 3: {
  1925                           	
  1926  071E                     l1126:	
  1927                           	line	146
  1928                           	
  1929  071E                     l5542:	
  1930                           ;main.c: 146: myMenu=select(myMenu);
  1931  071E  3020               	movlw	(?_select)&0ffh
  1932  071F  0084               	movwf	fsr0
  1933  0720  30CF               	movlw	low(main@myMenu)
  1934  0721  1283               	bcf	status, 5	;RP0=0, select bank0
  1935  0722  00E7               	movwf	(??_main+0)+0
  1936  0723  0804               	movf	fsr0,w
  1937  0724  00E8               	movwf	((??_main+0)+0+1)
  1938  0725  300D               	movlw	13
  1939  0726  00E9               	movwf	((??_main+0)+0+2)
  1940  0727                     u5070:
  1941  0727  0867               	movf	(??_main+0)+0,w
  1942  0728  0084               	movwf	fsr0
  1943  0729  1383               	bcf	status, 7	;select IRP bank1
  1944                           	
  1945  072A  0800               	movf	indf,w
  1946  072B  00EA               	movwf	((??_main+0)+0+3)
  1947  072C  0AE7               	incf	(??_main+0)+0,f
  1948  072D  0868               	movf	((??_main+0)+0+1),w
  1949  072E  0084               	movwf	fsr0
  1950                           	
  1951  072F  086A               	movf	((??_main+0)+0+3),w
  1952  0730  0080               	movwf	indf
  1953  0731  0AE8               	incf	((??_main+0)+0+1),f
  1954  0732  0BE9               	decfsz	((??_main+0)+0+2),f
  1955  0733  2F27               	goto	u5070
  1956  0734  120A  158A  2733   	fcall	_select
              120A  118A         
  1957  0739  30CF               	movlw	(main@myMenu)&0ffh
  1958  073A  0084               	movwf	fsr0
  1959  073B  1283               	bcf	status, 5	;RP0=0, select bank0
  1960  073C  1303               	bcf	status, 6	;RP1=0, select bank0
  1961  073D  3020               	movlw	low((?_select))
  1962  073E  00EB               	movwf	(??_main+4)+0
  1963  073F  0804               	movf	fsr0,w
  1964  0740  00EC               	movwf	((??_main+4)+0+1)
  1965  0741  300D               	movlw	13
  1966  0742  00ED               	movwf	((??_main+4)+0+2)
  1967  0743                     u5080:
  1968  0743  086B               	movf	(??_main+4)+0,w
  1969  0744  0084               	movwf	fsr0
  1970  0745  1383               	bcf	status, 7	;select IRP bank0
  1971                           	
  1972  0746  0800               	movf	indf,w
  1973  0747  00EE               	movwf	((??_main+4)+0+3)
  1974  0748  0AEB               	incf	(??_main+4)+0,f
  1975  0749  086C               	movf	((??_main+4)+0+1),w
  1976  074A  0084               	movwf	fsr0
  1977                           	
  1978  074B  086E               	movf	((??_main+4)+0+3),w
  1979  074C  0080               	movwf	indf
  1980  074D  0AEC               	incf	((??_main+4)+0+1),f
  1981  074E  0BED               	decfsz	((??_main+4)+0+2),f
  1982  074F  2F43               	goto	u5080
  1983                           	line	147
  1984                           ;main.c: 147: break;
  1985  0750  2F9C               	goto	l5550
  1986                           	line	149
  1987                           ;main.c: 148: }
  1988                           ;main.c: 149: case 4: {
  1989                           	
  1990  0751                     l1127:	
  1991                           	line	150
  1992                           	
  1993  0751                     l5544:	
  1994                           ;main.c: 150: myMenu=deselect(myMenu);
  1995  0751  3020               	movlw	(?_deselect)&0ffh
  1996  0752  0084               	movwf	fsr0
  1997  0753  30CF               	movlw	low(main@myMenu)
  1998  0754  1283               	bcf	status, 5	;RP0=0, select bank0
  1999  0755  00E7               	movwf	(??_main+0)+0
  2000  0756  0804               	movf	fsr0,w
  2001  0757  00E8               	movwf	((??_main+0)+0+1)
  2002  0758  300D               	movlw	13
  2003  0759  00E9               	movwf	((??_main+0)+0+2)
  2004  075A                     u5090:
  2005  075A  0867               	movf	(??_main+0)+0,w
  2006  075B  0084               	movwf	fsr0
  2007  075C  1383               	bcf	status, 7	;select IRP bank1
  2008                           	
  2009  075D  0800               	movf	indf,w
  2010  075E  00EA               	movwf	((??_main+0)+0+3)
  2011  075F  0AE7               	incf	(??_main+0)+0,f
  2012  0760  0868               	movf	((??_main+0)+0+1),w
  2013  0761  0084               	movwf	fsr0
  2014                           	
  2015  0762  086A               	movf	((??_main+0)+0+3),w
  2016  0763  0080               	movwf	indf
  2017  0764  0AE8               	incf	((??_main+0)+0+1),f
  2018  0765  0BE9               	decfsz	((??_main+0)+0+2),f
  2019  0766  2F5A               	goto	u5090
  2020  0767  120A  158A  25F0   	fcall	_deselect
              120A  118A         
  2021  076C  30CF               	movlw	(main@myMenu)&0ffh
  2022  076D  0084               	movwf	fsr0
  2023  076E  1283               	bcf	status, 5	;RP0=0, select bank0
  2024  076F  1303               	bcf	status, 6	;RP1=0, select bank0
  2025  0770  3020               	movlw	low((?_deselect))
  2026  0771  00EB               	movwf	(??_main+4)+0
  2027  0772  0804               	movf	fsr0,w
  2028  0773  00EC               	movwf	((??_main+4)+0+1)
  2029  0774  300D               	movlw	13
  2030  0775  00ED               	movwf	((??_main+4)+0+2)
  2031  0776                     u5100:
  2032  0776  086B               	movf	(??_main+4)+0,w
  2033  0777  0084               	movwf	fsr0
  2034  0778  1383               	bcf	status, 7	;select IRP bank0
  2035                           	
  2036  0779  0800               	movf	indf,w
  2037  077A  00EE               	movwf	((??_main+4)+0+3)
  2038  077B  0AEB               	incf	(??_main+4)+0,f
  2039  077C  086C               	movf	((??_main+4)+0+1),w
  2040  077D  0084               	movwf	fsr0
  2041                           	
  2042  077E  086E               	movf	((??_main+4)+0+3),w
  2043  077F  0080               	movwf	indf
  2044  0780  0AEC               	incf	((??_main+4)+0+1),f
  2045  0781  0BED               	decfsz	((??_main+4)+0+2),f
  2046  0782  2F76               	goto	u5100
  2047                           	line	151
  2048                           ;main.c: 151: break;
  2049  0783  2F9C               	goto	l5550
  2050                           	line	153
  2051                           ;main.c: 152: }
  2052                           ;main.c: 153: default: {1; break;}
  2053                           	
  2054  0784                     l1128:	
  2055  0784  2F9C               	goto	l5550
  2056                           	line	154
  2057                           	
  2058  0785                     l5546:	
  2059                           ;main.c: 154: }
  2060  0785  2F9C               	goto	l5550
  2061                           	line	136
  2062                           	
  2063  0786                     l1122:	
  2064                           	
  2065  0786                     l5548:	
  2066                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2067                           ; Switch size 1, requested type "space"
  2068                           ; Number of cases is 1, Range of values is 0 to 0
  2069                           ; switch strategies available:
  2070                           ; Name         Instructions Cycles
  2071                           ; simple_byte            4     3 (average)
  2072                           ; direct_byte           11     8 (fixed)
  2073                           ; jumptable            260     6 (fixed)
  2074                           ; rangetable             5     6 (fixed)
  2075                           ; spacedrange            8     9 (fixed)
  2076                           ; locatedrange           1     3 (fixed)
  2077                           ;	Chosen strategy is simple_byte
  2078                           
  2079  0786  1683               	bsf	status, 5	;RP0=1, select bank1
  2080  0787  1303               	bcf	status, 6	;RP1=0, select bank1
  2081  0788  0843               	movf (main@key+1)^080h,w
  2082                           	opt asmopt_off
  2083  0789  3A00               	xorlw	0^0	; case 0
  2084  078A  1903               	skipnz
  2085  078B  2F8D               	goto	l5584
  2086  078C  2F9C               	goto	l5550
  2087                           	opt asmopt_on
  2088                           	
  2089  078D                     l5584:	
  2090                           ; Switch size 1, requested type "space"
  2091                           ; Number of cases is 4, Range of values is 1 to 4
  2092                           ; switch strategies available:
  2093                           ; Name         Instructions Cycles
  2094                           ; simple_byte           13     7 (average)
  2095                           ; direct_byte           23    11 (fixed)
  2096                           ; jumptable            263     9 (fixed)
  2097                           ;	Chosen strategy is simple_byte
  2098                           
  2099  078D  0842               	movf (main@key)^080h,w
  2100                           	opt asmopt_off
  2101  078E  3A01               	xorlw	1^0	; case 1
  2102  078F  1903               	skipnz
  2103  0790  2EB7               	goto	l5538
  2104  0791  3A03               	xorlw	2^1	; case 2
  2105  0792  1903               	skipnz
  2106  0793  2EEB               	goto	l5540
  2107  0794  3A01               	xorlw	3^2	; case 3
  2108  0795  1903               	skipnz
  2109  0796  2F1E               	goto	l5542
  2110  0797  3A07               	xorlw	4^3	; case 4
  2111  0798  1903               	skipnz
  2112  0799  2F51               	goto	l5544
  2113  079A  2F9C               	goto	l5550
  2114                           	opt asmopt_on
  2115                           
  2116                           	line	154
  2117                           	
  2118  079B                     l1124:	
  2119  079B  2F9C               	goto	l5550
  2120                           	line	155
  2121                           	
  2122  079C                     l1120:	
  2123                           	line	130
  2124                           	
  2125  079C                     l5550:	
  2126  079C  1683               	bsf	status, 5	;RP0=1, select bank1
  2127  079D  1303               	bcf	status, 6	;RP1=0, select bank1
  2128  079E  0850               	movf	(main@myMenu+1)^080h,w
  2129  079F  044F               	iorwf	(main@myMenu)^080h,w
  2130  07A0  1903               	skipnz
  2131  07A1  2FA3               	goto	u5111
  2132  07A2  2FA4               	goto	u5110
  2133  07A3                     u5111:
  2134  07A3  2E8D               	goto	l5534
  2135  07A4                     u5110:
  2136  07A4  2FA5               	goto	l5552
  2137                           	
  2138  07A5                     l1129:	
  2139                           	line	157
  2140                           	
  2141  07A5                     l5552:	
  2142                           ;main.c: 155: }
  2143                           ;main.c: 157: myData=getData(myMenu);
  2144  07A5  3020               	movlw	(?_getData)&0ffh
  2145  07A6  0084               	movwf	fsr0
  2146  07A7  30CF               	movlw	low(main@myMenu)
  2147  07A8  1283               	bcf	status, 5	;RP0=0, select bank0
  2148  07A9  1303               	bcf	status, 6	;RP1=0, select bank0
  2149  07AA  00E7               	movwf	(??_main+0)+0
  2150  07AB  0804               	movf	fsr0,w
  2151  07AC  00E8               	movwf	((??_main+0)+0+1)
  2152  07AD  300D               	movlw	13
  2153  07AE  00E9               	movwf	((??_main+0)+0+2)
  2154  07AF                     u5120:
  2155  07AF  0867               	movf	(??_main+0)+0,w
  2156  07B0  0084               	movwf	fsr0
  2157  07B1  1383               	bcf	status, 7	;select IRP bank1
  2158                           	
  2159  07B2  0800               	movf	indf,w
  2160  07B3  00EA               	movwf	((??_main+0)+0+3)
  2161  07B4  0AE7               	incf	(??_main+0)+0,f
  2162  07B5  0868               	movf	((??_main+0)+0+1),w
  2163  07B6  0084               	movwf	fsr0
  2164                           	
  2165  07B7  086A               	movf	((??_main+0)+0+3),w
  2166  07B8  0080               	movwf	indf
  2167  07B9  0AE8               	incf	((??_main+0)+0+1),f
  2168  07BA  0BE9               	decfsz	((??_main+0)+0+2),f
  2169  07BB  2FAF               	goto	u5120
  2170  07BC  120A  118A  2039   	fcall	_getData
              120A  118A         
  2171  07C1  30C4               	movlw	(main@myData)&0ffh
  2172  07C2  0084               	movwf	fsr0
  2173  07C3  1283               	bcf	status, 5	;RP0=0, select bank0
  2174  07C4  1303               	bcf	status, 6	;RP1=0, select bank0
  2175  07C5  3020               	movlw	low((?_getData))
  2176  07C6  00EB               	movwf	(??_main+4)+0
  2177  07C7  0804               	movf	fsr0,w
  2178  07C8  00EC               	movwf	((??_main+4)+0+1)
  2179  07C9  300B               	movlw	11
  2180  07CA  00ED               	movwf	((??_main+4)+0+2)
  2181  07CB                     u5130:
  2182  07CB  086B               	movf	(??_main+4)+0,w
  2183  07CC  0084               	movwf	fsr0
  2184  07CD  1383               	bcf	status, 7	;select IRP bank0
  2185                           	
  2186  07CE  0800               	movf	indf,w
  2187  07CF  00EE               	movwf	((??_main+4)+0+3)
  2188  07D0  0AEB               	incf	(??_main+4)+0,f
  2189  07D1  086C               	movf	((??_main+4)+0+1),w
  2190  07D2  0084               	movwf	fsr0
  2191                           	
  2192  07D3  086E               	movf	((??_main+4)+0+3),w
  2193  07D4  0080               	movwf	indf
  2194  07D5  0AEC               	incf	((??_main+4)+0+1),f
  2195  07D6  0BED               	decfsz	((??_main+4)+0+2),f
  2196  07D7  2FCB               	goto	u5130
  2197                           	line	159
  2198                           	
  2199  07D8                     l5554:	
  2200                           ;main.c: 159: start(myData);
  2201  07D8  3052               	movlw	(?_start)&0ffh
  2202  07D9  0084               	movwf	fsr0
  2203  07DA  30C4               	movlw	low(main@myData)
  2204  07DB  00E7               	movwf	(??_main+0)+0
  2205  07DC  0804               	movf	fsr0,w
  2206  07DD  00E8               	movwf	((??_main+0)+0+1)
  2207  07DE  300B               	movlw	11
  2208  07DF  00E9               	movwf	((??_main+0)+0+2)
  2209  07E0                     u5140:
  2210  07E0  0867               	movf	(??_main+0)+0,w
  2211  07E1  0084               	movwf	fsr0
  2212  07E2  1383               	bcf	status, 7	;select IRP bank1
  2213                           	
  2214  07E3  0800               	movf	indf,w
  2215  07E4  00EA               	movwf	((??_main+0)+0+3)
  2216  07E5  0AE7               	incf	(??_main+0)+0,f
  2217  07E6  0868               	movf	((??_main+0)+0+1),w
  2218  07E7  0084               	movwf	fsr0
  2219                           	
  2220  07E8  086A               	movf	((??_main+0)+0+3),w
  2221  07E9  0080               	movwf	indf
  2222  07EA  0AE8               	incf	((??_main+0)+0+1),f
  2223  07EB  0BE9               	decfsz	((??_main+0)+0+2),f
  2224  07EC  2FE0               	goto	u5140
  2225  07ED  120A  158A  2556   	fcall	_start
              120A  118A         
  2226                           	line	161
  2227                           	
  2228  07F2                     l5556:	
  2229                           ;main.c: 161: motorRelax();
  2230  07F2  160A  118A  2749   	fcall	_motorRelax
              120A  118A         
  2231                           	line	163
  2232                           	
  2233  07F7                     l5558:	
  2234                           ;main.c: 163: myMenu.start=0;
  2235  07F7  1683               	bsf	status, 5	;RP0=1, select bank1
  2236  07F8  1303               	bcf	status, 6	;RP1=0, select bank1
  2237  07F9  01CF               	clrf	(main@myMenu)^080h
  2238  07FA  01D0               	clrf	(main@myMenu+1)^080h
  2239  07FB  2F9C               	goto	l5550
  2240                           	line	164
  2241                           	
  2242  07FC                     l1130:	
  2243                           	line	129
  2244  07FC  2F9C               	goto	l5550
  2245                           	
  2246  07FD                     l1131:	
  2247                           	line	165
  2248                           	
  2249  07FD                     l1132:	
  2250                           	global	start
  2251  07FD  120A  118A  2800   	ljmp	start
  2252                           	opt stack 0
  2253                           GLOBAL	__end_of_main
  2254  0800                     	__end_of_main:
  2255 ;; =============== function _main ends ============
  2256                           
  2257                           	signat	_main,88
  2258                           	global	_start
  2259                           psect	text1007,local,class=CODE,delta=2
  2260                           global __ptext1007
  2261  0D56                     __ptext1007:
  2262                           
  2263 ;; *************** function _start *****************
  2264 ;; Defined at:
  2265 ;;		line 177 in file "main.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  myData         11   50[BANK0 ] struct data
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  i               2   69[BANK0 ] int 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;		None               void
  2272 ;; Registers used:
  2273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2279 ;;      Params:         0      11       0       0       0
  2280 ;;      Locals:         0       2       0       0       0
  2281 ;;      Temps:          0       8       0       0       0
  2282 ;;      Totals:         0      21       0       0       0
  2283 ;;Total ram usage:       21 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    4
  2286 ;; This function calls:
  2287 ;;		_printData
  2288 ;;		_DelayS
  2289 ;;		_spin
  2290 ;;		_takePic
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           psect	text1007
  2296                           	file	"main.c"
  2297                           	line	177
  2298                           	global	__size_of_start
  2299  009A                     	__size_of_start	equ	__end_of_start-_start
  2300                           	
  2301  0D56                     _start:	
  2302                           	opt	stack 3
  2303                           ; Regs used in _start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2304                           	line	179
  2305                           	
  2306  0D56                     l5418:	
  2307                           ;main.c: 178: int i;
  2308                           ;main.c: 179: printData(myData);
  2309  0D56  3030               	movlw	(?_printData)&0ffh
  2310  0D57  0084               	movwf	fsr0
  2311  0D58  3052               	movlw	low(start@myData)
  2312  0D59  1283               	bcf	status, 5	;RP0=0, select bank0
  2313  0D5A  1303               	bcf	status, 6	;RP1=0, select bank0
  2314  0D5B  00DD               	movwf	(??_start+0)+0
  2315  0D5C  0804               	movf	fsr0,w
  2316  0D5D  00DE               	movwf	((??_start+0)+0+1)
  2317  0D5E  300B               	movlw	11
  2318  0D5F  00DF               	movwf	((??_start+0)+0+2)
  2319  0D60                     u4780:
  2320  0D60  085D               	movf	(??_start+0)+0,w
  2321  0D61  0084               	movwf	fsr0
  2322  0D62  1383               	bcf	status, 7	;select IRP bank0
  2323                           	
  2324  0D63  0800               	movf	indf,w
  2325  0D64  00E0               	movwf	((??_start+0)+0+3)
  2326  0D65  0ADD               	incf	(??_start+0)+0,f
  2327  0D66  085E               	movf	((??_start+0)+0+1),w
  2328  0D67  0084               	movwf	fsr0
  2329                           	
  2330  0D68  0860               	movf	((??_start+0)+0+3),w
  2331  0D69  0080               	movwf	indf
  2332  0D6A  0ADE               	incf	((??_start+0)+0+1),f
  2333  0D6B  0BDF               	decfsz	((??_start+0)+0+2),f
  2334  0D6C  2D60               	goto	u4780
  2335  0D6D  120A  158A  2348   	fcall	_printData
              120A  158A         
  2336                           	line	181
  2337                           	
  2338  0D72                     l5420:	
  2339                           ;main.c: 181: for (i=0; i<myData.totalShots; i++) {
  2340  0D72  1283               	bcf	status, 5	;RP0=0, select bank0
  2341  0D73  1303               	bcf	status, 6	;RP1=0, select bank0
  2342  0D74  01E5               	clrf	(start@i)
  2343  0D75  01E6               	clrf	(start@i+1)
  2344  0D76  2DDE               	goto	l5430
  2345                           	
  2346  0D77                     l1145:	
  2347                           	line	182
  2348                           	
  2349  0D77                     l5422:	
  2350                           ;main.c: 182: DelayS(myData.delay_btw_shots);
  2351  0D77  0857               	movf	0+(start@myData)+05h,w
  2352  0D78  120A  158A  20CE   	fcall	_DelayS
              120A  158A         
  2353                           	line	183
  2354                           	
  2355  0D7D                     l5424:	
  2356                           ;main.c: 183: myData=spin(myData);
  2357  0D7D  303A               	movlw	(?_spin)&0ffh
  2358  0D7E  0084               	movwf	fsr0
  2359  0D7F  3052               	movlw	low(start@myData)
  2360  0D80  1283               	bcf	status, 5	;RP0=0, select bank0
  2361  0D81  1303               	bcf	status, 6	;RP1=0, select bank0
  2362  0D82  00DD               	movwf	(??_start+0)+0
  2363  0D83  0804               	movf	fsr0,w
  2364  0D84  00DE               	movwf	((??_start+0)+0+1)
  2365  0D85  300B               	movlw	11
  2366  0D86  00DF               	movwf	((??_start+0)+0+2)
  2367  0D87                     u4790:
  2368  0D87  085D               	movf	(??_start+0)+0,w
  2369  0D88  0084               	movwf	fsr0
  2370  0D89  1383               	bcf	status, 7	;select IRP bank0
  2371                           	
  2372  0D8A  0800               	movf	indf,w
  2373  0D8B  00E0               	movwf	((??_start+0)+0+3)
  2374  0D8C  0ADD               	incf	(??_start+0)+0,f
  2375  0D8D  085E               	movf	((??_start+0)+0+1),w
  2376  0D8E  0084               	movwf	fsr0
  2377                           	
  2378  0D8F  0860               	movf	((??_start+0)+0+3),w
  2379  0D90  0080               	movwf	indf
  2380  0D91  0ADE               	incf	((??_start+0)+0+1),f
  2381  0D92  0BDF               	decfsz	((??_start+0)+0+2),f
  2382  0D93  2D87               	goto	u4790
  2383  0D94  120A  118A  233F   	fcall	_spin
              120A  158A         
  2384  0D99  3052               	movlw	(start@myData)&0ffh
  2385  0D9A  0084               	movwf	fsr0
  2386  0D9B  1283               	bcf	status, 5	;RP0=0, select bank0
  2387  0D9C  1303               	bcf	status, 6	;RP1=0, select bank0
  2388  0D9D  303A               	movlw	low((?_spin))
  2389  0D9E  00E1               	movwf	(??_start+4)+0
  2390  0D9F  0804               	movf	fsr0,w
  2391  0DA0  00E2               	movwf	((??_start+4)+0+1)
  2392  0DA1  300B               	movlw	11
  2393  0DA2  00E3               	movwf	((??_start+4)+0+2)
  2394  0DA3                     u4800:
  2395  0DA3  0861               	movf	(??_start+4)+0,w
  2396  0DA4  0084               	movwf	fsr0
  2397  0DA5  1383               	bcf	status, 7	;select IRP bank0
  2398                           	
  2399  0DA6  0800               	movf	indf,w
  2400  0DA7  00E4               	movwf	((??_start+4)+0+3)
  2401  0DA8  0AE1               	incf	(??_start+4)+0,f
  2402  0DA9  0862               	movf	((??_start+4)+0+1),w
  2403  0DAA  0084               	movwf	fsr0
  2404                           	
  2405  0DAB  0864               	movf	((??_start+4)+0+3),w
  2406  0DAC  0080               	movwf	indf
  2407  0DAD  0AE2               	incf	((??_start+4)+0+1),f
  2408  0DAE  0BE3               	decfsz	((??_start+4)+0+2),f
  2409  0DAF  2DA3               	goto	u4800
  2410                           	line	184
  2411                           	
  2412  0DB0                     l5426:	
  2413                           ;main.c: 184: myData.actualShots=takePic(myData.actualShots);
  2414  0DB0  085C               	movf	0+(start@myData)+0Ah,w
  2415  0DB1  160A  118A  27E5   	fcall	_takePic
              120A  158A         
  2416  0DB6  1283               	bcf	status, 5	;RP0=0, select bank0
  2417  0DB7  1303               	bcf	status, 6	;RP1=0, select bank0
  2418  0DB8  00DD               	movwf	(??_start+0)+0
  2419  0DB9  085D               	movf	(??_start+0)+0,w
  2420  0DBA  00DC               	movwf	0+(start@myData)+0Ah
  2421                           	line	185
  2422                           ;main.c: 185: printData(myData);
  2423  0DBB  3030               	movlw	(?_printData)&0ffh
  2424  0DBC  0084               	movwf	fsr0
  2425  0DBD  3052               	movlw	low(start@myData)
  2426  0DBE  00DD               	movwf	(??_start+0)+0
  2427  0DBF  0804               	movf	fsr0,w
  2428  0DC0  00DE               	movwf	((??_start+0)+0+1)
  2429  0DC1  300B               	movlw	11
  2430  0DC2  00DF               	movwf	((??_start+0)+0+2)
  2431  0DC3                     u4810:
  2432  0DC3  085D               	movf	(??_start+0)+0,w
  2433  0DC4  0084               	movwf	fsr0
  2434  0DC5  1383               	bcf	status, 7	;select IRP bank0
  2435                           	
  2436  0DC6  0800               	movf	indf,w
  2437  0DC7  00E0               	movwf	((??_start+0)+0+3)
  2438  0DC8  0ADD               	incf	(??_start+0)+0,f
  2439  0DC9  085E               	movf	((??_start+0)+0+1),w
  2440  0DCA  0084               	movwf	fsr0
  2441                           	
  2442  0DCB  0860               	movf	((??_start+0)+0+3),w
  2443  0DCC  0080               	movwf	indf
  2444  0DCD  0ADE               	incf	((??_start+0)+0+1),f
  2445  0DCE  0BDF               	decfsz	((??_start+0)+0+2),f
  2446  0DCF  2DC3               	goto	u4810
  2447  0DD0  120A  158A  2348   	fcall	_printData
              120A  158A         
  2448                           	line	181
  2449                           	
  2450  0DD5                     l5428:	
  2451  0DD5  3001               	movlw	low(01h)
  2452  0DD6  1283               	bcf	status, 5	;RP0=0, select bank0
  2453  0DD7  1303               	bcf	status, 6	;RP1=0, select bank0
  2454  0DD8  07E5               	addwf	(start@i),f
  2455  0DD9  1803               	skipnc
  2456  0DDA  0AE6               	incf	(start@i+1),f
  2457  0DDB  3000               	movlw	high(01h)
  2458  0DDC  07E6               	addwf	(start@i+1),f
  2459  0DDD  2DDE               	goto	l5430
  2460                           	
  2461  0DDE                     l1144:	
  2462                           	
  2463  0DDE                     l5430:	
  2464  0DDE  085A               	movf	1+(start@myData)+07h,w
  2465  0DDF  0266               	subwf	(start@i+1),w
  2466  0DE0  1D03               	skipz
  2467  0DE1  2DE4               	goto	u4825
  2468  0DE2  0859               	movf	0+(start@myData)+07h,w
  2469  0DE3  0265               	subwf	(start@i),w
  2470  0DE4                     u4825:
  2471  0DE4  1C03               	skipc
  2472  0DE5  2DE7               	goto	u4821
  2473  0DE6  2DE8               	goto	u4820
  2474  0DE7                     u4821:
  2475  0DE7  2D77               	goto	l5422
  2476  0DE8                     u4820:
  2477  0DE8  2DE9               	goto	l5432
  2478                           	
  2479  0DE9                     l1146:	
  2480                           	line	188
  2481                           	
  2482  0DE9                     l5432:	
  2483                           ;main.c: 186: }
  2484                           ;main.c: 188: DelayS(2);
  2485  0DE9  3002               	movlw	(02h)
  2486  0DEA  120A  158A  20CE   	fcall	_DelayS
              120A  158A         
  2487                           	line	189
  2488                           	
  2489  0DEF                     l1147:	
  2490  0DEF  0008               	return
  2491                           	opt stack 0
  2492                           GLOBAL	__end_of_start
  2493  0DF0                     	__end_of_start:
  2494 ;; =============== function _start ends ============
  2495                           
  2496                           	signat	_start,4216
  2497                           	global	_printData
  2498                           psect	text1008,local,class=CODE,delta=2
  2499                           global __ptext1008
  2500  0B48                     __ptext1008:
  2501                           
  2502 ;; *************** function _printData *****************
  2503 ;; Defined at:
  2504 ;;		line 339 in file "main.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  myData         11   16[BANK0 ] struct data
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  buffer         16   32[BANK0 ] unsigned char [16]
  2509 ;;  morelessspin    2   48[BANK0 ] int 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;		None               void
  2512 ;; Registers used:
  2513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         0      11       0       0       0
  2520 ;;      Locals:         0      18       0       0       0
  2521 ;;      Temps:          0       5       0       0       0
  2522 ;;      Totals:         0      34       0       0       0
  2523 ;;Total ram usage:       34 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    3
  2526 ;; This function calls:
  2527 ;;		___fttol
  2528 ;;		_clear
  2529 ;;		_sprintf
  2530 ;;		_cmd
  2531 ;;		_string
  2532 ;; This function is called by:
  2533 ;;		_start
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           psect	text1008
  2537                           	file	"main.c"
  2538                           	line	339
  2539                           	global	__size_of_printData
  2540  0072                     	__size_of_printData	equ	__end_of_printData-_printData
  2541                           	
  2542  0B48                     _printData:	
  2543                           	opt	stack 3
  2544                           ; Regs used in _printData: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2545                           	line	341
  2546                           	
  2547  0B48                     l5404:	
  2548                           ;main.c: 340: char buffer[16];
  2549                           ;main.c: 341: int morelessspins=myData.spins_btw_shots;
  2550  0B48  3002               	movlw	(02h)
  2551  0B49  3E30               	addlw	printData@myData&0ffh
  2552  0B4A  0084               	movwf	fsr0
  2553  0B4B  1383               	bcf	status, 7	;select IRP bank0
  2554  0B4C  0800               	movf	indf,w
  2555  0B4D  00F8               	movwf	(?___fttol)
  2556  0B4E  0A84               	incf	fsr0,f
  2557  0B4F  0800               	movf	indf,w
  2558  0B50  00F9               	movwf	(?___fttol+1)
  2559  0B51  0A84               	incf	fsr0,f
  2560  0B52  0800               	movf	indf,w
  2561  0B53  00FA               	movwf	(?___fttol+2)
  2562  0B54  120A  158A  268D   	fcall	___fttol
              120A  158A         
  2563  0B59  0879               	movf	1+(((0+(?___fttol)))),w
  2564  0B5A  1283               	bcf	status, 5	;RP0=0, select bank0
  2565  0B5B  1303               	bcf	status, 6	;RP1=0, select bank0
  2566  0B5C  01D1               	clrf	(printData@morelessspins+1)
  2567  0B5D  07D1               	addwf	(printData@morelessspins+1)
  2568  0B5E  0878               	movf	0+(((0+(?___fttol)))),w
  2569  0B5F  01D0               	clrf	(printData@morelessspins)
  2570  0B60  07D0               	addwf	(printData@morelessspins)
  2571                           
  2572                           	line	342
  2573                           	
  2574  0B61                     l5406:	
  2575                           ;main.c: 342: clear();
  2576  0B61  160A  118A  2750   	fcall	_clear
              120A  158A         
  2577                           	line	343
  2578                           	
  2579  0B66                     l5408:	
  2580                           ;main.c: 343: sprintf(buffer,"Took:%d ToDo:%d",myData.actualShots, myData.totalShots-myD
                                 ata.actualShots);
  2581  0B66  302F               	movlw	((STR_23-__stringbase))&0ffh
  2582  0B67  1283               	bcf	status, 5	;RP0=0, select bank0
  2583  0B68  1303               	bcf	status, 6	;RP1=0, select bank0
  2584  0B69  00BB               	movwf	(??_printData+0)+0
  2585  0B6A  083B               	movf	(??_printData+0)+0,w
  2586  0B6B  00A0               	movwf	(?_sprintf)
  2587  0B6C  083A               	movf	0+(printData@myData)+0Ah,w
  2588  0B6D  00BC               	movwf	(??_printData+1)+0
  2589  0B6E  01BD               	clrf	(??_printData+1)+0+1
  2590  0B6F  083C               	movf	0+(??_printData+1)+0,w
  2591  0B70  00A1               	movwf	0+(?_sprintf)+01h
  2592  0B71  083D               	movf	1+(??_printData+1)+0,w
  2593  0B72  00A2               	movwf	1+(?_sprintf)+01h
  2594  0B73  083A               	movf	0+(printData@myData)+0Ah,w
  2595  0B74  00BE               	movwf	(??_printData+3)+0
  2596  0B75  01BF               	clrf	(??_printData+3)+0+1
  2597  0B76  09BE               	comf	(??_printData+3)+0,f
  2598  0B77  09BF               	comf	(??_printData+3)+1,f
  2599  0B78  0ABE               	incf	(??_printData+3)+0,f
  2600  0B79  1903               	skipnz
  2601  0B7A  0ABF               	incf	(??_printData+3)+1,f
  2602  0B7B  0837               	movf	0+(printData@myData)+07h,w
  2603  0B7C  073E               	addwf	0+(??_printData+3)+0,w
  2604  0B7D  00A3               	movwf	0+(?_sprintf)+03h
  2605  0B7E  0838               	movf	1+(printData@myData)+07h,w
  2606  0B7F  1803               	skipnc
  2607  0B80  0A38               	incf	1+(printData@myData)+07h,w
  2608  0B81  073F               	addwf	1+(??_printData+3)+0,w
  2609  0B82  00A4               	movwf	1+0+(?_sprintf)+03h
  2610  0B83  3040               	movlw	(printData@buffer)&0ffh
  2611  0B84  120A  118A  2206   	fcall	_sprintf
              120A  158A         
  2612                           	line	344
  2613                           	
  2614  0B89                     l5410:	
  2615                           ;main.c: 344: cmd(0x80);
  2616  0B89  3080               	movlw	(080h)
  2617  0B8A  120A  158A  21A1   	fcall	_cmd
              120A  158A         
  2618                           	line	345
  2619                           	
  2620  0B8F                     l5412:	
  2621                           ;main.c: 345: string(buffer);
  2622  0B8F  3040               	movlw	(printData@buffer)&0ffh
  2623  0B90  160A  118A  27CB   	fcall	_string
              120A  158A         
  2624                           	line	346
  2625                           ;main.c: 346: sprintf(buffer,"Sp:%d Sc:%d",morelessspins, myData.delay_btw_shots);
  2626  0B95  305B               	movlw	((STR_24-__stringbase))&0ffh
  2627  0B96  1283               	bcf	status, 5	;RP0=0, select bank0
  2628  0B97  1303               	bcf	status, 6	;RP1=0, select bank0
  2629  0B98  00BB               	movwf	(??_printData+0)+0
  2630  0B99  083B               	movf	(??_printData+0)+0,w
  2631  0B9A  00A0               	movwf	(?_sprintf)
  2632  0B9B  0851               	movf	(printData@morelessspins+1),w
  2633  0B9C  01A2               	clrf	1+(?_sprintf)+01h
  2634  0B9D  07A2               	addwf	1+(?_sprintf)+01h
  2635  0B9E  0850               	movf	(printData@morelessspins),w
  2636  0B9F  01A1               	clrf	0+(?_sprintf)+01h
  2637  0BA0  07A1               	addwf	0+(?_sprintf)+01h
  2638                           
  2639  0BA1  0836               	movf	1+(printData@myData)+05h,w
  2640  0BA2  01A4               	clrf	1+(?_sprintf)+03h
  2641  0BA3  07A4               	addwf	1+(?_sprintf)+03h
  2642  0BA4  0835               	movf	0+(printData@myData)+05h,w
  2643  0BA5  01A3               	clrf	0+(?_sprintf)+03h
  2644  0BA6  07A3               	addwf	0+(?_sprintf)+03h
  2645                           
  2646  0BA7  3040               	movlw	(printData@buffer)&0ffh
  2647  0BA8  120A  118A  2206   	fcall	_sprintf
              120A  158A         
  2648                           	line	347
  2649                           	
  2650  0BAD                     l5414:	
  2651                           ;main.c: 347: cmd(0xc0);
  2652  0BAD  30C0               	movlw	(0C0h)
  2653  0BAE  120A  158A  21A1   	fcall	_cmd
              120A  158A         
  2654                           	line	348
  2655                           	
  2656  0BB3                     l5416:	
  2657                           ;main.c: 348: string(buffer);
  2658  0BB3  3040               	movlw	(printData@buffer)&0ffh
  2659  0BB4  160A  118A  27CB   	fcall	_string
              120A  158A         
  2660                           	line	349
  2661                           	
  2662  0BB9                     l1234:	
  2663  0BB9  0008               	return
  2664                           	opt stack 0
  2665                           GLOBAL	__end_of_printData
  2666  0BBA                     	__end_of_printData:
  2667 ;; =============== function _printData ends ============
  2668                           
  2669                           	signat	_printData,4216
  2670                           	global	_print
  2671                           psect	text1009,local,class=CODE,delta=2
  2672                           global __ptext1009
  2673  04A9                     __ptext1009:
  2674                           
  2675 ;; *************** function _print *****************
  2676 ;; Defined at:
  2677 ;;		line 318 in file "main.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  myMenu         13   16[BANK0 ] struct menu
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  buffer         16   47[BANK0 ] unsigned char [16]
  2682 ;; Return value:  Size  Location     Type
  2683 ;;		None               void
  2684 ;; Registers used:
  2685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         0      13       0       0       0
  2692 ;;      Locals:         0      16       0       0       0
  2693 ;;      Temps:          0      18       0       0       0
  2694 ;;      Totals:         0      47       0       0       0
  2695 ;;Total ram usage:       47 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    3
  2698 ;; This function calls:
  2699 ;;		_clear
  2700 ;;		___bmul
  2701 ;;		_sprintf
  2702 ;;		_cmd
  2703 ;;		_string
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           psect	text1009
  2709                           	file	"main.c"
  2710                           	line	318
  2711                           	global	__size_of_print
  2712  01A7                     	__size_of_print	equ	__end_of_print-_print
  2713                           	
  2714  04A9                     _print:	
  2715                           	opt	stack 4
  2716                           ; Regs used in _print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2717                           	line	321
  2718                           	
  2719  04A9                     l5378:	
  2720                           ;main.c: 320: char buffer[16];
  2721                           ;main.c: 321: clear();
  2722  04A9  160A  118A  2750   	fcall	_clear
              120A  118A         
  2723                           	line	322
  2724                           	
  2725  04AE                     l5380:	
  2726                           ;main.c: 322: if (myMenu.pos.set==0)
  2727  04AE  1283               	bcf	status, 5	;RP0=0, select bank0
  2728  04AF  1303               	bcf	status, 6	;RP1=0, select bank0
  2729  04B0  08B4               	movf	0+(print@myMenu)+04h,f
  2730  04B1  1D03               	skipz
  2731  04B2  2CB4               	goto	u4751
  2732  04B3  2CB5               	goto	u4750
  2733  04B4                     u4751:
  2734  04B4  2CE7               	goto	l5384
  2735  04B5                     u4750:
  2736                           	line	323
  2737                           	
  2738  04B5                     l5382:	
  2739                           ;main.c: 323: sprintf(buffer,"> %s",myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].voi
                                 ce);
  2740  04B5  30BF               	movlw	((STR_19-__stringbase))&0ffh
  2741  04B6  00BD               	movwf	(??_print+0)+0
  2742  04B7  083D               	movf	(??_print+0)+0,w
  2743  04B8  00A0               	movwf	(?_sprintf)
  2744  04B9  0832               	movf	0+(print@myMenu)+02h,w
  2745  04BA  00BE               	movwf	(??_print+1)+0
  2746  04BB  073E               	addwf	(??_print+1)+0,w
  2747  04BC  3E05               	addlw	05h
  2748  04BD  3E30               	addlw	print@myMenu&0ffh
  2749  04BE  0084               	movwf	fsr0
  2750  04BF  1383               	bcf	status, 7	;select IRP bank0
  2751  04C0  0800               	movf	indf,w
  2752  04C1  00BF               	movwf	(??_print+2)+0+0
  2753  04C2  0A84               	incf	fsr0,f
  2754  04C3  0800               	movf	indf,w
  2755  04C4  00C0               	movwf	(??_print+2)+0+1
  2756  04C5  3007               	movlw	(07h)
  2757  04C6  00C1               	movwf	(??_print+4)+0
  2758  04C7  0841               	movf	(??_print+4)+0,w
  2759  04C8  00F0               	movwf	(?___bmul)
  2760  04C9  0833               	movf	0+(print@myMenu)+03h,w
  2761  04CA  160A  118A  27B3   	fcall	___bmul
              120A  118A         
  2762  04CF  1283               	bcf	status, 5	;RP0=0, select bank0
  2763  04D0  1303               	bcf	status, 6	;RP1=0, select bank0
  2764  04D1  073F               	addwf	0+(??_print+2)+0,w
  2765  04D2  00C2               	movwf	(??_print+5)+0
  2766  04D3  0840               	movf	1+(??_print+2)+0,w
  2767  04D4  1803               	skipnc
  2768  04D5  3E01               	addlw	1
  2769  04D6  00C3               	movwf	1+((??_print+5)+0)
  2770  04D7  0842               	movf	0+(??_print+5)+0,w
  2771  04D8  0084               	movwf	fsr0
  2772  04D9  1783               	bsf	status,7
  2773  04DA  1C43               	btfss	1+(??_print+5)+0,0
  2774  04DB  1383               	bcf	status,7
  2775  04DC  0800               	movf	indf,w
  2776  04DD  00C4               	movwf	(??_print+7)+0
  2777  04DE  0844               	movf	(??_print+7)+0,w
  2778  04DF  00A1               	movwf	(0+?_sprintf+01h)
  2779  04E0  304F               	movlw	(print@buffer)&0ffh
  2780  04E1  120A  118A  2206   	fcall	_sprintf
              120A  118A         
  2781  04E6  2D1B               	goto	l5386
  2782                           	line	324
  2783                           	
  2784  04E7                     l1226:	
  2785                           	
  2786  04E7                     l5384:	
  2787                           ;main.c: 324: else sprintf(buffer,"  %s",myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index
                                 ].voice);
  2788  04E7  30BA               	movlw	((STR_20-__stringbase))&0ffh
  2789  04E8  1283               	bcf	status, 5	;RP0=0, select bank0
  2790  04E9  1303               	bcf	status, 6	;RP1=0, select bank0
  2791  04EA  00BD               	movwf	(??_print+0)+0
  2792  04EB  083D               	movf	(??_print+0)+0,w
  2793  04EC  00A0               	movwf	(?_sprintf)
  2794  04ED  0832               	movf	0+(print@myMenu)+02h,w
  2795  04EE  00BE               	movwf	(??_print+1)+0
  2796  04EF  073E               	addwf	(??_print+1)+0,w
  2797  04F0  3E05               	addlw	05h
  2798  04F1  3E30               	addlw	print@myMenu&0ffh
  2799  04F2  0084               	movwf	fsr0
  2800  04F3  1383               	bcf	status, 7	;select IRP bank0
  2801  04F4  0800               	movf	indf,w
  2802  04F5  00BF               	movwf	(??_print+2)+0+0
  2803  04F6  0A84               	incf	fsr0,f
  2804  04F7  0800               	movf	indf,w
  2805  04F8  00C0               	movwf	(??_print+2)+0+1
  2806  04F9  3007               	movlw	(07h)
  2807  04FA  00C1               	movwf	(??_print+4)+0
  2808  04FB  0841               	movf	(??_print+4)+0,w
  2809  04FC  00F0               	movwf	(?___bmul)
  2810  04FD  0833               	movf	0+(print@myMenu)+03h,w
  2811  04FE  160A  118A  27B3   	fcall	___bmul
              120A  118A         
  2812  0503  1283               	bcf	status, 5	;RP0=0, select bank0
  2813  0504  1303               	bcf	status, 6	;RP1=0, select bank0
  2814  0505  073F               	addwf	0+(??_print+2)+0,w
  2815  0506  00C2               	movwf	(??_print+5)+0
  2816  0507  0840               	movf	1+(??_print+2)+0,w
  2817  0508  1803               	skipnc
  2818  0509  3E01               	addlw	1
  2819  050A  00C3               	movwf	1+((??_print+5)+0)
  2820  050B  0842               	movf	0+(??_print+5)+0,w
  2821  050C  0084               	movwf	fsr0
  2822  050D  1783               	bsf	status,7
  2823  050E  1C43               	btfss	1+(??_print+5)+0,0
  2824  050F  1383               	bcf	status,7
  2825  0510  0800               	movf	indf,w
  2826  0511  00C4               	movwf	(??_print+7)+0
  2827  0512  0844               	movf	(??_print+7)+0,w
  2828  0513  00A1               	movwf	(0+?_sprintf+01h)
  2829  0514  304F               	movlw	(print@buffer)&0ffh
  2830  0515  120A  118A  2206   	fcall	_sprintf
              120A  118A         
  2831  051A  2D1B               	goto	l5386
  2832                           	
  2833  051B                     l1227:	
  2834                           	line	325
  2835                           	
  2836  051B                     l5386:	
  2837                           ;main.c: 325: cmd(0x80);
  2838  051B  3080               	movlw	(080h)
  2839  051C  120A  158A  21A1   	fcall	_cmd
              120A  118A         
  2840                           	line	326
  2841                           	
  2842  0521                     l5388:	
  2843                           ;main.c: 326: string(buffer);
  2844  0521  304F               	movlw	(print@buffer)&0ffh
  2845  0522  160A  118A  27CB   	fcall	_string
              120A  118A         
  2846                           	line	328
  2847                           	
  2848  0527                     l5390:	
  2849                           ;main.c: 328: if (myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].value!=255) {
  2850  0527  1283               	bcf	status, 5	;RP0=0, select bank0
  2851  0528  1303               	bcf	status, 6	;RP1=0, select bank0
  2852  0529  0832               	movf	0+(print@myMenu)+02h,w
  2853  052A  00BD               	movwf	(??_print+0)+0
  2854  052B  073D               	addwf	(??_print+0)+0,w
  2855  052C  3E05               	addlw	05h
  2856  052D  3E30               	addlw	print@myMenu&0ffh
  2857  052E  0084               	movwf	fsr0
  2858  052F  1383               	bcf	status, 7	;select IRP bank0
  2859  0530  0800               	movf	indf,w
  2860  0531  00BE               	movwf	(??_print+1)+0+0
  2861  0532  0A84               	incf	fsr0,f
  2862  0533  0800               	movf	indf,w
  2863  0534  00BF               	movwf	(??_print+1)+0+1
  2864  0535  3007               	movlw	(07h)
  2865  0536  00C0               	movwf	(??_print+3)+0
  2866  0537  0840               	movf	(??_print+3)+0,w
  2867  0538  00F0               	movwf	(?___bmul)
  2868  0539  0833               	movf	0+(print@myMenu)+03h,w
  2869  053A  160A  118A  27B3   	fcall	___bmul
              120A  118A         
  2870  053F  1283               	bcf	status, 5	;RP0=0, select bank0
  2871  0540  1303               	bcf	status, 6	;RP1=0, select bank0
  2872  0541  073E               	addwf	0+(??_print+1)+0,w
  2873  0542  00C1               	movwf	(??_print+4)+0
  2874  0543  083F               	movf	1+(??_print+1)+0,w
  2875  0544  1803               	skipnc
  2876  0545  3E01               	addlw	1
  2877  0546  00C2               	movwf	1+((??_print+4)+0)
  2878  0547  0841               	movf	0+(??_print+4)+0,w
  2879  0548  3E05               	addlw	low(05h)
  2880  0549  00C3               	movwf	(??_print+6)+0
  2881  054A  0842               	movf	1+(??_print+4)+0,w
  2882  054B  1803               	skipnc
  2883  054C  3E01               	addlw	1
  2884  054D  3E00               	addlw	high(05h)
  2885  054E  00C4               	movwf	1+(??_print+6)+0
  2886  054F  0843               	movf	0+(??_print+6)+0,w
  2887  0550  0084               	movwf	fsr0
  2888  0551  1783               	bsf	status,7
  2889  0552  1C44               	btfss	1+(??_print+6)+0,0
  2890  0553  1383               	bcf	status,7
  2891  0554  0800               	movf	indf,w
  2892  0555  00C5               	movwf	(??_print+8)+0+0
  2893  0556  0A84               	incf	fsr0,f
  2894  0557  0800               	movf	indf,w
  2895  0558  00C6               	movwf	(??_print+8)+0+1
  2896  0559  30FF               	movlw	0FFh
  2897  055A  0645               	xorwf	0+(??_print+8)+0,w
  2898  055B  0446               	iorwf	1+(??_print+8)+0,w
  2899  055C  1903               	skipnz
  2900  055D  2D5F               	goto	u4761
  2901  055E  2D60               	goto	u4760
  2902  055F                     u4761:
  2903  055F  2E48               	goto	l5402
  2904  0560                     u4760:
  2905                           	line	329
  2906                           	
  2907  0560                     l5392:	
  2908                           ;main.c: 329: if (myMenu.pos.set==0)
  2909  0560  08B4               	movf	0+(print@myMenu)+04h,f
  2910  0561  1D03               	skipz
  2911  0562  2D64               	goto	u4771
  2912  0563  2D65               	goto	u4770
  2913  0564                     u4771:
  2914  0564  2DCF               	goto	l5396
  2915  0565                     u4770:
  2916                           	line	330
  2917                           	
  2918  0565                     l5394:	
  2919                           ;main.c: 330: sprintf(buffer, "  %d %s", myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index
                                 ].value,myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].mask);
  2920  0565  3087               	movlw	((STR_21-__stringbase))&0ffh
  2921  0566  00BD               	movwf	(??_print+0)+0
  2922  0567  083D               	movf	(??_print+0)+0,w
  2923  0568  00A0               	movwf	(?_sprintf)
  2924  0569  0832               	movf	0+(print@myMenu)+02h,w
  2925  056A  00BE               	movwf	(??_print+1)+0
  2926  056B  073E               	addwf	(??_print+1)+0,w
  2927  056C  3E05               	addlw	05h
  2928  056D  3E30               	addlw	print@myMenu&0ffh
  2929  056E  0084               	movwf	fsr0
  2930  056F  1383               	bcf	status, 7	;select IRP bank0
  2931  0570  0800               	movf	indf,w
  2932  0571  00BF               	movwf	(??_print+2)+0+0
  2933  0572  0A84               	incf	fsr0,f
  2934  0573  0800               	movf	indf,w
  2935  0574  00C0               	movwf	(??_print+2)+0+1
  2936  0575  3007               	movlw	(07h)
  2937  0576  00C1               	movwf	(??_print+4)+0
  2938  0577  0841               	movf	(??_print+4)+0,w
  2939  0578  00F0               	movwf	(?___bmul)
  2940  0579  0833               	movf	0+(print@myMenu)+03h,w
  2941  057A  160A  118A  27B3   	fcall	___bmul
              120A  118A         
  2942  057F  1283               	bcf	status, 5	;RP0=0, select bank0
  2943  0580  1303               	bcf	status, 6	;RP1=0, select bank0
  2944  0581  073F               	addwf	0+(??_print+2)+0,w
  2945  0582  00C2               	movwf	(??_print+5)+0
  2946  0583  0840               	movf	1+(??_print+2)+0,w
  2947  0584  1803               	skipnc
  2948  0585  3E01               	addlw	1
  2949  0586  00C3               	movwf	1+((??_print+5)+0)
  2950  0587  0842               	movf	0+(??_print+5)+0,w
  2951  0588  3E05               	addlw	low(05h)
  2952  0589  00C4               	movwf	(??_print+7)+0
  2953  058A  0843               	movf	1+(??_print+5)+0,w
  2954  058B  1803               	skipnc
  2955  058C  3E01               	addlw	1
  2956  058D  3E00               	addlw	high(05h)
  2957  058E  00C5               	movwf	1+(??_print+7)+0
  2958  058F  0844               	movf	0+(??_print+7)+0,w
  2959  0590  0084               	movwf	fsr0
  2960  0591  1783               	bsf	status,7
  2961  0592  1C45               	btfss	1+(??_print+7)+0,0
  2962  0593  1383               	bcf	status,7
  2963  0594  0800               	movf	indf,w
  2964  0595  00A1               	movwf	0+(?_sprintf)+01h
  2965  0596  0A84               	incf	fsr0,f
  2966  0597  0800               	movf	indf,w
  2967  0598  00A2               	movwf	1+(?_sprintf)+01h
  2968  0599  0832               	movf	0+(print@myMenu)+02h,w
  2969  059A  00C6               	movwf	(??_print+9)+0
  2970  059B  0746               	addwf	(??_print+9)+0,w
  2971  059C  3E05               	addlw	05h
  2972  059D  3E30               	addlw	print@myMenu&0ffh
  2973  059E  0084               	movwf	fsr0
  2974  059F  1383               	bcf	status, 7	;select IRP bank0
  2975  05A0  0800               	movf	indf,w
  2976  05A1  00C7               	movwf	(??_print+10)+0+0
  2977  05A2  0A84               	incf	fsr0,f
  2978  05A3  0800               	movf	indf,w
  2979  05A4  00C8               	movwf	(??_print+10)+0+1
  2980  05A5  3007               	movlw	(07h)
  2981  05A6  00C9               	movwf	(??_print+12)+0
  2982  05A7  0849               	movf	(??_print+12)+0,w
  2983  05A8  00F0               	movwf	(?___bmul)
  2984  05A9  0833               	movf	0+(print@myMenu)+03h,w
  2985  05AA  160A  118A  27B3   	fcall	___bmul
              120A  118A         
  2986  05AF  1283               	bcf	status, 5	;RP0=0, select bank0
  2987  05B0  1303               	bcf	status, 6	;RP1=0, select bank0
  2988  05B1  0747               	addwf	0+(??_print+10)+0,w
  2989  05B2  00CA               	movwf	(??_print+13)+0
  2990  05B3  0848               	movf	1+(??_print+10)+0,w
  2991  05B4  1803               	skipnc
  2992  05B5  3E01               	addlw	1
  2993  05B6  00CB               	movwf	1+((??_print+13)+0)
  2994  05B7  084A               	movf	0+(??_print+13)+0,w
  2995  05B8  3E01               	addlw	low(01h)
  2996  05B9  00CC               	movwf	(??_print+15)+0
  2997  05BA  084B               	movf	1+(??_print+13)+0,w
  2998  05BB  1803               	skipnc
  2999  05BC  3E01               	addlw	1
  3000  05BD  3E00               	addlw	high(01h)
  3001  05BE  00CD               	movwf	1+(??_print+15)+0
  3002  05BF  084C               	movf	0+(??_print+15)+0,w
  3003  05C0  0084               	movwf	fsr0
  3004  05C1  1783               	bsf	status,7
  3005  05C2  1C4D               	btfss	1+(??_print+15)+0,0
  3006  05C3  1383               	bcf	status,7
  3007  05C4  0800               	movf	indf,w
  3008  05C5  00CE               	movwf	(??_print+17)+0
  3009  05C6  084E               	movf	(??_print+17)+0,w
  3010  05C7  00A3               	movwf	(0+?_sprintf+03h)
  3011  05C8  304F               	movlw	(print@buffer)&0ffh
  3012  05C9  120A  118A  2206   	fcall	_sprintf
              120A  118A         
  3013  05CE  2E3B               	goto	l5398
  3014                           	line	331
  3015                           	
  3016  05CF                     l1229:	
  3017                           	
  3018  05CF                     l5396:	
  3019                           ;main.c: 331: else sprintf(buffer, "> %d %s", myMenu.m[myMenu.pos.menuIndex][myMenu.pos.
                                 index].value,myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].mask);
  3020  05CF  308F               	movlw	((STR_22-__stringbase))&0ffh
  3021  05D0  1283               	bcf	status, 5	;RP0=0, select bank0
  3022  05D1  1303               	bcf	status, 6	;RP1=0, select bank0
  3023  05D2  00BD               	movwf	(??_print+0)+0
  3024  05D3  083D               	movf	(??_print+0)+0,w
  3025  05D4  00A0               	movwf	(?_sprintf)
  3026  05D5  0832               	movf	0+(print@myMenu)+02h,w
  3027  05D6  00BE               	movwf	(??_print+1)+0
  3028  05D7  073E               	addwf	(??_print+1)+0,w
  3029  05D8  3E05               	addlw	05h
  3030  05D9  3E30               	addlw	print@myMenu&0ffh
  3031  05DA  0084               	movwf	fsr0
  3032  05DB  1383               	bcf	status, 7	;select IRP bank0
  3033  05DC  0800               	movf	indf,w
  3034  05DD  00BF               	movwf	(??_print+2)+0+0
  3035  05DE  0A84               	incf	fsr0,f
  3036  05DF  0800               	movf	indf,w
  3037  05E0  00C0               	movwf	(??_print+2)+0+1
  3038  05E1  3007               	movlw	(07h)
  3039  05E2  00C1               	movwf	(??_print+4)+0
  3040  05E3  0841               	movf	(??_print+4)+0,w
  3041  05E4  00F0               	movwf	(?___bmul)
  3042  05E5  0833               	movf	0+(print@myMenu)+03h,w
  3043  05E6  160A  118A  27B3   	fcall	___bmul
              120A  118A         
  3044  05EB  1283               	bcf	status, 5	;RP0=0, select bank0
  3045  05EC  1303               	bcf	status, 6	;RP1=0, select bank0
  3046  05ED  073F               	addwf	0+(??_print+2)+0,w
  3047  05EE  00C2               	movwf	(??_print+5)+0
  3048  05EF  0840               	movf	1+(??_print+2)+0,w
  3049  05F0  1803               	skipnc
  3050  05F1  3E01               	addlw	1
  3051  05F2  00C3               	movwf	1+((??_print+5)+0)
  3052  05F3  0842               	movf	0+(??_print+5)+0,w
  3053  05F4  3E05               	addlw	low(05h)
  3054  05F5  00C4               	movwf	(??_print+7)+0
  3055  05F6  0843               	movf	1+(??_print+5)+0,w
  3056  05F7  1803               	skipnc
  3057  05F8  3E01               	addlw	1
  3058  05F9  3E00               	addlw	high(05h)
  3059  05FA  00C5               	movwf	1+(??_print+7)+0
  3060  05FB  0844               	movf	0+(??_print+7)+0,w
  3061  05FC  0084               	movwf	fsr0
  3062  05FD  1783               	bsf	status,7
  3063  05FE  1C45               	btfss	1+(??_print+7)+0,0
  3064  05FF  1383               	bcf	status,7
  3065  0600  0800               	movf	indf,w
  3066  0601  00A1               	movwf	0+(?_sprintf)+01h
  3067  0602  0A84               	incf	fsr0,f
  3068  0603  0800               	movf	indf,w
  3069  0604  00A2               	movwf	1+(?_sprintf)+01h
  3070  0605  0832               	movf	0+(print@myMenu)+02h,w
  3071  0606  00C6               	movwf	(??_print+9)+0
  3072  0607  0746               	addwf	(??_print+9)+0,w
  3073  0608  3E05               	addlw	05h
  3074  0609  3E30               	addlw	print@myMenu&0ffh
  3075  060A  0084               	movwf	fsr0
  3076  060B  1383               	bcf	status, 7	;select IRP bank0
  3077  060C  0800               	movf	indf,w
  3078  060D  00C7               	movwf	(??_print+10)+0+0
  3079  060E  0A84               	incf	fsr0,f
  3080  060F  0800               	movf	indf,w
  3081  0610  00C8               	movwf	(??_print+10)+0+1
  3082  0611  3007               	movlw	(07h)
  3083  0612  00C9               	movwf	(??_print+12)+0
  3084  0613  0849               	movf	(??_print+12)+0,w
  3085  0614  00F0               	movwf	(?___bmul)
  3086  0615  0833               	movf	0+(print@myMenu)+03h,w
  3087  0616  160A  118A  27B3   	fcall	___bmul
              120A  118A         
  3088  061B  1283               	bcf	status, 5	;RP0=0, select bank0
  3089  061C  1303               	bcf	status, 6	;RP1=0, select bank0
  3090  061D  0747               	addwf	0+(??_print+10)+0,w
  3091  061E  00CA               	movwf	(??_print+13)+0
  3092  061F  0848               	movf	1+(??_print+10)+0,w
  3093  0620  1803               	skipnc
  3094  0621  3E01               	addlw	1
  3095  0622  00CB               	movwf	1+((??_print+13)+0)
  3096  0623  084A               	movf	0+(??_print+13)+0,w
  3097  0624  3E01               	addlw	low(01h)
  3098  0625  00CC               	movwf	(??_print+15)+0
  3099  0626  084B               	movf	1+(??_print+13)+0,w
  3100  0627  1803               	skipnc
  3101  0628  3E01               	addlw	1
  3102  0629  3E00               	addlw	high(01h)
  3103  062A  00CD               	movwf	1+(??_print+15)+0
  3104  062B  084C               	movf	0+(??_print+15)+0,w
  3105  062C  0084               	movwf	fsr0
  3106  062D  1783               	bsf	status,7
  3107  062E  1C4D               	btfss	1+(??_print+15)+0,0
  3108  062F  1383               	bcf	status,7
  3109  0630  0800               	movf	indf,w
  3110  0631  00CE               	movwf	(??_print+17)+0
  3111  0632  084E               	movf	(??_print+17)+0,w
  3112  0633  00A3               	movwf	(0+?_sprintf+03h)
  3113  0634  304F               	movlw	(print@buffer)&0ffh
  3114  0635  120A  118A  2206   	fcall	_sprintf
              120A  118A         
  3115  063A  2E3B               	goto	l5398
  3116                           	
  3117  063B                     l1230:	
  3118                           	line	332
  3119                           	
  3120  063B                     l5398:	
  3121                           ;main.c: 332: cmd(0xc0);
  3122  063B  30C0               	movlw	(0C0h)
  3123  063C  120A  158A  21A1   	fcall	_cmd
              120A  118A         
  3124                           	line	333
  3125                           	
  3126  0641                     l5400:	
  3127                           ;main.c: 333: string(buffer);
  3128  0641  304F               	movlw	(print@buffer)&0ffh
  3129  0642  160A  118A  27CB   	fcall	_string
              120A  118A         
  3130  0647  2E48               	goto	l5402
  3131                           	line	334
  3132                           	
  3133  0648                     l1228:	
  3134                           	line	336
  3135                           	
  3136  0648                     l5402:	
  3137                           ;main.c: 334: }
  3138                           ;main.c: 336: _delay((unsigned long)((100)*(8000000/4000000.0)));
  3139                           	opt asmopt_off
  3140  0648  3042               movlw	66
  3141  0649  1283               	bcf	status, 5	;RP0=0, select bank0
  3142  064A  1303               	bcf	status, 6	;RP1=0, select bank0
  3143  064B  00BD               movwf	(??_print+0)+0,f
  3144  064C                     u5157:
  3145  064C  0BBD               decfsz	(??_print+0)+0,f
  3146  064D  2E4C               	goto	u5157
  3147  064E  0064               	clrwdt
  3148                           opt asmopt_on
  3149                           
  3150                           	line	337
  3151                           	
  3152  064F                     l1231:	
  3153  064F  0008               	return
  3154                           	opt stack 0
  3155                           GLOBAL	__end_of_print
  3156  0650                     	__end_of_print:
  3157 ;; =============== function _print ends ============
  3158                           
  3159                           	signat	_print,4216
  3160                           	global	_string
  3161                           psect	text1010,local,class=CODE,delta=2
  3162                           global __ptext1010
  3163  17CB                     __ptext1010:
  3164                           
  3165 ;; *************** function _string *****************
  3166 ;; Defined at:
  3167 ;;		line 414 in file "main.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  q               1    wreg     PTR const unsigned char 
  3170 ;;		 -> printData@buffer(16), print@buffer(16), 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  q               1    3[COMMON] PTR const unsigned char 
  3173 ;;		 -> printData@buffer(16), print@buffer(16), 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;		None               void
  3176 ;; Registers used:
  3177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       0       0       0       0
  3184 ;;      Locals:         1       0       0       0       0
  3185 ;;      Temps:          1       0       0       0       0
  3186 ;;      Totals:         2       0       0       0       0
  3187 ;;Total ram usage:        2 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    2
  3190 ;; This function calls:
  3191 ;;		_data
  3192 ;; This function is called by:
  3193 ;;		_print
  3194 ;;		_printData
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           psect	text1010
  3198                           	file	"main.c"
  3199                           	line	414
  3200                           	global	__size_of_string
  3201  001A                     	__size_of_string	equ	__end_of_string-_string
  3202                           	
  3203  17CB                     _string:	
  3204                           	opt	stack 3
  3205                           ; Regs used in _string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3206                           ;string@q stored from wreg
  3207  17CB  00F3               	movwf	(string@q)
  3208                           	line	415
  3209                           	
  3210  17CC                     l5370:	
  3211                           ;main.c: 415: while (*q) {
  3212  17CC  2FDB               	goto	l5376
  3213                           	
  3214  17CD                     l1256:	
  3215                           	line	416
  3216                           	
  3217  17CD                     l5372:	
  3218                           ;main.c: 416: data(*q++);
  3219  17CD  0873               	movf	(string@q),w
  3220  17CE  0084               	movwf	fsr0
  3221  17CF  1383               	bcf	status, 7	;select IRP bank0
  3222  17D0  0800               	movf	indf,w
  3223  17D1  120A  158A  212A   	fcall	_data
              160A  118A         
  3224                           	
  3225  17D6                     l5374:	
  3226  17D6  3001               	movlw	(01h)
  3227  17D7  00F2               	movwf	(??_string+0)+0
  3228  17D8  0872               	movf	(??_string+0)+0,w
  3229  17D9  07F3               	addwf	(string@q),f
  3230  17DA  2FDB               	goto	l5376
  3231                           	line	417
  3232                           	
  3233  17DB                     l1255:	
  3234                           	line	415
  3235                           	
  3236  17DB                     l5376:	
  3237  17DB  0873               	movf	(string@q),w
  3238  17DC  0084               	movwf	fsr0
  3239  17DD  1383               	bcf	status, 7	;select IRP bank0
  3240  17DE  0880               	movf	indf,f
  3241  17DF  1D03               	skipz
  3242  17E0  2FE2               	goto	u4741
  3243  17E1  2FE3               	goto	u4740
  3244  17E2                     u4741:
  3245  17E2  2FCD               	goto	l5372
  3246  17E3                     u4740:
  3247  17E3  2FE4               	goto	l1258
  3248                           	
  3249  17E4                     l1257:	
  3250                           	line	418
  3251                           	
  3252  17E4                     l1258:	
  3253  17E4  0008               	return
  3254                           	opt stack 0
  3255                           GLOBAL	__end_of_string
  3256  17E5                     	__end_of_string:
  3257 ;; =============== function _string ends ============
  3258                           
  3259                           	signat	_string,4216
  3260                           	global	_clear
  3261                           psect	text1011,local,class=CODE,delta=2
  3262                           global __ptext1011
  3263  1750                     __ptext1011:
  3264                           
  3265 ;; *************** function _clear *****************
  3266 ;; Defined at:
  3267 ;;		line 389 in file "main.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;		None
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;		None               void
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0, pclath, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         0       0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0
  3284 ;;      Totals:         0       0       0       0       0
  3285 ;;Total ram usage:        0 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    2
  3288 ;; This function calls:
  3289 ;;		_cmd
  3290 ;; This function is called by:
  3291 ;;		_print
  3292 ;;		_printData
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           psect	text1011
  3296                           	file	"main.c"
  3297                           	line	389
  3298                           	global	__size_of_clear
  3299  0007                     	__size_of_clear	equ	__end_of_clear-_clear
  3300                           	
  3301  1750                     _clear:	
  3302                           	opt	stack 3
  3303                           ; Regs used in _clear: [wreg+status,2+status,0+pclath+cstack]
  3304                           	line	390
  3305                           	
  3306  1750                     l5368:	
  3307                           ;main.c: 390: cmd(0x01);
  3308  1750  3001               	movlw	(01h)
  3309  1751  120A  158A  21A1   	fcall	_cmd
              160A  118A         
  3310                           	line	391
  3311                           	
  3312  1756                     l1246:	
  3313  1756  0008               	return
  3314                           	opt stack 0
  3315                           GLOBAL	__end_of_clear
  3316  1757                     	__end_of_clear:
  3317 ;; =============== function _clear ends ============
  3318                           
  3319                           	signat	_clear,88
  3320                           	global	_select
  3321                           psect	text1012,local,class=CODE,delta=2
  3322                           global __ptext1012
  3323  0F33                     __ptext1012:
  3324                           
  3325 ;; *************** function _select *****************
  3326 ;; Defined at:
  3327 ;;		line 292 in file "main.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  myMenu         13    0[BANK0 ] struct menu
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  13    0[BANK0 ] struct menu
  3334 ;; Registers used:
  3335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         0      13       0       0       0
  3342 ;;      Locals:         0       0       0       0       0
  3343 ;;      Temps:          0       9       0       0       0
  3344 ;;      Totals:         0      22       0       0       0
  3345 ;;Total ram usage:       22 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    3
  3348 ;; This function calls:
  3349 ;;		___bmul
  3350 ;;		_takePic
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           psect	text1012
  3356                           	file	"main.c"
  3357                           	line	292
  3358                           	global	__size_of_select
  3359  00CD                     	__size_of_select	equ	__end_of_select-_select
  3360                           	
  3361  0F33                     _select:	
  3362                           	opt	stack 4
  3363                           ; Regs used in _select: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3364                           	line	293
  3365                           	
  3366  0F33                     l5498:	
  3367                           ;main.c: 293: if (myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].down>=250) {
  3368  0F33  1283               	bcf	status, 5	;RP0=0, select bank0
  3369  0F34  1303               	bcf	status, 6	;RP1=0, select bank0
  3370  0F35  0822               	movf	0+(select@myMenu)+02h,w
  3371  0F36  00AD               	movwf	(??_select+0)+0
  3372  0F37  072D               	addwf	(??_select+0)+0,w
  3373  0F38  3E05               	addlw	05h
  3374  0F39  3E20               	addlw	select@myMenu&0ffh
  3375  0F3A  0084               	movwf	fsr0
  3376  0F3B  1383               	bcf	status, 7	;select IRP bank0
  3377  0F3C  0800               	movf	indf,w
  3378  0F3D  00AE               	movwf	(??_select+1)+0+0
  3379  0F3E  0A84               	incf	fsr0,f
  3380  0F3F  0800               	movf	indf,w
  3381  0F40  00AF               	movwf	(??_select+1)+0+1
  3382  0F41  3007               	movlw	(07h)
  3383  0F42  00B0               	movwf	(??_select+3)+0
  3384  0F43  0830               	movf	(??_select+3)+0,w
  3385  0F44  00F0               	movwf	(?___bmul)
  3386  0F45  0823               	movf	0+(select@myMenu)+03h,w
  3387  0F46  160A  118A  27B3   	fcall	___bmul
              120A  158A         
  3388  0F4B  1283               	bcf	status, 5	;RP0=0, select bank0
  3389  0F4C  1303               	bcf	status, 6	;RP1=0, select bank0
  3390  0F4D  072E               	addwf	0+(??_select+1)+0,w
  3391  0F4E  00B1               	movwf	(??_select+4)+0
  3392  0F4F  082F               	movf	1+(??_select+1)+0,w
  3393  0F50  1803               	skipnc
  3394  0F51  3E01               	addlw	1
  3395  0F52  00B2               	movwf	1+((??_select+4)+0)
  3396  0F53  0831               	movf	0+(??_select+4)+0,w
  3397  0F54  3E04               	addlw	low(04h)
  3398  0F55  00B3               	movwf	(??_select+6)+0
  3399  0F56  0832               	movf	1+(??_select+4)+0,w
  3400  0F57  1803               	skipnc
  3401  0F58  3E01               	addlw	1
  3402  0F59  3E00               	addlw	high(04h)
  3403  0F5A  00B4               	movwf	1+(??_select+6)+0
  3404  0F5B  0833               	movf	0+(??_select+6)+0,w
  3405  0F5C  0084               	movwf	fsr0
  3406  0F5D  1783               	bsf	status,7
  3407  0F5E  1C34               	btfss	1+(??_select+6)+0,0
  3408  0F5F  1383               	bcf	status,7
  3409  0F60  30FA               	movlw	(0FAh)
  3410  0F61  0200               	subwf	indf,w
  3411  0F62  1C03               	skipc
  3412  0F63  2F65               	goto	u4981
  3413  0F64  2F66               	goto	u4980
  3414  0F65                     u4981:
  3415  0F65  2FCD               	goto	l5518
  3416  0F66                     u4980:
  3417  0F66  2F94               	goto	l5516
  3418                           	line	294
  3419                           	
  3420  0F67                     l5500:	
  3421                           ;main.c: 294: switch (myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].down) {
  3422  0F67  2F94               	goto	l5516
  3423                           	line	295
  3424                           ;main.c: 295: case 255: {if (myMenu.pos.set==1) myMenu.pos.set=0; else myMenu.pos.set=1;
                                  break;}
  3425                           	
  3426  0F68                     l1207:	
  3427                           	
  3428  0F68                     l5502:	
  3429  0F68  0824               	movf	0+(select@myMenu)+04h,w
  3430  0F69  3A01               	xorlw	01h
  3431  0F6A  1D03               	skipz
  3432  0F6B  2F6D               	goto	u4991
  3433  0F6C  2F6E               	goto	u4990
  3434  0F6D                     u4991:
  3435  0F6D  2F70               	goto	l5506
  3436  0F6E                     u4990:
  3437                           	
  3438  0F6E                     l5504:	
  3439  0F6E  01A4               	clrf	0+(select@myMenu)+04h
  3440  0F6F  2FFE               	goto	l5522
  3441                           	
  3442  0F70                     l1208:	
  3443                           	
  3444  0F70                     l5506:	
  3445  0F70  01A4               	clrf	0+(select@myMenu)+04h
  3446  0F71  1403               	bsf	status,0
  3447  0F72  0DA4               	rlf	0+(select@myMenu)+04h,f
  3448  0F73  2FFE               	goto	l5522
  3449                           	
  3450  0F74                     l1209:	
  3451  0F74  2FFE               	goto	l5522
  3452                           	line	296
  3453                           ;main.c: 296: case 254: {myMenu.start=1; break;}
  3454                           	
  3455  0F75                     l1211:	
  3456                           	
  3457  0F75                     l5508:	
  3458  0F75  3001               	movlw	low(01h)
  3459  0F76  00A0               	movwf	(select@myMenu)
  3460  0F77  3000               	movlw	high(01h)
  3461  0F78  00A1               	movwf	((select@myMenu))+1
  3462  0F79  2FFE               	goto	l5522
  3463                           	line	297
  3464                           ;main.c: 297: case 253: {while (1) { takePic(0); _delay((unsigned long)((2000)*(8000000/
                                 4000.0))); } break;}
  3465                           	
  3466  0F7A                     l1212:	
  3467  0F7A  2F7B               	goto	l5510
  3468                           	
  3469  0F7B                     l1213:	
  3470                           	
  3471  0F7B                     l5510:	
  3472  0F7B  3000               	movlw	(0)
  3473  0F7C  160A  118A  27E5   	fcall	_takePic
              120A  158A         
  3474                           	
  3475  0F81                     l5512:	
  3476                           	opt asmopt_off
  3477  0F81  3015               movlw  21
  3478  0F82  1283               	bcf	status, 5	;RP0=0, select bank0
  3479  0F83  1303               	bcf	status, 6	;RP1=0, select bank0
  3480  0F84  00AF               movwf	((??_select+0)+0+2),f
  3481  0F85  304B               movlw	75
  3482  0F86  00AE               movwf	((??_select+0)+0+1),f
  3483  0F87  30D1               	movlw	209
  3484  0F88  00AD               movwf	((??_select+0)+0),f
  3485  0F89                     u5167:
  3486  0F89  0BAD               	decfsz	((??_select+0)+0),f
  3487  0F8A  2F89               	goto	u5167
  3488  0F8B  0BAE               	decfsz	((??_select+0)+0+1),f
  3489  0F8C  2F89               	goto	u5167
  3490  0F8D  0BAF               	decfsz	((??_select+0)+0+2),f
  3491  0F8E  2F89               	goto	u5167
  3492  0F8F  0064               	clrwdt
  3493                           opt asmopt_on
  3494                           
  3495  0F90  2F7B               	goto	l5510
  3496                           	
  3497  0F91                     l1214:	
  3498  0F91  2F7B               	goto	l5510
  3499                           	
  3500  0F92                     l1215:	
  3501  0F92  2FFE               	goto	l5522
  3502                           	line	298
  3503                           	
  3504  0F93                     l5514:	
  3505                           ;main.c: 298: }
  3506  0F93  2FFE               	goto	l5522
  3507                           	line	294
  3508                           	
  3509  0F94                     l1206:	
  3510                           	
  3511  0F94                     l5516:	
  3512  0F94  1283               	bcf	status, 5	;RP0=0, select bank0
  3513  0F95  1303               	bcf	status, 6	;RP1=0, select bank0
  3514  0F96  0822               	movf	0+(select@myMenu)+02h,w
  3515  0F97  00AD               	movwf	(??_select+0)+0
  3516  0F98  072D               	addwf	(??_select+0)+0,w
  3517  0F99  3E05               	addlw	05h
  3518  0F9A  3E20               	addlw	select@myMenu&0ffh
  3519  0F9B  0084               	movwf	fsr0
  3520  0F9C  1383               	bcf	status, 7	;select IRP bank0
  3521  0F9D  0800               	movf	indf,w
  3522  0F9E  00AE               	movwf	(??_select+1)+0+0
  3523  0F9F  0A84               	incf	fsr0,f
  3524  0FA0  0800               	movf	indf,w
  3525  0FA1  00AF               	movwf	(??_select+1)+0+1
  3526  0FA2  3007               	movlw	(07h)
  3527  0FA3  00B0               	movwf	(??_select+3)+0
  3528  0FA4  0830               	movf	(??_select+3)+0,w
  3529  0FA5  00F0               	movwf	(?___bmul)
  3530  0FA6  0823               	movf	0+(select@myMenu)+03h,w
  3531  0FA7  160A  118A  27B3   	fcall	___bmul
              120A  158A         
  3532  0FAC  1283               	bcf	status, 5	;RP0=0, select bank0
  3533  0FAD  1303               	bcf	status, 6	;RP1=0, select bank0
  3534  0FAE  072E               	addwf	0+(??_select+1)+0,w
  3535  0FAF  00B1               	movwf	(??_select+4)+0
  3536  0FB0  082F               	movf	1+(??_select+1)+0,w
  3537  0FB1  1803               	skipnc
  3538  0FB2  3E01               	addlw	1
  3539  0FB3  00B2               	movwf	1+((??_select+4)+0)
  3540  0FB4  0831               	movf	0+(??_select+4)+0,w
  3541  0FB5  3E04               	addlw	low(04h)
  3542  0FB6  00B3               	movwf	(??_select+6)+0
  3543  0FB7  0832               	movf	1+(??_select+4)+0,w
  3544  0FB8  1803               	skipnc
  3545  0FB9  3E01               	addlw	1
  3546  0FBA  3E00               	addlw	high(04h)
  3547  0FBB  00B4               	movwf	1+(??_select+6)+0
  3548  0FBC  0833               	movf	0+(??_select+6)+0,w
  3549  0FBD  0084               	movwf	fsr0
  3550  0FBE  1783               	bsf	status,7
  3551  0FBF  1C34               	btfss	1+(??_select+6)+0,0
  3552  0FC0  1383               	bcf	status,7
  3553  0FC1  0800               	movf	indf,w
  3554                           	; Switch size 1, requested type "space"
  3555                           ; Number of cases is 3, Range of values is 253 to 255
  3556                           ; switch strategies available:
  3557                           ; Name         Instructions Cycles
  3558                           ; simple_byte           10     6 (average)
  3559                           ; direct_byte           16     7 (fixed)
  3560                           ; jumptable            263     9 (fixed)
  3561                           ;	Chosen strategy is simple_byte
  3562                           
  3563                           	opt asmopt_off
  3564  0FC2  3AFD               	xorlw	253^0	; case 253
  3565  0FC3  1903               	skipnz
  3566  0FC4  2F7B               	goto	l5510
  3567  0FC5  3A03               	xorlw	254^253	; case 254
  3568  0FC6  1903               	skipnz
  3569  0FC7  2F75               	goto	l5508
  3570  0FC8  3A01               	xorlw	255^254	; case 255
  3571  0FC9  1903               	skipnz
  3572  0FCA  2F68               	goto	l5502
  3573  0FCB  2FFE               	goto	l5522
  3574                           	opt asmopt_on
  3575                           
  3576                           	line	298
  3577                           	
  3578  0FCC                     l1210:	
  3579                           	line	299
  3580                           ;main.c: 299: }
  3581  0FCC  2FFE               	goto	l5522
  3582                           	line	300
  3583                           	
  3584  0FCD                     l1205:	
  3585                           	line	301
  3586                           	
  3587  0FCD                     l5518:	
  3588                           ;main.c: 300: else {
  3589                           ;main.c: 301: myMenu.pos.menuIndex=myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].down
                                 ;
  3590  0FCD  0822               	movf	0+(select@myMenu)+02h,w
  3591  0FCE  00AD               	movwf	(??_select+0)+0
  3592  0FCF  072D               	addwf	(??_select+0)+0,w
  3593  0FD0  3E05               	addlw	05h
  3594  0FD1  3E20               	addlw	select@myMenu&0ffh
  3595  0FD2  0084               	movwf	fsr0
  3596  0FD3  1383               	bcf	status, 7	;select IRP bank0
  3597  0FD4  0800               	movf	indf,w
  3598  0FD5  00AE               	movwf	(??_select+1)+0+0
  3599  0FD6  0A84               	incf	fsr0,f
  3600  0FD7  0800               	movf	indf,w
  3601  0FD8  00AF               	movwf	(??_select+1)+0+1
  3602  0FD9  3007               	movlw	(07h)
  3603  0FDA  00B0               	movwf	(??_select+3)+0
  3604  0FDB  0830               	movf	(??_select+3)+0,w
  3605  0FDC  00F0               	movwf	(?___bmul)
  3606  0FDD  0823               	movf	0+(select@myMenu)+03h,w
  3607  0FDE  160A  118A  27B3   	fcall	___bmul
              120A  158A         
  3608  0FE3  1283               	bcf	status, 5	;RP0=0, select bank0
  3609  0FE4  1303               	bcf	status, 6	;RP1=0, select bank0
  3610  0FE5  072E               	addwf	0+(??_select+1)+0,w
  3611  0FE6  00B1               	movwf	(??_select+4)+0
  3612  0FE7  082F               	movf	1+(??_select+1)+0,w
  3613  0FE8  1803               	skipnc
  3614  0FE9  3E01               	addlw	1
  3615  0FEA  00B2               	movwf	1+((??_select+4)+0)
  3616  0FEB  0831               	movf	0+(??_select+4)+0,w
  3617  0FEC  3E04               	addlw	low(04h)
  3618  0FED  00B3               	movwf	(??_select+6)+0
  3619  0FEE  0832               	movf	1+(??_select+4)+0,w
  3620  0FEF  1803               	skipnc
  3621  0FF0  3E01               	addlw	1
  3622  0FF1  3E00               	addlw	high(04h)
  3623  0FF2  00B4               	movwf	1+(??_select+6)+0
  3624  0FF3  0833               	movf	0+(??_select+6)+0,w
  3625  0FF4  0084               	movwf	fsr0
  3626  0FF5  1783               	bsf	status,7
  3627  0FF6  1C34               	btfss	1+(??_select+6)+0,0
  3628  0FF7  1383               	bcf	status,7
  3629  0FF8  0800               	movf	indf,w
  3630  0FF9  00B5               	movwf	(??_select+8)+0
  3631  0FFA  0835               	movf	(??_select+8)+0,w
  3632  0FFB  00A2               	movwf	0+(select@myMenu)+02h
  3633                           	line	302
  3634                           	
  3635  0FFC                     l5520:	
  3636                           ;main.c: 302: myMenu.pos.index=0;
  3637  0FFC  01A3               	clrf	0+(select@myMenu)+03h
  3638  0FFD  2FFE               	goto	l5522
  3639                           	line	303
  3640                           	
  3641  0FFE                     l1216:	
  3642                           	line	304
  3643                           	
  3644  0FFE                     l5522:	
  3645                           ;main.c: 303: }
  3646                           ;main.c: 304: return myMenu;
  3647  0FFE  2FFF               	goto	l1217
  3648                           	
  3649  0FFF                     l5524:	
  3650                           	line	305
  3651                           	
  3652  0FFF                     l1217:	
  3653  0FFF  0008               	return
  3654                           	opt stack 0
  3655                           GLOBAL	__end_of_select
  3656  1000                     	__end_of_select:
  3657 ;; =============== function _select ends ============
  3658                           
  3659                           	signat	_select,4223
  3660                           	global	_lcd_init
  3661                           psect	text1013,local,class=CODE,delta=2
  3662                           global __ptext1013
  3663  0A2B                     __ptext1013:
  3664                           
  3665 ;; *************** function _lcd_init *****************
  3666 ;; Defined at:
  3667 ;;		line 392 in file "main.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;		None               void
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0, pclath, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3681 ;;      Params:         0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0
  3684 ;;      Totals:         0       0       0       0       0
  3685 ;;Total ram usage:        0 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    2
  3688 ;; This function calls:
  3689 ;;		_cmd
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           psect	text1013
  3695                           	file	"main.c"
  3696                           	line	392
  3697                           	global	__size_of_lcd_init
  3698  0037                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3699                           	
  3700  0A2B                     _lcd_init:	
  3701                           	opt	stack 5
  3702                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3703                           	line	393
  3704                           	
  3705  0A2B                     l5338:	
  3706                           ;main.c: 393: cmd(0x38);
  3707  0A2B  3038               	movlw	(038h)
  3708  0A2C  120A  158A  21A1   	fcall	_cmd
              120A  158A         
  3709                           	line	394
  3710                           ;main.c: 394: cmd(0x38);
  3711  0A31  3038               	movlw	(038h)
  3712  0A32  120A  158A  21A1   	fcall	_cmd
              120A  158A         
  3713                           	line	395
  3714                           ;main.c: 395: cmd(0x38);
  3715  0A37  3038               	movlw	(038h)
  3716  0A38  120A  158A  21A1   	fcall	_cmd
              120A  158A         
  3717                           	line	396
  3718                           ;main.c: 396: cmd(0x28);
  3719  0A3D  3028               	movlw	(028h)
  3720  0A3E  120A  158A  21A1   	fcall	_cmd
              120A  158A         
  3721                           	line	397
  3722                           ;main.c: 397: cmd(0x28);
  3723  0A43  3028               	movlw	(028h)
  3724  0A44  120A  158A  21A1   	fcall	_cmd
              120A  158A         
  3725                           	line	398
  3726                           ;main.c: 398: cmd(0x28);
  3727  0A49  3028               	movlw	(028h)
  3728  0A4A  120A  158A  21A1   	fcall	_cmd
              120A  158A         
  3729                           	line	399
  3730                           ;main.c: 399: cmd(0x0c);
  3731  0A4F  300C               	movlw	(0Ch)
  3732  0A50  120A  158A  21A1   	fcall	_cmd
              120A  158A         
  3733                           	line	400
  3734                           ;main.c: 400: cmd(0x01);
  3735  0A55  3001               	movlw	(01h)
  3736  0A56  120A  158A  21A1   	fcall	_cmd
              120A  158A         
  3737                           	line	401
  3738                           ;main.c: 401: cmd(0x6);
  3739  0A5B  3006               	movlw	(06h)
  3740  0A5C  120A  158A  21A1   	fcall	_cmd
              120A  158A         
  3741                           	line	402
  3742                           	
  3743  0A61                     l1249:	
  3744  0A61  0008               	return
  3745                           	opt stack 0
  3746                           GLOBAL	__end_of_lcd_init
  3747  0A62                     	__end_of_lcd_init:
  3748 ;; =============== function _lcd_init ends ============
  3749                           
  3750                           	signat	_lcd_init,88
  3751                           	global	_data
  3752                           psect	text1014,local,class=CODE,delta=2
  3753                           global __ptext1014
  3754  092A                     __ptext1014:
  3755                           
  3756 ;; *************** function _data *****************
  3757 ;; Defined at:
  3758 ;;		line 405 in file "main.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  c               1    wreg     unsigned char 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  c               1    1[COMMON] unsigned char 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;		None               void
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         1       0       0       0       0
  3774 ;;      Temps:          1       0       0       0       0
  3775 ;;      Totals:         2       0       0       0       0
  3776 ;;Total ram usage:        2 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    1
  3779 ;; This function calls:
  3780 ;;		_LCD_STROBE
  3781 ;; This function is called by:
  3782 ;;		_string
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           psect	text1014
  3786                           	file	"main.c"
  3787                           	line	405
  3788                           	global	__size_of_data
  3789  0023                     	__size_of_data	equ	__end_of_data-_data
  3790                           	
  3791  092A                     _data:	
  3792                           	opt	stack 3
  3793                           ; Regs used in _data: [wreg+status,2+status,0+pclath+cstack]
  3794                           ;data@c stored from wreg
  3795  092A  00F1               	movwf	(data@c)
  3796                           	line	406
  3797                           	
  3798  092B                     l5326:	
  3799                           ;main.c: 406: RA5 = 1;
  3800  092B  1283               	bcf	status, 5	;RP0=0, select bank0
  3801  092C  1303               	bcf	status, 6	;RP1=0, select bank0
  3802  092D  1685               	bsf	(45/8),(45)&7
  3803                           	line	407
  3804                           	
  3805  092E                     l5328:	
  3806                           ;main.c: 407: _delay((unsigned long)((50)*(8000000/4000000.0)));
  3807                           	opt asmopt_off
  3808  092E  3021               movlw	33
  3809  092F  00F0               movwf	(??_data+0)+0,f
  3810  0930                     u5177:
  3811  0930  0BF0               decfsz	(??_data+0)+0,f
  3812  0931  2930               	goto	u5177
  3813                           opt asmopt_on
  3814                           
  3815                           	line	408
  3816                           	
  3817  0932                     l5330:	
  3818                           ;main.c: 408: PORTC = (c >> 4);
  3819  0932  0871               	movf	(data@c),w
  3820  0933  00F0               	movwf	(??_data+0)+0
  3821  0934  3004               	movlw	04h
  3822  0935                     u4715:
  3823  0935  1003               	clrc
  3824  0936  0CF0               	rrf	(??_data+0)+0,f
  3825  0937  3EFF               	addlw	-1
  3826  0938  1D03               	skipz
  3827  0939  2935               	goto	u4715
  3828  093A  0870               	movf	0+(??_data+0)+0,w
  3829  093B  1283               	bcf	status, 5	;RP0=0, select bank0
  3830  093C  1303               	bcf	status, 6	;RP1=0, select bank0
  3831  093D  0087               	movwf	(7)	;volatile
  3832                           	line	409
  3833                           	
  3834  093E                     l5332:	
  3835                           ;main.c: 409: LCD_STROBE();
  3836  093E  160A  118A  2757   	fcall	_LCD_STROBE
              120A  158A         
  3837                           	line	410
  3838                           	
  3839  0943                     l5334:	
  3840                           ;main.c: 410: PORTC = (c);
  3841  0943  0871               	movf	(data@c),w
  3842  0944  1283               	bcf	status, 5	;RP0=0, select bank0
  3843  0945  1303               	bcf	status, 6	;RP1=0, select bank0
  3844  0946  0087               	movwf	(7)	;volatile
  3845                           	line	411
  3846                           	
  3847  0947                     l5336:	
  3848                           ;main.c: 411: LCD_STROBE();
  3849  0947  160A  118A  2757   	fcall	_LCD_STROBE
              120A  158A         
  3850                           	line	412
  3851                           	
  3852  094C                     l1252:	
  3853  094C  0008               	return
  3854                           	opt stack 0
  3855                           GLOBAL	__end_of_data
  3856  094D                     	__end_of_data:
  3857 ;; =============== function _data ends ============
  3858                           
  3859                           	signat	_data,4216
  3860                           	global	_cmd
  3861                           psect	text1015,local,class=CODE,delta=2
  3862                           global __ptext1015
  3863  09A1                     __ptext1015:
  3864                           
  3865 ;; *************** function _cmd *****************
  3866 ;; Defined at:
  3867 ;;		line 378 in file "main.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  c               1    wreg     unsigned char 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  c               1    2[COMMON] unsigned char 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;		None               void
  3874 ;; Registers used:
  3875 ;;		wreg, status,2, status,0, pclath, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3881 ;;      Params:         0       0       0       0       0
  3882 ;;      Locals:         1       0       0       0       0
  3883 ;;      Temps:          2       0       0       0       0
  3884 ;;      Totals:         3       0       0       0       0
  3885 ;;Total ram usage:        3 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:    1
  3888 ;; This function calls:
  3889 ;;		_LCD_STROBE
  3890 ;; This function is called by:
  3891 ;;		_print
  3892 ;;		_printData
  3893 ;;		_clear
  3894 ;;		_lcd_init
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           psect	text1015
  3898                           	file	"main.c"
  3899                           	line	378
  3900                           	global	__size_of_cmd
  3901  002C                     	__size_of_cmd	equ	__end_of_cmd-_cmd
  3902                           	
  3903  09A1                     _cmd:	
  3904                           	opt	stack 4
  3905                           ; Regs used in _cmd: [wreg+status,2+status,0+pclath+cstack]
  3906                           ;cmd@c stored from wreg
  3907  09A1  00F2               	movwf	(cmd@c)
  3908                           	line	379
  3909                           	
  3910  09A2                     l5312:	
  3911                           ;main.c: 379: RA5 = 0;
  3912  09A2  1283               	bcf	status, 5	;RP0=0, select bank0
  3913  09A3  1303               	bcf	status, 6	;RP1=0, select bank0
  3914  09A4  1285               	bcf	(45/8),(45)&7
  3915                           	line	380
  3916                           	
  3917  09A5                     l5314:	
  3918                           ;main.c: 380: _delay((unsigned long)((50)*(8000000/4000000.0)));
  3919                           	opt asmopt_off
  3920  09A5  3021               movlw	33
  3921  09A6  00F0               movwf	(??_cmd+0)+0,f
  3922  09A7                     u5187:
  3923  09A7  0BF0               decfsz	(??_cmd+0)+0,f
  3924  09A8  29A7               	goto	u5187
  3925                           opt asmopt_on
  3926                           
  3927                           	line	381
  3928                           	
  3929  09A9                     l5316:	
  3930                           ;main.c: 381: PORTC = (c >> 4);
  3931  09A9  0872               	movf	(cmd@c),w
  3932  09AA  00F0               	movwf	(??_cmd+0)+0
  3933  09AB  3004               	movlw	04h
  3934  09AC                     u4705:
  3935  09AC  1003               	clrc
  3936  09AD  0CF0               	rrf	(??_cmd+0)+0,f
  3937  09AE  3EFF               	addlw	-1
  3938  09AF  1D03               	skipz
  3939  09B0  29AC               	goto	u4705
  3940  09B1  0870               	movf	0+(??_cmd+0)+0,w
  3941  09B2  1283               	bcf	status, 5	;RP0=0, select bank0
  3942  09B3  1303               	bcf	status, 6	;RP1=0, select bank0
  3943  09B4  0087               	movwf	(7)	;volatile
  3944                           	line	382
  3945                           	
  3946  09B5                     l5318:	
  3947                           ;main.c: 382: LCD_STROBE();
  3948  09B5  160A  118A  2757   	fcall	_LCD_STROBE
              120A  158A         
  3949                           	line	383
  3950                           	
  3951  09BA                     l5320:	
  3952                           ;main.c: 383: PORTC = (c);
  3953  09BA  0872               	movf	(cmd@c),w
  3954  09BB  1283               	bcf	status, 5	;RP0=0, select bank0
  3955  09BC  1303               	bcf	status, 6	;RP1=0, select bank0
  3956  09BD  0087               	movwf	(7)	;volatile
  3957                           	line	384
  3958                           	
  3959  09BE                     l5322:	
  3960                           ;main.c: 384: LCD_STROBE();
  3961  09BE  160A  118A  2757   	fcall	_LCD_STROBE
              120A  158A         
  3962                           	line	385
  3963                           	
  3964  09C3                     l5324:	
  3965                           ;main.c: 385: _delay((unsigned long)((1)*(8000000/4000.0)));
  3966                           	opt asmopt_off
  3967  09C3  3003               movlw	3
  3968  09C4  00F1               movwf	((??_cmd+0)+0+1),f
  3969  09C5  3097               	movlw	151
  3970  09C6  00F0               movwf	((??_cmd+0)+0),f
  3971  09C7                     u5197:
  3972  09C7  0BF0               	decfsz	((??_cmd+0)+0),f
  3973  09C8  29C7               	goto	u5197
  3974  09C9  0BF1               	decfsz	((??_cmd+0)+0+1),f
  3975  09CA  29C7               	goto	u5197
  3976  09CB  29CC               	nop2
  3977                           opt asmopt_on
  3978                           
  3979                           	line	387
  3980                           	
  3981  09CC                     l1243:	
  3982  09CC  0008               	return
  3983                           	opt stack 0
  3984                           GLOBAL	__end_of_cmd
  3985  09CD                     	__end_of_cmd:
  3986 ;; =============== function _cmd ends ============
  3987                           
  3988                           	signat	_cmd,4216
  3989                           	global	_takePic
  3990                           psect	text1016,local,class=CODE,delta=2
  3991                           global __ptext1016
  3992  17E5                     __ptext1016:
  3993                           
  3994 ;; *************** function _takePic *****************
  3995 ;; Defined at:
  3996 ;;		line 433 in file "main.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  actualShots     1    wreg     unsigned char 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  actualShots     1    5[COMMON] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      unsigned char 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0, pclath, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4010 ;;      Params:         0       0       0       0       0
  4011 ;;      Locals:         1       0       0       0       0
  4012 ;;      Temps:          2       0       0       0       0
  4013 ;;      Totals:         3       0       0       0       0
  4014 ;;Total ram usage:        3 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; Hardware stack levels required when called:    2
  4017 ;; This function calls:
  4018 ;;		_SendIRSequence
  4019 ;; This function is called by:
  4020 ;;		_start
  4021 ;;		_select
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           psect	text1016
  4025                           	file	"main.c"
  4026                           	line	433
  4027                           	global	__size_of_takePic
  4028  001B                     	__size_of_takePic	equ	__end_of_takePic-_takePic
  4029                           	
  4030  17E5                     _takePic:	
  4031                           	opt	stack 4
  4032                           ; Regs used in _takePic: [wreg+status,2+status,0+pclath+cstack]
  4033                           ;takePic@actualShots stored from wreg
  4034  17E5  00F5               	movwf	(takePic@actualShots)
  4035                           	line	434
  4036                           	
  4037  17E6                     l5300:	
  4038                           ;main.c: 434: SendIRSequence();
  4039  17E6  120A  118A  2007   	fcall	_SendIRSequence
              160A  118A         
  4040                           	line	435
  4041                           	
  4042  17EB                     l5302:	
  4043                           ;main.c: 435: _delay((unsigned long)((63)*(8000000/4000.0)));
  4044                           	opt asmopt_off
  4045  17EB  30A4               movlw	164
  4046  17EC  00F4               movwf	((??_takePic+0)+0+1),f
  4047  17ED  30A1               	movlw	161
  4048  17EE  00F3               movwf	((??_takePic+0)+0),f
  4049  17EF                     u5207:
  4050  17EF  0BF3               	decfsz	((??_takePic+0)+0),f
  4051  17F0  2FEF               	goto	u5207
  4052  17F1  0BF4               	decfsz	((??_takePic+0)+0+1),f
  4053  17F2  2FEF               	goto	u5207
  4054  17F3  2FF4               	nop2
  4055                           opt asmopt_on
  4056                           
  4057                           	line	436
  4058                           	
  4059  17F4                     l5304:	
  4060                           ;main.c: 436: SendIRSequence();
  4061  17F4  120A  118A  2007   	fcall	_SendIRSequence
              160A  118A         
  4062                           	line	437
  4063                           	
  4064  17F9                     l5306:	
  4065                           ;main.c: 437: actualShots++;
  4066  17F9  3001               	movlw	(01h)
  4067  17FA  00F3               	movwf	(??_takePic+0)+0
  4068  17FB  0873               	movf	(??_takePic+0)+0,w
  4069  17FC  07F5               	addwf	(takePic@actualShots),f
  4070                           	line	438
  4071                           	
  4072  17FD                     l5308:	
  4073                           ;main.c: 438: return actualShots;
  4074  17FD  0875               	movf	(takePic@actualShots),w
  4075  17FE  2FFF               	goto	l1286
  4076                           	
  4077  17FF                     l5310:	
  4078                           	line	439
  4079                           	
  4080  17FF                     l1286:	
  4081  17FF  0008               	return
  4082                           	opt stack 0
  4083                           GLOBAL	__end_of_takePic
  4084  1800                     	__end_of_takePic:
  4085 ;; =============== function _takePic ends ============
  4086                           
  4087                           	signat	_takePic,4217
  4088                           	global	_spin
  4089                           psect	text1017,local,class=CODE,delta=2
  4090                           global __ptext1017
  4091  033F                     __ptext1017:
  4092                           
  4093 ;; *************** function _spin *****************
  4094 ;; Defined at:
  4095 ;;		line 247 in file "main.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  myData         11   26[BANK0 ] struct data
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  i               2   48[BANK0 ] int 
  4100 ;;  f               2   46[BANK0 ] int 
  4101 ;;  s               2   44[BANK0 ] int 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  11   26[BANK0 ] struct data
  4104 ;; Registers used:
  4105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4111 ;;      Params:         0      11       0       0       0
  4112 ;;      Locals:         0       6       0       0       0
  4113 ;;      Temps:          0       7       0       0       0
  4114 ;;      Totals:         0      24       0       0       0
  4115 ;;Total ram usage:       24 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    2
  4118 ;; This function calls:
  4119 ;;		___ftmul
  4120 ;;		___fttol
  4121 ;;		_DelayMs
  4122 ;;		_abs
  4123 ;;		_motorRelax
  4124 ;; This function is called by:
  4125 ;;		_start
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           psect	text1017
  4129                           	file	"main.c"
  4130                           	line	247
  4131                           	global	__size_of_spin
  4132  016A                     	__size_of_spin	equ	__end_of_spin-_spin
  4133                           	
  4134  033F                     _spin:	
  4135                           	opt	stack 4
  4136                           ; Regs used in _spin: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4137                           	line	250
  4138                           	
  4139  033F                     l5260:	
  4140                           ;main.c: 248: int i,s,f;
  4141                           ;main.c: 250: s = myData.spins_btw_shots*200;
  4142  033F  3002               	movlw	(02h)
  4143  0340  3E3A               	addlw	spin@myData&0ffh
  4144  0341  0084               	movwf	fsr0
  4145  0342  1383               	bcf	status, 7	;select IRP bank0
  4146  0343  0800               	movf	indf,w
  4147  0344  1283               	bcf	status, 5	;RP0=0, select bank0
  4148  0345  1303               	bcf	status, 6	;RP1=0, select bank0
  4149  0346  00AD               	movwf	0+(?___ftmul)+03h
  4150  0347  0A84               	incf	fsr0,f
  4151  0348  0800               	movf	indf,w
  4152  0349  00AE               	movwf	1+(?___ftmul)+03h
  4153  034A  0A84               	incf	fsr0,f
  4154  034B  0800               	movf	indf,w
  4155  034C  00AF               	movwf	2+(?___ftmul)+03h
  4156  034D  3000               	movlw	0x0
  4157  034E  00AA               	movwf	(?___ftmul)
  4158  034F  3048               	movlw	0x48
  4159  0350  00AB               	movwf	(?___ftmul+1)
  4160  0351  3043               	movlw	0x43
  4161  0352  00AC               	movwf	(?___ftmul+2)
  4162  0353  120A  118A  2118   	fcall	___ftmul
              120A  118A         
  4163  0358  1283               	bcf	status, 5	;RP0=0, select bank0
  4164  0359  1303               	bcf	status, 6	;RP1=0, select bank0
  4165  035A  082A               	movf	(0+(?___ftmul)),w
  4166  035B  00F8               	movwf	(?___fttol)
  4167  035C  082B               	movf	(1+(?___ftmul)),w
  4168  035D  00F9               	movwf	(?___fttol+1)
  4169  035E  082C               	movf	(2+(?___ftmul)),w
  4170  035F  00FA               	movwf	(?___fttol+2)
  4171  0360  120A  158A  268D   	fcall	___fttol
              120A  118A         
  4172  0365  0879               	movf	1+(((0+(?___fttol)))),w
  4173  0366  1283               	bcf	status, 5	;RP0=0, select bank0
  4174  0367  1303               	bcf	status, 6	;RP1=0, select bank0
  4175  0368  01CD               	clrf	(spin@s+1)
  4176  0369  07CD               	addwf	(spin@s+1)
  4177  036A  0878               	movf	0+(((0+(?___fttol)))),w
  4178  036B  01CC               	clrf	(spin@s)
  4179  036C  07CC               	addwf	(spin@s)
  4180                           
  4181                           	line	252
  4182                           	
  4183  036D                     l5262:	
  4184                           ;main.c: 252: for(i=0; i<s; i++) {
  4185  036D  01D0               	clrf	(spin@i)
  4186  036E  01D1               	clrf	(spin@i+1)
  4187  036F  2C93               	goto	l5292
  4188                           	
  4189  0370                     l1178:	
  4190                           	line	253
  4191                           	
  4192  0370                     l5264:	
  4193                           ;main.c: 253: DelayMs(500/200);
  4194  0370  3002               	movlw	(02h)
  4195  0371  120A  158A  20EA   	fcall	_DelayMs
              120A  118A         
  4196                           	line	254
  4197                           	
  4198  0376                     l5266:	
  4199                           ;main.c: 254: if (myData.wise) f=0; else f=3;
  4200  0376  1283               	bcf	status, 5	;RP0=0, select bank0
  4201  0377  1303               	bcf	status, 6	;RP1=0, select bank0
  4202  0378  0843               	movf	0+(spin@myData)+09h,w
  4203  0379  1D03               	skipz
  4204  037A  2B7C               	goto	u4530
  4205  037B  2B7F               	goto	l5270
  4206  037C                     u4530:
  4207                           	
  4208  037C                     l5268:	
  4209  037C  01CE               	clrf	(spin@f)
  4210  037D  01CF               	clrf	(spin@f+1)
  4211  037E  2B84               	goto	l5272
  4212                           	
  4213  037F                     l1179:	
  4214                           	
  4215  037F                     l5270:	
  4216  037F  3003               	movlw	low(03h)
  4217  0380  00CE               	movwf	(spin@f)
  4218  0381  3000               	movlw	high(03h)
  4219  0382  00CF               	movwf	((spin@f))+1
  4220  0383  2B84               	goto	l5272
  4221                           	
  4222  0384                     l1180:	
  4223                           	line	255
  4224                           	
  4225  0384                     l5272:	
  4226                           ;main.c: 255: RA0=pulse[i%4][abs(3-f)];
  4227  0384  0850               	movf	(spin@i),w
  4228  0385  3903               	andlw	03h
  4229  0386  00C5               	movwf	(??_spin+0)+0
  4230  0387  3003               	movlw	03h
  4231  0388                     u4545:
  4232  0388  1003               	clrc
  4233  0389  0DC5               	rlf	(??_spin+0)+0,f
  4234  038A  3EFF               	addlw	-1
  4235  038B  1D03               	skipz
  4236  038C  2B88               	goto	u4545
  4237  038D  3001               	movlw	((_pulse-__stringbase))&0ffh
  4238  038E  0745               	addwf	0+(??_spin+0)+0,w
  4239  038F  00C6               	movwf	(??_spin+1)+0
  4240  0390  094E               	comf	(spin@f),w
  4241  0391  00C7               	movwf	(??_spin+2)+0
  4242  0392  094F               	comf	(spin@f+1),w
  4243  0393  00C8               	movwf	((??_spin+2)+0+1)
  4244  0394  0AC7               	incf	(??_spin+2)+0,f
  4245  0395  1903               	skipnz
  4246  0396  0AC8               	incf	((??_spin+2)+0+1),f
  4247  0397  0847               	movf	0+(??_spin+2)+0,w
  4248  0398  3E03               	addlw	low(03h)
  4249  0399  00F0               	movwf	(?_abs)
  4250  039A  0848               	movf	1+(??_spin+2)+0,w
  4251  039B  1803               	skipnc
  4252  039C  3E01               	addlw	1
  4253  039D  3E00               	addlw	high(03h)
  4254  039E  00F1               	movwf	1+(?_abs)
  4255  039F  160A  118A  275F   	fcall	_abs
              120A  118A         
  4256  03A4  0870               	movf	(0+(?_abs)),w
  4257  03A5  1283               	bcf	status, 5	;RP0=0, select bank0
  4258  03A6  1303               	bcf	status, 6	;RP1=0, select bank0
  4259  03A7  00C9               	movwf	(??_spin+4)+0
  4260  03A8  0749               	addwf	(??_spin+4)+0,w
  4261  03A9  0746               	addwf	0+(??_spin+1)+0,w
  4262  03AA  0084               	movwf	fsr0
  4263  03AB  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4264  03B0  00CA               	movwf	(??_spin+5)+0
  4265  03B1  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4266  03B6  00CB               	movwf	(??_spin+5)+0+1
  4267  03B7  184A               	btfsc	0+(??_spin+5)+0,0
  4268  03B8  2BBA               	goto	u4551
  4269  03B9  2BBE               	goto	u4550
  4270                           	
  4271  03BA                     u4551:
  4272  03BA  1283               	bcf	status, 5	;RP0=0, select bank0
  4273  03BB  1303               	bcf	status, 6	;RP1=0, select bank0
  4274  03BC  1405               	bsf	(40/8),(40)&7
  4275  03BD  2BC1               	goto	u4564
  4276  03BE                     u4550:
  4277  03BE  1283               	bcf	status, 5	;RP0=0, select bank0
  4278  03BF  1303               	bcf	status, 6	;RP1=0, select bank0
  4279  03C0  1005               	bcf	(40/8),(40)&7
  4280  03C1                     u4564:
  4281                           	line	256
  4282                           	
  4283  03C1                     l5274:	
  4284                           ;main.c: 256: RA1=pulse[i%4][abs(2-f)];
  4285  03C1  0850               	movf	(spin@i),w
  4286  03C2  3903               	andlw	03h
  4287  03C3  00C5               	movwf	(??_spin+0)+0
  4288  03C4  3003               	movlw	03h
  4289  03C5                     u4575:
  4290  03C5  1003               	clrc
  4291  03C6  0DC5               	rlf	(??_spin+0)+0,f
  4292  03C7  3EFF               	addlw	-1
  4293  03C8  1D03               	skipz
  4294  03C9  2BC5               	goto	u4575
  4295  03CA  3001               	movlw	((_pulse-__stringbase))&0ffh
  4296  03CB  0745               	addwf	0+(??_spin+0)+0,w
  4297  03CC  00C6               	movwf	(??_spin+1)+0
  4298  03CD  094E               	comf	(spin@f),w
  4299  03CE  00C7               	movwf	(??_spin+2)+0
  4300  03CF  094F               	comf	(spin@f+1),w
  4301  03D0  00C8               	movwf	((??_spin+2)+0+1)
  4302  03D1  0AC7               	incf	(??_spin+2)+0,f
  4303  03D2  1903               	skipnz
  4304  03D3  0AC8               	incf	((??_spin+2)+0+1),f
  4305  03D4  0847               	movf	0+(??_spin+2)+0,w
  4306  03D5  3E02               	addlw	low(02h)
  4307  03D6  00F0               	movwf	(?_abs)
  4308  03D7  0848               	movf	1+(??_spin+2)+0,w
  4309  03D8  1803               	skipnc
  4310  03D9  3E01               	addlw	1
  4311  03DA  3E00               	addlw	high(02h)
  4312  03DB  00F1               	movwf	1+(?_abs)
  4313  03DC  160A  118A  275F   	fcall	_abs
              120A  118A         
  4314  03E1  0870               	movf	(0+(?_abs)),w
  4315  03E2  1283               	bcf	status, 5	;RP0=0, select bank0
  4316  03E3  1303               	bcf	status, 6	;RP1=0, select bank0
  4317  03E4  00C9               	movwf	(??_spin+4)+0
  4318  03E5  0749               	addwf	(??_spin+4)+0,w
  4319  03E6  0746               	addwf	0+(??_spin+1)+0,w
  4320  03E7  0084               	movwf	fsr0
  4321  03E8  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4322  03ED  00CA               	movwf	(??_spin+5)+0
  4323  03EE  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4324  03F3  00CB               	movwf	(??_spin+5)+0+1
  4325  03F4  184A               	btfsc	0+(??_spin+5)+0,0
  4326  03F5  2BF7               	goto	u4581
  4327  03F6  2BFB               	goto	u4580
  4328                           	
  4329  03F7                     u4581:
  4330  03F7  1283               	bcf	status, 5	;RP0=0, select bank0
  4331  03F8  1303               	bcf	status, 6	;RP1=0, select bank0
  4332  03F9  1485               	bsf	(41/8),(41)&7
  4333  03FA  2BFE               	goto	u4594
  4334  03FB                     u4580:
  4335  03FB  1283               	bcf	status, 5	;RP0=0, select bank0
  4336  03FC  1303               	bcf	status, 6	;RP1=0, select bank0
  4337  03FD  1085               	bcf	(41/8),(41)&7
  4338  03FE                     u4594:
  4339                           	line	257
  4340                           	
  4341  03FE                     l5276:	
  4342                           ;main.c: 257: RA2=pulse[i%4][abs(1-f)];
  4343  03FE  0850               	movf	(spin@i),w
  4344  03FF  3903               	andlw	03h
  4345  0400  00C5               	movwf	(??_spin+0)+0
  4346  0401  3003               	movlw	03h
  4347  0402                     u4605:
  4348  0402  1003               	clrc
  4349  0403  0DC5               	rlf	(??_spin+0)+0,f
  4350  0404  3EFF               	addlw	-1
  4351  0405  1D03               	skipz
  4352  0406  2C02               	goto	u4605
  4353  0407  3001               	movlw	((_pulse-__stringbase))&0ffh
  4354  0408  0745               	addwf	0+(??_spin+0)+0,w
  4355  0409  00C6               	movwf	(??_spin+1)+0
  4356  040A  094E               	comf	(spin@f),w
  4357  040B  00C7               	movwf	(??_spin+2)+0
  4358  040C  094F               	comf	(spin@f+1),w
  4359  040D  00C8               	movwf	((??_spin+2)+0+1)
  4360  040E  0AC7               	incf	(??_spin+2)+0,f
  4361  040F  1903               	skipnz
  4362  0410  0AC8               	incf	((??_spin+2)+0+1),f
  4363  0411  0847               	movf	0+(??_spin+2)+0,w
  4364  0412  3E01               	addlw	low(01h)
  4365  0413  00F0               	movwf	(?_abs)
  4366  0414  0848               	movf	1+(??_spin+2)+0,w
  4367  0415  1803               	skipnc
  4368  0416  3E01               	addlw	1
  4369  0417  3E00               	addlw	high(01h)
  4370  0418  00F1               	movwf	1+(?_abs)
  4371  0419  160A  118A  275F   	fcall	_abs
              120A  118A         
  4372  041E  0870               	movf	(0+(?_abs)),w
  4373  041F  1283               	bcf	status, 5	;RP0=0, select bank0
  4374  0420  1303               	bcf	status, 6	;RP1=0, select bank0
  4375  0421  00C9               	movwf	(??_spin+4)+0
  4376  0422  0749               	addwf	(??_spin+4)+0,w
  4377  0423  0746               	addwf	0+(??_spin+1)+0,w
  4378  0424  0084               	movwf	fsr0
  4379  0425  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4380  042A  00CA               	movwf	(??_spin+5)+0
  4381  042B  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4382  0430  00CB               	movwf	(??_spin+5)+0+1
  4383  0431  184A               	btfsc	0+(??_spin+5)+0,0
  4384  0432  2C34               	goto	u4611
  4385  0433  2C38               	goto	u4610
  4386                           	
  4387  0434                     u4611:
  4388  0434  1283               	bcf	status, 5	;RP0=0, select bank0
  4389  0435  1303               	bcf	status, 6	;RP1=0, select bank0
  4390  0436  1505               	bsf	(42/8),(42)&7
  4391  0437  2C3B               	goto	u4624
  4392  0438                     u4610:
  4393  0438  1283               	bcf	status, 5	;RP0=0, select bank0
  4394  0439  1303               	bcf	status, 6	;RP1=0, select bank0
  4395  043A  1105               	bcf	(42/8),(42)&7
  4396  043B                     u4624:
  4397                           	line	258
  4398                           	
  4399  043B                     l5278:	
  4400                           ;main.c: 258: RA3=pulse[i%4][abs(0-f)];
  4401  043B  0850               	movf	(spin@i),w
  4402  043C  3903               	andlw	03h
  4403  043D  00C5               	movwf	(??_spin+0)+0
  4404  043E  3003               	movlw	03h
  4405  043F                     u4635:
  4406  043F  1003               	clrc
  4407  0440  0DC5               	rlf	(??_spin+0)+0,f
  4408  0441  3EFF               	addlw	-1
  4409  0442  1D03               	skipz
  4410  0443  2C3F               	goto	u4635
  4411  0444  3001               	movlw	((_pulse-__stringbase))&0ffh
  4412  0445  0745               	addwf	0+(??_spin+0)+0,w
  4413  0446  00C6               	movwf	(??_spin+1)+0
  4414  0447  094E               	comf	(spin@f),w
  4415  0448  00C7               	movwf	(??_spin+2)+0
  4416  0449  094F               	comf	(spin@f+1),w
  4417  044A  00C8               	movwf	((??_spin+2)+0+1)
  4418  044B  0AC7               	incf	(??_spin+2)+0,f
  4419  044C  1903               	skipnz
  4420  044D  0AC8               	incf	((??_spin+2)+0+1),f
  4421  044E  0847               	movf	0+(??_spin+2)+0,w
  4422  044F  00F0               	movwf	(?_abs)
  4423  0450  0848               	movf	1+(??_spin+2)+0,w
  4424  0451  00F1               	movwf	(?_abs+1)
  4425  0452  160A  118A  275F   	fcall	_abs
              120A  118A         
  4426  0457  0870               	movf	(0+(?_abs)),w
  4427  0458  1283               	bcf	status, 5	;RP0=0, select bank0
  4428  0459  1303               	bcf	status, 6	;RP1=0, select bank0
  4429  045A  00C9               	movwf	(??_spin+4)+0
  4430  045B  0749               	addwf	(??_spin+4)+0,w
  4431  045C  0746               	addwf	0+(??_spin+1)+0,w
  4432  045D  0084               	movwf	fsr0
  4433  045E  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4434  0463  00CA               	movwf	(??_spin+5)+0
  4435  0464  120A  158A  2000   	fcall	stringdir
              120A  118A         
  4436  0469  00CB               	movwf	(??_spin+5)+0+1
  4437  046A  184A               	btfsc	0+(??_spin+5)+0,0
  4438  046B  2C6D               	goto	u4641
  4439  046C  2C71               	goto	u4640
  4440                           	
  4441  046D                     u4641:
  4442  046D  1283               	bcf	status, 5	;RP0=0, select bank0
  4443  046E  1303               	bcf	status, 6	;RP1=0, select bank0
  4444  046F  1585               	bsf	(43/8),(43)&7
  4445  0470  2C74               	goto	u4654
  4446  0471                     u4640:
  4447  0471  1283               	bcf	status, 5	;RP0=0, select bank0
  4448  0472  1303               	bcf	status, 6	;RP1=0, select bank0
  4449  0473  1185               	bcf	(43/8),(43)&7
  4450  0474                     u4654:
  4451                           	line	259
  4452                           	
  4453  0474                     l5280:	
  4454                           ;main.c: 259: if (RB0) {while (RB0); if (myData.wise==1) myData.wise=0; else myData.wise
                                 =1;}
  4455  0474  1C06               	btfss	(48/8),(48)&7
  4456  0475  2C77               	goto	u4661
  4457  0476  2C78               	goto	u4660
  4458  0477                     u4661:
  4459  0477  2C8C               	goto	l5290
  4460  0478                     u4660:
  4461  0478  2C7A               	goto	l1182
  4462                           	
  4463  0479                     l5282:	
  4464  0479  2C7A               	goto	l1182
  4465                           	
  4466  047A                     l1183:	
  4467                           	
  4468  047A                     l1182:	
  4469  047A  1806               	btfsc	(48/8),(48)&7
  4470  047B  2C7D               	goto	u4671
  4471  047C  2C7E               	goto	u4670
  4472  047D                     u4671:
  4473  047D  2C7A               	goto	l1182
  4474  047E                     u4670:
  4475  047E  2C7F               	goto	l5284
  4476                           	
  4477  047F                     l1184:	
  4478                           	
  4479  047F                     l5284:	
  4480  047F  0843               	movf	0+(spin@myData)+09h,w
  4481  0480  3A01               	xorlw	01h
  4482  0481  1D03               	skipz
  4483  0482  2C84               	goto	u4681
  4484  0483  2C85               	goto	u4680
  4485  0484                     u4681:
  4486  0484  2C87               	goto	l5288
  4487  0485                     u4680:
  4488                           	
  4489  0485                     l5286:	
  4490  0485  01C3               	clrf	0+(spin@myData)+09h
  4491  0486  2C8C               	goto	l5290
  4492                           	
  4493  0487                     l1185:	
  4494                           	
  4495  0487                     l5288:	
  4496  0487  01C3               	clrf	0+(spin@myData)+09h
  4497  0488  1403               	bsf	status,0
  4498  0489  0DC3               	rlf	0+(spin@myData)+09h,f
  4499  048A  2C8C               	goto	l5290
  4500                           	
  4501  048B                     l1186:	
  4502  048B  2C8C               	goto	l5290
  4503                           	
  4504  048C                     l1181:	
  4505                           	line	252
  4506                           	
  4507  048C                     l5290:	
  4508  048C  3001               	movlw	low(01h)
  4509  048D  07D0               	addwf	(spin@i),f
  4510  048E  1803               	skipnc
  4511  048F  0AD1               	incf	(spin@i+1),f
  4512  0490  3000               	movlw	high(01h)
  4513  0491  07D1               	addwf	(spin@i+1),f
  4514  0492  2C93               	goto	l5292
  4515                           	
  4516  0493                     l1177:	
  4517                           	
  4518  0493                     l5292:	
  4519  0493  0851               	movf	(spin@i+1),w
  4520  0494  3A80               	xorlw	80h
  4521  0495  00C5               	movwf	(??_spin+0)+0
  4522  0496  084D               	movf	(spin@s+1),w
  4523  0497  3A80               	xorlw	80h
  4524  0498  0245               	subwf	(??_spin+0)+0,w
  4525  0499  1D03               	skipz
  4526  049A  2C9D               	goto	u4695
  4527  049B  084C               	movf	(spin@s),w
  4528  049C  0250               	subwf	(spin@i),w
  4529  049D                     u4695:
  4530                           
  4531  049D  1C03               	skipc
  4532  049E  2CA0               	goto	u4691
  4533  049F  2CA1               	goto	u4690
  4534  04A0                     u4691:
  4535  04A0  2B70               	goto	l5264
  4536  04A1                     u4690:
  4537  04A1  2CA2               	goto	l5294
  4538                           	
  4539  04A2                     l1187:	
  4540                           	line	264
  4541                           	
  4542  04A2                     l5294:	
  4543                           ;main.c: 262: }
  4544                           ;main.c: 264: motorRelax();
  4545  04A2  160A  118A  2749   	fcall	_motorRelax
              120A  118A         
  4546                           	line	266
  4547                           	
  4548  04A7                     l5296:	
  4549                           ;main.c: 266: return myData;
  4550  04A7  2CA8               	goto	l1188
  4551                           	
  4552  04A8                     l5298:	
  4553                           	line	267
  4554                           	
  4555  04A8                     l1188:	
  4556  04A8  0008               	return
  4557                           	opt stack 0
  4558                           GLOBAL	__end_of_spin
  4559  04A9                     	__end_of_spin:
  4560 ;; =============== function _spin ends ============
  4561                           
  4562                           	signat	_spin,4223
  4563                           	global	_getData
  4564                           psect	text1018,local,class=CODE,delta=2
  4565                           global __ptext1018
  4566  0039                     __ptext1018:
  4567                           
  4568 ;; *************** function _getData *****************
  4569 ;; Defined at:
  4570 ;;		line 229 in file "main.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  myMenu         13    0[BANK0 ] struct menu
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  myData         11   27[BANK0 ] struct data
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  11    0[BANK0 ] struct data
  4577 ;; Registers used:
  4578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4584 ;;      Params:         0      13       0       0       0
  4585 ;;      Locals:         0      13       0       0       0
  4586 ;;      Temps:          0      12       0       0       0
  4587 ;;      Totals:         0      38       0       0       0
  4588 ;;Total ram usage:       38 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    2
  4591 ;; This function calls:
  4592 ;;		___wmul
  4593 ;;		___lwdiv
  4594 ;;		___lwtoft
  4595 ;; This function is called by:
  4596 ;;		_main
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           psect	text1018
  4600                           	file	"main.c"
  4601                           	line	229
  4602                           	global	__size_of_getData
  4603  00DF                     	__size_of_getData	equ	__end_of_getData-_getData
  4604                           	
  4605  0039                     _getData:	
  4606                           	opt	stack 5
  4607                           ; Regs used in _getData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4608                           	line	231
  4609                           	
  4610  0039                     l5242:	
  4611                           ;main.c: 230: struct data myData;
  4612                           ;main.c: 231: myData.totalTime=(myMenu.m[3][0].value*3600)+(myMenu.m[3][1].value*60)+(my
                                 Menu.m[3][2].value*1);
  4613  0039  1283               	bcf	status, 5	;RP0=0, select bank0
  4614  003A  1303               	bcf	status, 6	;RP1=0, select bank0
  4615  003B  082B               	movf	(0+getData@myMenu+0Bh),w
  4616  003C  3E13               	addlw	low(013h)
  4617  003D  00AD               	movwf	(??_getData+0)+0
  4618  003E  082C               	movf	(1+getData@myMenu+0Bh),w
  4619  003F  1803               	skipnc
  4620  0040  3E01               	addlw	1
  4621  0041  3E00               	addlw	high(013h)
  4622  0042  00AE               	movwf	1+(??_getData+0)+0
  4623  0043  082D               	movf	0+(??_getData+0)+0,w
  4624  0044  0084               	movwf	fsr0
  4625  0045  1783               	bsf	status,7
  4626  0046  1C2E               	btfss	1+(??_getData+0)+0,0
  4627  0047  1383               	bcf	status,7
  4628  0048  0800               	movf	indf,w
  4629  0049  00AF               	movwf	(??_getData+2)+0+0
  4630  004A  0A84               	incf	fsr0,f
  4631  004B  0800               	movf	indf,w
  4632  004C  00B0               	movwf	(??_getData+2)+0+1
  4633  004D  082B               	movf	(0+getData@myMenu+0Bh),w
  4634  004E  3E05               	addlw	low(05h)
  4635  004F  00B1               	movwf	(??_getData+4)+0
  4636  0050  082C               	movf	(1+getData@myMenu+0Bh),w
  4637  0051  1803               	skipnc
  4638  0052  3E01               	addlw	1
  4639  0053  3E00               	addlw	high(05h)
  4640  0054  00B2               	movwf	1+(??_getData+4)+0
  4641  0055  0831               	movf	0+(??_getData+4)+0,w
  4642  0056  0084               	movwf	fsr0
  4643  0057  1783               	bsf	status,7
  4644  0058  1C32               	btfss	1+(??_getData+4)+0,0
  4645  0059  1383               	bcf	status,7
  4646  005A  0800               	movf	indf,w
  4647  005B  00F0               	movwf	(?___wmul)
  4648  005C  0A84               	incf	fsr0,f
  4649  005D  0800               	movf	indf,w
  4650  005E  00F1               	movwf	(?___wmul+1)
  4651  005F  3010               	movlw	low(0E10h)
  4652  0060  00F2               	movwf	0+(?___wmul)+02h
  4653  0061  300E               	movlw	high(0E10h)
  4654  0062  00F3               	movwf	(0+(?___wmul)+02h)+1
  4655  0063  120A  158A  214D   	fcall	___wmul
              120A  118A         
  4656  0068  0870               	movf	(0+?___wmul),w
  4657  0069  1283               	bcf	status, 5	;RP0=0, select bank0
  4658  006A  1303               	bcf	status, 6	;RP1=0, select bank0
  4659  006B  00B3               	movwf	(??_getData+6)+0
  4660  006C  0871               	movf	(1+?___wmul),w
  4661  006D  00B4               	movwf	((??_getData+6)+0+1)
  4662  006E  082B               	movf	(0+getData@myMenu+0Bh),w
  4663  006F  3E0C               	addlw	low(0Ch)
  4664  0070  00B5               	movwf	(??_getData+8)+0
  4665  0071  082C               	movf	(1+getData@myMenu+0Bh),w
  4666  0072  1803               	skipnc
  4667  0073  3E01               	addlw	1
  4668  0074  3E00               	addlw	high(0Ch)
  4669  0075  00B6               	movwf	1+(??_getData+8)+0
  4670  0076  0835               	movf	0+(??_getData+8)+0,w
  4671  0077  0084               	movwf	fsr0
  4672  0078  1783               	bsf	status,7
  4673  0079  1C36               	btfss	1+(??_getData+8)+0,0
  4674  007A  1383               	bcf	status,7
  4675  007B  0800               	movf	indf,w
  4676  007C  00F0               	movwf	(?___wmul)
  4677  007D  0A84               	incf	fsr0,f
  4678  007E  0800               	movf	indf,w
  4679  007F  00F1               	movwf	(?___wmul+1)
  4680  0080  303C               	movlw	low(03Ch)
  4681  0081  00F2               	movwf	0+(?___wmul)+02h
  4682  0082  3000               	movlw	high(03Ch)
  4683  0083  00F3               	movwf	(0+(?___wmul)+02h)+1
  4684  0084  120A  158A  214D   	fcall	___wmul
              120A  118A         
  4685  0089  0870               	movf	(0+(?___wmul)),w
  4686  008A  1283               	bcf	status, 5	;RP0=0, select bank0
  4687  008B  1303               	bcf	status, 6	;RP1=0, select bank0
  4688  008C  0733               	addwf	0+(??_getData+6)+0,w
  4689  008D  00B7               	movwf	(??_getData+10)+0
  4690  008E  0871               	movf	(1+(?___wmul)),w
  4691  008F  1803               	skipnc
  4692  0090  0A71               	incf	(1+(?___wmul)),w
  4693  0091  0734               	addwf	1+(??_getData+6)+0,w
  4694  0092  00B8               	movwf	1+(??_getData+10)+0
  4695  0093  082F               	movf	0+(??_getData+2)+0,w
  4696  0094  0737               	addwf	0+(??_getData+10)+0,w
  4697  0095  00BB               	movwf	(getData@myData)
  4698  0096  0830               	movf	1+(??_getData+2)+0,w
  4699  0097  1803               	skipnc
  4700  0098  0A30               	incf	1+(??_getData+2)+0,w
  4701  0099  0738               	addwf	1+(??_getData+10)+0,w
  4702  009A  00BC               	movwf	1+(getData@myData)
  4703                           	line	232
  4704                           	
  4705  009B                     l5244:	
  4706                           ;main.c: 232: myData.totalShots=myMenu.m[1][1].value;
  4707  009B  0827               	movf	(0+getData@myMenu+07h),w
  4708  009C  3E0C               	addlw	low(0Ch)
  4709  009D  00AD               	movwf	(??_getData+0)+0
  4710  009E  0828               	movf	(1+getData@myMenu+07h),w
  4711  009F  1803               	skipnc
  4712  00A0  3E01               	addlw	1
  4713  00A1  3E00               	addlw	high(0Ch)
  4714  00A2  00AE               	movwf	1+(??_getData+0)+0
  4715  00A3  082D               	movf	0+(??_getData+0)+0,w
  4716  00A4  0084               	movwf	fsr0
  4717  00A5  1783               	bsf	status,7
  4718  00A6  1C2E               	btfss	1+(??_getData+0)+0,0
  4719  00A7  1383               	bcf	status,7
  4720  00A8  0800               	movf	indf,w
  4721  00A9  00C2               	movwf	0+(getData@myData)+07h
  4722  00AA  0A84               	incf	fsr0,f
  4723  00AB  0800               	movf	indf,w
  4724  00AC  00C3               	movwf	1+(getData@myData)+07h
  4725                           	line	233
  4726                           	
  4727  00AD                     l5246:	
  4728                           ;main.c: 233: myData.spins_btw_shots=(1000/myData.totalShots)/5;
  4729  00AD  0843               	movf	1+(getData@myData)+07h,w
  4730  00AE  01F1               	clrf	(?___lwdiv+1)
  4731  00AF  07F1               	addwf	(?___lwdiv+1)
  4732  00B0  0842               	movf	0+(getData@myData)+07h,w
  4733  00B1  01F0               	clrf	(?___lwdiv)
  4734  00B2  07F0               	addwf	(?___lwdiv)
  4735                           
  4736  00B3  30E8               	movlw	low(03E8h)
  4737  00B4  00F2               	movwf	0+(?___lwdiv)+02h
  4738  00B5  3003               	movlw	high(03E8h)
  4739  00B6  00F3               	movwf	(0+(?___lwdiv)+02h)+1
  4740  00B7  120A  158A  22A6   	fcall	___lwdiv
              120A  118A         
  4741  00BC  0871               	movf	(1+(?___lwdiv)),w
  4742  00BD  1283               	bcf	status, 5	;RP0=0, select bank0
  4743  00BE  1303               	bcf	status, 6	;RP1=0, select bank0
  4744  00BF  01BA               	clrf	(_getData$3070+1)
  4745  00C0  07BA               	addwf	(_getData$3070+1)
  4746  00C1  0870               	movf	(0+(?___lwdiv)),w
  4747  00C2  01B9               	clrf	(_getData$3070)
  4748  00C3  07B9               	addwf	(_getData$3070)
  4749                           
  4750                           	
  4751  00C4                     l5248:	
  4752                           ;main.c: 233: myData.spins_btw_shots=(1000/myData.totalShots)/5;
  4753  00C4  3005               	movlw	low(05h)
  4754  00C5  00F0               	movwf	(?___lwdiv)
  4755  00C6  3000               	movlw	high(05h)
  4756  00C7  00F1               	movwf	((?___lwdiv))+1
  4757  00C8  083A               	movf	(_getData$3070+1),w
  4758  00C9  01F3               	clrf	1+(?___lwdiv)+02h
  4759  00CA  07F3               	addwf	1+(?___lwdiv)+02h
  4760  00CB  0839               	movf	(_getData$3070),w
  4761  00CC  01F2               	clrf	0+(?___lwdiv)+02h
  4762  00CD  07F2               	addwf	0+(?___lwdiv)+02h
  4763                           
  4764  00CE  120A  158A  22A6   	fcall	___lwdiv
              120A  118A         
  4765  00D3  0871               	movf	(1+(?___lwdiv)),w
  4766  00D4  01F9               	clrf	(?___lwtoft+1)
  4767  00D5  07F9               	addwf	(?___lwtoft+1)
  4768  00D6  0870               	movf	(0+(?___lwdiv)),w
  4769  00D7  01F8               	clrf	(?___lwtoft)
  4770  00D8  07F8               	addwf	(?___lwtoft)
  4771                           
  4772  00D9  160A  118A  2784   	fcall	___lwtoft
              120A  118A         
  4773  00DE  0878               	movf	(0+(?___lwtoft)),w
  4774  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
  4775  00E0  1303               	bcf	status, 6	;RP1=0, select bank0
  4776  00E1  00BD               	movwf	0+(getData@myData)+02h
  4777  00E2  0879               	movf	(1+(?___lwtoft)),w
  4778  00E3  00BE               	movwf	1+(getData@myData)+02h
  4779  00E4  087A               	movf	(2+(?___lwtoft)),w
  4780  00E5  00BF               	movwf	2+(getData@myData)+02h
  4781                           	line	234
  4782                           	
  4783  00E6                     l5250:	
  4784                           ;main.c: 234: myData.delay_btw_shots=(myData.totalTime/myData.totalShots);
  4785  00E6  0843               	movf	1+(getData@myData)+07h,w
  4786  00E7  01F1               	clrf	(?___lwdiv+1)
  4787  00E8  07F1               	addwf	(?___lwdiv+1)
  4788  00E9  0842               	movf	0+(getData@myData)+07h,w
  4789  00EA  01F0               	clrf	(?___lwdiv)
  4790  00EB  07F0               	addwf	(?___lwdiv)
  4791                           
  4792  00EC  083C               	movf	(getData@myData+1),w
  4793  00ED  01F3               	clrf	1+(?___lwdiv)+02h
  4794  00EE  07F3               	addwf	1+(?___lwdiv)+02h
  4795  00EF  083B               	movf	(getData@myData),w
  4796  00F0  01F2               	clrf	0+(?___lwdiv)+02h
  4797  00F1  07F2               	addwf	0+(?___lwdiv)+02h
  4798                           
  4799  00F2  120A  158A  22A6   	fcall	___lwdiv
              120A  118A         
  4800  00F7  0871               	movf	(1+(?___lwdiv)),w
  4801  00F8  1283               	bcf	status, 5	;RP0=0, select bank0
  4802  00F9  1303               	bcf	status, 6	;RP1=0, select bank0
  4803  00FA  01C1               	clrf	1+(getData@myData)+05h
  4804  00FB  07C1               	addwf	1+(getData@myData)+05h
  4805  00FC  0870               	movf	(0+(?___lwdiv)),w
  4806  00FD  01C0               	clrf	0+(getData@myData)+05h
  4807  00FE  07C0               	addwf	0+(getData@myData)+05h
  4808                           
  4809                           	line	235
  4810                           	
  4811  00FF                     l5252:	
  4812                           ;main.c: 235: myData.wise=0;
  4813  00FF  01C4               	clrf	0+(getData@myData)+09h
  4814                           	line	236
  4815                           	
  4816  0100                     l5254:	
  4817                           ;main.c: 236: myData.actualShots=0;
  4818  0100  01C5               	clrf	0+(getData@myData)+0Ah
  4819                           	line	237
  4820                           	
  4821  0101                     l5256:	
  4822                           ;main.c: 237: return myData;
  4823  0101  3020               	movlw	(?_getData)&0ffh
  4824  0102  0084               	movwf	fsr0
  4825  0103  303B               	movlw	low(getData@myData)
  4826  0104  00AD               	movwf	(??_getData+0)+0
  4827  0105  0804               	movf	fsr0,w
  4828  0106  00AE               	movwf	((??_getData+0)+0+1)
  4829  0107  300B               	movlw	11
  4830  0108  00AF               	movwf	((??_getData+0)+0+2)
  4831  0109                     u4520:
  4832  0109  082D               	movf	(??_getData+0)+0,w
  4833  010A  0084               	movwf	fsr0
  4834  010B  1383               	bcf	status, 7	;select IRP bank0
  4835                           	
  4836  010C  0800               	movf	indf,w
  4837  010D  00B0               	movwf	((??_getData+0)+0+3)
  4838  010E  0AAD               	incf	(??_getData+0)+0,f
  4839  010F  082E               	movf	((??_getData+0)+0+1),w
  4840  0110  0084               	movwf	fsr0
  4841                           	
  4842  0111  0830               	movf	((??_getData+0)+0+3),w
  4843  0112  0080               	movwf	indf
  4844  0113  0AAE               	incf	((??_getData+0)+0+1),f
  4845  0114  0BAF               	decfsz	((??_getData+0)+0+2),f
  4846  0115  2909               	goto	u4520
  4847  0116  2917               	goto	l1171
  4848                           	
  4849  0117                     l5258:	
  4850                           	line	238
  4851                           	
  4852  0117                     l1171:	
  4853  0117  0008               	return
  4854                           	opt stack 0
  4855                           GLOBAL	__end_of_getData
  4856  0118                     	__end_of_getData:
  4857 ;; =============== function _getData ends ============
  4858                           
  4859                           	signat	_getData,4223
  4860                           	global	___lwtoft
  4861                           psect	text1019,local,class=CODE,delta=2
  4862                           global __ptext1019
  4863  1784                     __ptext1019:
  4864                           
  4865 ;; *************** function ___lwtoft *****************
  4866 ;; Defined at:
  4867 ;;		line 29 in file "/Applications/HI-TECH/picc/9.83/sources/lwtoft.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  c               2    8[COMMON] unsigned int 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  3    8[COMMON] float 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0, pclath, cstack
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4881 ;;      Params:         3       0       0       0       0
  4882 ;;      Locals:         0       0       0       0       0
  4883 ;;      Temps:          1       0       0       0       0
  4884 ;;      Totals:         4       0       0       0       0
  4885 ;;Total ram usage:        4 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    1
  4888 ;; This function calls:
  4889 ;;		___ftpack
  4890 ;; This function is called by:
  4891 ;;		_getData
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           psect	text1019
  4895                           	file	"/Applications/HI-TECH/picc/9.83/sources/lwtoft.c"
  4896                           	line	29
  4897                           	global	__size_of___lwtoft
  4898  0017                     	__size_of___lwtoft	equ	__end_of___lwtoft-___lwtoft
  4899                           	
  4900  1784                     ___lwtoft:	
  4901                           	opt	stack 5
  4902                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  4903                           	line	30
  4904                           	
  4905  1784                     l5238:	
  4906  1784  0878               	movf	(___lwtoft@c),w
  4907  1785  00F0               	movwf	(?___ftpack)
  4908  1786  0879               	movf	(___lwtoft@c+1),w
  4909  1787  00F1               	movwf	(?___ftpack+1)
  4910  1788  01F2               	clrf	(?___ftpack+2)
  4911  1789  308E               	movlw	(08Eh)
  4912  178A  00FB               	movwf	(??___lwtoft+0)+0
  4913  178B  087B               	movf	(??___lwtoft+0)+0,w
  4914  178C  00F3               	movwf	0+(?___ftpack)+03h
  4915  178D  01F4               	clrf	0+(?___ftpack)+04h
  4916  178E  120A  158A  23BA   	fcall	___ftpack
              160A  118A         
  4917  1793  0870               	movf	(0+(?___ftpack)),w
  4918  1794  00F8               	movwf	(?___lwtoft)
  4919  1795  0871               	movf	(1+(?___ftpack)),w
  4920  1796  00F9               	movwf	(?___lwtoft+1)
  4921  1797  0872               	movf	(2+(?___ftpack)),w
  4922  1798  00FA               	movwf	(?___lwtoft+2)
  4923  1799  2F9A               	goto	l2535
  4924                           	
  4925  179A                     l5240:	
  4926                           	line	31
  4927                           	
  4928  179A                     l2535:	
  4929  179A  0008               	return
  4930                           	opt stack 0
  4931                           GLOBAL	__end_of___lwtoft
  4932  179B                     	__end_of___lwtoft:
  4933 ;; =============== function ___lwtoft ends ============
  4934                           
  4935                           	signat	___lwtoft,4219
  4936                           	global	___ftmul
  4937                           psect	text1020,local,class=CODE,delta=2
  4938                           global __ptext1020
  4939  0118                     __ptext1020:
  4940                           
  4941 ;; *************** function ___ftmul *****************
  4942 ;; Defined at:
  4943 ;;		line 52 in file "/Applications/HI-TECH/picc/9.83/sources/ftmul.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;  f1              3   10[BANK0 ] float 
  4946 ;;  f2              3   13[BANK0 ] float 
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;  f3_as_produc    3   21[BANK0 ] unsigned um
  4949 ;;  sign            1   25[BANK0 ] unsigned char 
  4950 ;;  cntr            1   24[BANK0 ] unsigned char 
  4951 ;;  exp             1   20[BANK0 ] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  3   10[BANK0 ] float 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2, status,0, pclath, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4961 ;;      Params:         0       6       0       0       0
  4962 ;;      Locals:         0       6       0       0       0
  4963 ;;      Temps:          0       4       0       0       0
  4964 ;;      Totals:         0      16       0       0       0
  4965 ;;Total ram usage:       16 bytes
  4966 ;; Hardware stack levels used:    1
  4967 ;; Hardware stack levels required when called:    1
  4968 ;; This function calls:
  4969 ;;		___ftpack
  4970 ;; This function is called by:
  4971 ;;		_spin
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           psect	text1020
  4975                           	file	"/Applications/HI-TECH/picc/9.83/sources/ftmul.c"
  4976                           	line	52
  4977                           	global	__size_of___ftmul
  4978  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  4979                           	
  4980  0118                     ___ftmul:	
  4981                           	opt	stack 4
  4982                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4983                           	line	56
  4984                           	
  4985  0118                     l5188:	
  4986  0118  1283               	bcf	status, 5	;RP0=0, select bank0
  4987  0119  1303               	bcf	status, 6	;RP1=0, select bank0
  4988  011A  082A               	movf	(___ftmul@f1),w
  4989  011B  00B0               	movwf	((??___ftmul+0)+0)
  4990  011C  082B               	movf	(___ftmul@f1+1),w
  4991  011D  00B1               	movwf	((??___ftmul+0)+0+1)
  4992  011E  082C               	movf	(___ftmul@f1+2),w
  4993  011F  00B2               	movwf	((??___ftmul+0)+0+2)
  4994  0120  1003               	clrc
  4995  0121  0D31               	rlf	(??___ftmul+0)+1,w
  4996  0122  0D32               	rlf	(??___ftmul+0)+2,w
  4997  0123  00B3               	movwf	(??___ftmul+3)+0
  4998  0124  0833               	movf	(??___ftmul+3)+0,w
  4999  0125  00B4               	movwf	(___ftmul@exp)
  5000  0126  08B4               	movf	((___ftmul@exp)),f
  5001  0127  1D03               	skipz
  5002  0128  292A               	goto	u4381
  5003  0129  292B               	goto	u4380
  5004  012A                     u4381:
  5005  012A  2933               	goto	l5194
  5006  012B                     u4380:
  5007                           	line	57
  5008                           	
  5009  012B                     l5190:	
  5010  012B  3000               	movlw	0x0
  5011  012C  00AA               	movwf	(?___ftmul)
  5012  012D  3000               	movlw	0x0
  5013  012E  00AB               	movwf	(?___ftmul+1)
  5014  012F  3000               	movlw	0x0
  5015  0130  00AC               	movwf	(?___ftmul+2)
  5016  0131  2A05               	goto	l2411
  5017                           	
  5018  0132                     l5192:	
  5019  0132  2A05               	goto	l2411
  5020                           	
  5021  0133                     l2410:	
  5022                           	line	58
  5023                           	
  5024  0133                     l5194:	
  5025  0133  082D               	movf	(___ftmul@f2),w
  5026  0134  00B0               	movwf	((??___ftmul+0)+0)
  5027  0135  082E               	movf	(___ftmul@f2+1),w
  5028  0136  00B1               	movwf	((??___ftmul+0)+0+1)
  5029  0137  082F               	movf	(___ftmul@f2+2),w
  5030  0138  00B2               	movwf	((??___ftmul+0)+0+2)
  5031  0139  1003               	clrc
  5032  013A  0D31               	rlf	(??___ftmul+0)+1,w
  5033  013B  0D32               	rlf	(??___ftmul+0)+2,w
  5034  013C  00B3               	movwf	(??___ftmul+3)+0
  5035  013D  0833               	movf	(??___ftmul+3)+0,w
  5036  013E  00B9               	movwf	(___ftmul@sign)
  5037  013F  08B9               	movf	((___ftmul@sign)),f
  5038  0140  1D03               	skipz
  5039  0141  2943               	goto	u4391
  5040  0142  2944               	goto	u4390
  5041  0143                     u4391:
  5042  0143  294C               	goto	l5200
  5043  0144                     u4390:
  5044                           	line	59
  5045                           	
  5046  0144                     l5196:	
  5047  0144  3000               	movlw	0x0
  5048  0145  00AA               	movwf	(?___ftmul)
  5049  0146  3000               	movlw	0x0
  5050  0147  00AB               	movwf	(?___ftmul+1)
  5051  0148  3000               	movlw	0x0
  5052  0149  00AC               	movwf	(?___ftmul+2)
  5053  014A  2A05               	goto	l2411
  5054                           	
  5055  014B                     l5198:	
  5056  014B  2A05               	goto	l2411
  5057                           	
  5058  014C                     l2412:	
  5059                           	line	60
  5060                           	
  5061  014C                     l5200:	
  5062  014C  0839               	movf	(___ftmul@sign),w
  5063  014D  3E7B               	addlw	07Bh
  5064  014E  00B0               	movwf	(??___ftmul+0)+0
  5065  014F  0830               	movf	(??___ftmul+0)+0,w
  5066  0150  07B4               	addwf	(___ftmul@exp),f
  5067                           	line	61
  5068  0151  082A               	movf	(___ftmul@f1),w
  5069  0152  00B0               	movwf	((??___ftmul+0)+0)
  5070  0153  082B               	movf	(___ftmul@f1+1),w
  5071  0154  00B1               	movwf	((??___ftmul+0)+0+1)
  5072  0155  082C               	movf	(___ftmul@f1+2),w
  5073  0156  00B2               	movwf	((??___ftmul+0)+0+2)
  5074  0157  3010               	movlw	010h
  5075  0158                     u4405:
  5076  0158  1003               	clrc
  5077  0159  0CB2               	rrf	(??___ftmul+0)+2,f
  5078  015A  0CB1               	rrf	(??___ftmul+0)+1,f
  5079  015B  0CB0               	rrf	(??___ftmul+0)+0,f
  5080  015C                     u4400:
  5081  015C  3EFF               	addlw	-1
  5082  015D  1D03               	skipz
  5083  015E  2958               	goto	u4405
  5084  015F  0830               	movf	0+(??___ftmul+0)+0,w
  5085  0160  00B3               	movwf	(??___ftmul+3)+0
  5086  0161  0833               	movf	(??___ftmul+3)+0,w
  5087  0162  00B9               	movwf	(___ftmul@sign)
  5088                           	line	62
  5089  0163  082D               	movf	(___ftmul@f2),w
  5090  0164  00B0               	movwf	((??___ftmul+0)+0)
  5091  0165  082E               	movf	(___ftmul@f2+1),w
  5092  0166  00B1               	movwf	((??___ftmul+0)+0+1)
  5093  0167  082F               	movf	(___ftmul@f2+2),w
  5094  0168  00B2               	movwf	((??___ftmul+0)+0+2)
  5095  0169  3010               	movlw	010h
  5096  016A                     u4415:
  5097  016A  1003               	clrc
  5098  016B  0CB2               	rrf	(??___ftmul+0)+2,f
  5099  016C  0CB1               	rrf	(??___ftmul+0)+1,f
  5100  016D  0CB0               	rrf	(??___ftmul+0)+0,f
  5101  016E                     u4410:
  5102  016E  3EFF               	addlw	-1
  5103  016F  1D03               	skipz
  5104  0170  296A               	goto	u4415
  5105  0171  0830               	movf	0+(??___ftmul+0)+0,w
  5106  0172  00B3               	movwf	(??___ftmul+3)+0
  5107  0173  0833               	movf	(??___ftmul+3)+0,w
  5108  0174  06B9               	xorwf	(___ftmul@sign),f
  5109                           	line	63
  5110  0175  3080               	movlw	(080h)
  5111  0176  00B0               	movwf	(??___ftmul+0)+0
  5112  0177  0830               	movf	(??___ftmul+0)+0,w
  5113  0178  05B9               	andwf	(___ftmul@sign),f
  5114                           	line	64
  5115                           	
  5116  0179                     l5202:	
  5117  0179  17AB               	bsf	(___ftmul@f1)+(15/8),(15)&7
  5118                           	line	66
  5119                           	
  5120  017A                     l5204:	
  5121  017A  17AE               	bsf	(___ftmul@f2)+(15/8),(15)&7
  5122                           	line	67
  5123                           	
  5124  017B                     l5206:	
  5125  017B  30FF               	movlw	0FFh
  5126  017C  05AD               	andwf	(___ftmul@f2),f
  5127  017D  30FF               	movlw	0FFh
  5128  017E  05AE               	andwf	(___ftmul@f2+1),f
  5129  017F  3000               	movlw	0
  5130  0180  05AF               	andwf	(___ftmul@f2+2),f
  5131                           	line	68
  5132                           	
  5133  0181                     l5208:	
  5134  0181  3000               	movlw	0
  5135  0182  00B5               	movwf	(___ftmul@f3_as_product)
  5136  0183  3000               	movlw	0
  5137  0184  00B6               	movwf	(___ftmul@f3_as_product+1)
  5138  0185  3000               	movlw	0
  5139  0186  00B7               	movwf	(___ftmul@f3_as_product+2)
  5140                           	line	69
  5141                           	
  5142  0187                     l5210:	
  5143  0187  3007               	movlw	(07h)
  5144  0188  00B0               	movwf	(??___ftmul+0)+0
  5145  0189  0830               	movf	(??___ftmul+0)+0,w
  5146  018A  00B8               	movwf	(___ftmul@cntr)
  5147  018B  298C               	goto	l5212
  5148                           	line	70
  5149                           	
  5150  018C                     l2413:	
  5151                           	line	71
  5152                           	
  5153  018C                     l5212:	
  5154  018C  1C2A               	btfss	(___ftmul@f1),(0)&7
  5155  018D  298F               	goto	u4421
  5156  018E  2990               	goto	u4420
  5157  018F                     u4421:
  5158  018F  29A1               	goto	l5216
  5159  0190                     u4420:
  5160                           	line	72
  5161                           	
  5162  0190                     l5214:	
  5163  0190  082D               	movf	(___ftmul@f2),w
  5164  0191  07B5               	addwf	(___ftmul@f3_as_product),f
  5165  0192  082E               	movf	(___ftmul@f2+1),w
  5166  0193  1103               	clrz
  5167  0194  1803               	skipnc
  5168  0195  0A2E               	incf	(___ftmul@f2+1),w
  5169  0196  1903               	skipnz
  5170  0197  2999               	goto	u4431
  5171  0198  07B6               	addwf	(___ftmul@f3_as_product+1),f
  5172  0199                     u4431:
  5173  0199  082F               	movf	(___ftmul@f2+2),w
  5174  019A  1103               	clrz
  5175  019B  1803               	skipnc
  5176  019C  0A2F               	incf	(___ftmul@f2+2),w
  5177  019D  1903               	skipnz
  5178  019E  29A0               	goto	u4432
  5179  019F  07B7               	addwf	(___ftmul@f3_as_product+2),f
  5180  01A0                     u4432:
  5181                           
  5182  01A0  29A1               	goto	l5216
  5183                           	
  5184  01A1                     l2414:	
  5185                           	line	73
  5186                           	
  5187  01A1                     l5216:	
  5188  01A1  3001               	movlw	01h
  5189  01A2                     u4445:
  5190  01A2  1003               	clrc
  5191  01A3  0CAC               	rrf	(___ftmul@f1+2),f
  5192  01A4  0CAB               	rrf	(___ftmul@f1+1),f
  5193  01A5  0CAA               	rrf	(___ftmul@f1),f
  5194  01A6  3EFF               	addlw	-1
  5195  01A7  1D03               	skipz
  5196  01A8  29A2               	goto	u4445
  5197                           
  5198                           	line	74
  5199                           	
  5200  01A9                     l5218:	
  5201  01A9  3001               	movlw	01h
  5202  01AA                     u4455:
  5203  01AA  1003               	clrc
  5204  01AB  0DAD               	rlf	(___ftmul@f2),f
  5205  01AC  0DAE               	rlf	(___ftmul@f2+1),f
  5206  01AD  0DAF               	rlf	(___ftmul@f2+2),f
  5207  01AE  3EFF               	addlw	-1
  5208  01AF  1D03               	skipz
  5209  01B0  29AA               	goto	u4455
  5210                           	line	75
  5211                           	
  5212  01B1                     l5220:	
  5213  01B1  3001               	movlw	low(01h)
  5214  01B2  02B8               	subwf	(___ftmul@cntr),f
  5215  01B3  1D03               	btfss	status,2
  5216  01B4  29B6               	goto	u4461
  5217  01B5  29B7               	goto	u4460
  5218  01B6                     u4461:
  5219  01B6  298C               	goto	l5212
  5220  01B7                     u4460:
  5221  01B7  29B8               	goto	l5222
  5222                           	
  5223  01B8                     l2415:	
  5224                           	line	76
  5225                           	
  5226  01B8                     l5222:	
  5227  01B8  3009               	movlw	(09h)
  5228  01B9  00B0               	movwf	(??___ftmul+0)+0
  5229  01BA  0830               	movf	(??___ftmul+0)+0,w
  5230  01BB  00B8               	movwf	(___ftmul@cntr)
  5231  01BC  29BD               	goto	l5224
  5232                           	line	77
  5233                           	
  5234  01BD                     l2416:	
  5235                           	line	78
  5236                           	
  5237  01BD                     l5224:	
  5238  01BD  1C2A               	btfss	(___ftmul@f1),(0)&7
  5239  01BE  29C0               	goto	u4471
  5240  01BF  29C1               	goto	u4470
  5241  01C0                     u4471:
  5242  01C0  29D2               	goto	l5228
  5243  01C1                     u4470:
  5244                           	line	79
  5245                           	
  5246  01C1                     l5226:	
  5247  01C1  082D               	movf	(___ftmul@f2),w
  5248  01C2  07B5               	addwf	(___ftmul@f3_as_product),f
  5249  01C3  082E               	movf	(___ftmul@f2+1),w
  5250  01C4  1103               	clrz
  5251  01C5  1803               	skipnc
  5252  01C6  0A2E               	incf	(___ftmul@f2+1),w
  5253  01C7  1903               	skipnz
  5254  01C8  29CA               	goto	u4481
  5255  01C9  07B6               	addwf	(___ftmul@f3_as_product+1),f
  5256  01CA                     u4481:
  5257  01CA  082F               	movf	(___ftmul@f2+2),w
  5258  01CB  1103               	clrz
  5259  01CC  1803               	skipnc
  5260  01CD  0A2F               	incf	(___ftmul@f2+2),w
  5261  01CE  1903               	skipnz
  5262  01CF  29D1               	goto	u4482
  5263  01D0  07B7               	addwf	(___ftmul@f3_as_product+2),f
  5264  01D1                     u4482:
  5265                           
  5266  01D1  29D2               	goto	l5228
  5267                           	
  5268  01D2                     l2417:	
  5269                           	line	80
  5270                           	
  5271  01D2                     l5228:	
  5272  01D2  3001               	movlw	01h
  5273  01D3                     u4495:
  5274  01D3  1003               	clrc
  5275  01D4  0CAC               	rrf	(___ftmul@f1+2),f
  5276  01D5  0CAB               	rrf	(___ftmul@f1+1),f
  5277  01D6  0CAA               	rrf	(___ftmul@f1),f
  5278  01D7  3EFF               	addlw	-1
  5279  01D8  1D03               	skipz
  5280  01D9  29D3               	goto	u4495
  5281                           
  5282                           	line	81
  5283                           	
  5284  01DA                     l5230:	
  5285  01DA  3001               	movlw	01h
  5286  01DB                     u4505:
  5287  01DB  1003               	clrc
  5288  01DC  0CB7               	rrf	(___ftmul@f3_as_product+2),f
  5289  01DD  0CB6               	rrf	(___ftmul@f3_as_product+1),f
  5290  01DE  0CB5               	rrf	(___ftmul@f3_as_product),f
  5291  01DF  3EFF               	addlw	-1
  5292  01E0  1D03               	skipz
  5293  01E1  29DB               	goto	u4505
  5294                           
  5295                           	line	82
  5296                           	
  5297  01E2                     l5232:	
  5298  01E2  3001               	movlw	low(01h)
  5299  01E3  02B8               	subwf	(___ftmul@cntr),f
  5300  01E4  1D03               	btfss	status,2
  5301  01E5  29E7               	goto	u4511
  5302  01E6  29E8               	goto	u4510
  5303  01E7                     u4511:
  5304  01E7  29BD               	goto	l5224
  5305  01E8                     u4510:
  5306  01E8  29E9               	goto	l5234
  5307                           	
  5308  01E9                     l2418:	
  5309                           	line	83
  5310                           	
  5311  01E9                     l5234:	
  5312  01E9  0835               	movf	(___ftmul@f3_as_product),w
  5313  01EA  00F0               	movwf	(?___ftpack)
  5314  01EB  0836               	movf	(___ftmul@f3_as_product+1),w
  5315  01EC  00F1               	movwf	(?___ftpack+1)
  5316  01ED  0837               	movf	(___ftmul@f3_as_product+2),w
  5317  01EE  00F2               	movwf	(?___ftpack+2)
  5318  01EF  0834               	movf	(___ftmul@exp),w
  5319  01F0  00B0               	movwf	(??___ftmul+0)+0
  5320  01F1  0830               	movf	(??___ftmul+0)+0,w
  5321  01F2  00F3               	movwf	0+(?___ftpack)+03h
  5322  01F3  0839               	movf	(___ftmul@sign),w
  5323  01F4  00B1               	movwf	(??___ftmul+1)+0
  5324  01F5  0831               	movf	(??___ftmul+1)+0,w
  5325  01F6  00F4               	movwf	0+(?___ftpack)+04h
  5326  01F7  120A  158A  23BA   	fcall	___ftpack
              120A  118A         
  5327  01FC  0870               	movf	(0+(?___ftpack)),w
  5328  01FD  1283               	bcf	status, 5	;RP0=0, select bank0
  5329  01FE  1303               	bcf	status, 6	;RP1=0, select bank0
  5330  01FF  00AA               	movwf	(?___ftmul)
  5331  0200  0871               	movf	(1+(?___ftpack)),w
  5332  0201  00AB               	movwf	(?___ftmul+1)
  5333  0202  0872               	movf	(2+(?___ftpack)),w
  5334  0203  00AC               	movwf	(?___ftmul+2)
  5335  0204  2A05               	goto	l2411
  5336                           	
  5337  0205                     l5236:	
  5338                           	line	84
  5339                           	
  5340  0205                     l2411:	
  5341  0205  0008               	return
  5342                           	opt stack 0
  5343                           GLOBAL	__end_of___ftmul
  5344  0206                     	__end_of___ftmul:
  5345 ;; =============== function ___ftmul ends ============
  5346                           
  5347                           	signat	___ftmul,8315
  5348                           	global	_LCD_STROBE
  5349                           psect	text1021,local,class=CODE,delta=2
  5350                           global __ptext1021
  5351  1757                     __ptext1021:
  5352                           
  5353 ;; *************** function _LCD_STROBE *****************
  5354 ;; Defined at:
  5355 ;;		line 373 in file "main.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;		None
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;		None
  5360 ;; Return value:  Size  Location     Type
  5361 ;;		None               void
  5362 ;; Registers used:
  5363 ;;		None
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5369 ;;      Params:         0       0       0       0       0
  5370 ;;      Locals:         0       0       0       0       0
  5371 ;;      Temps:          0       0       0       0       0
  5372 ;;      Totals:         0       0       0       0       0
  5373 ;;Total ram usage:        0 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_cmd
  5379 ;;		_data
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           psect	text1021
  5383                           	file	"main.c"
  5384                           	line	373
  5385                           	global	__size_of_LCD_STROBE
  5386  0008                     	__size_of_LCD_STROBE	equ	__end_of_LCD_STROBE-_LCD_STROBE
  5387                           	
  5388  1757                     _LCD_STROBE:	
  5389                           	opt	stack 3
  5390                           ; Regs used in _LCD_STROBE: []
  5391                           	line	374
  5392                           	
  5393  1757                     l5186:	
  5394                           ;main.c: 374: RA4 = 1;
  5395  1757  1283               	bcf	status, 5	;RP0=0, select bank0
  5396  1758  1303               	bcf	status, 6	;RP1=0, select bank0
  5397  1759  1605               	bsf	(44/8),(44)&7
  5398                           	line	375
  5399                           ;main.c: 375: _delay((unsigned long)((1)*(8000000/4000000.0)));
  5400                           		opt asmopt_off
  5401  175A  2F5B               	nop2	;2 cycle nop
  5402                           	opt asmopt_on
  5403                           
  5404                           	line	376
  5405                           ;main.c: 376: RA4 = 0;
  5406  175B  1283               	bcf	status, 5	;RP0=0, select bank0
  5407  175C  1303               	bcf	status, 6	;RP1=0, select bank0
  5408  175D  1205               	bcf	(44/8),(44)&7
  5409                           	line	377
  5410                           	
  5411  175E                     l1240:	
  5412  175E  0008               	return
  5413                           	opt stack 0
  5414                           GLOBAL	__end_of_LCD_STROBE
  5415  175F                     	__end_of_LCD_STROBE:
  5416 ;; =============== function _LCD_STROBE ends ============
  5417                           
  5418                           	signat	_LCD_STROBE,88
  5419                           	global	_sprintf
  5420                           psect	text1022,local,class=CODE,delta=2
  5421                           global __ptext1022
  5422  0206                     __ptext1022:
  5423                           
  5424 ;; *************** function _sprintf *****************
  5425 ;; Defined at:
  5426 ;;		line 488 in file "/Applications/HI-TECH/picc/9.83/lib/doprnt.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  sp              1    wreg     PTR unsigned char 
  5429 ;;		 -> printData@buffer(16), print@buffer(16), 
  5430 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  5431 ;;		 -> STR_24(12), STR_23(16), STR_22(8), STR_21(8), 
  5432 ;;		 -> STR_20(5), STR_19(5), 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  5435 ;;		 -> printData@buffer(16), print@buffer(16), 
  5436 ;;  _val            3   12[BANK0 ] struct .
  5437 ;;  c               1   15[BANK0 ] char 
  5438 ;;  ap              1   10[BANK0 ] PTR void [1]
  5439 ;;		 -> ?_sprintf(2), 
  5440 ;;  prec            1    9[BANK0 ] char 
  5441 ;;  flag            1    8[BANK0 ] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  2    0[BANK0 ] int 
  5444 ;; Registers used:
  5445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5451 ;;      Params:         0       5       0       0       0
  5452 ;;      Locals:         0       8       0       0       0
  5453 ;;      Temps:          0       3       0       0       0
  5454 ;;      Totals:         0      16       0       0       0
  5455 ;;Total ram usage:       16 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    1
  5458 ;; This function calls:
  5459 ;;		___lwdiv
  5460 ;;		___lwmod
  5461 ;; This function is called by:
  5462 ;;		_print
  5463 ;;		_printData
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           psect	text1022
  5467                           	file	"/Applications/HI-TECH/picc/9.83/sources/doprnt.c"
  5468                           	line	488
  5469                           	global	__size_of_sprintf
  5470  0139                     	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  5471                           	
  5472  0206                     _sprintf:	
  5473                           	opt	stack 4
  5474                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5475                           ;sprintf@sp stored from wreg
  5476                           	line	537
  5477  0206  1283               	bcf	status, 5	;RP0=0, select bank0
  5478  0207  1303               	bcf	status, 6	;RP1=0, select bank0
  5479  0208  00AB               	movwf	(sprintf@sp)
  5480                           	
  5481  0209                     l5114:	
  5482  0209  3021               	movlw	(?_sprintf+01h)&0ffh
  5483  020A  00A5               	movwf	(??_sprintf+0)+0
  5484  020B  0825               	movf	(??_sprintf+0)+0,w
  5485  020C  00AA               	movwf	(sprintf@ap)
  5486                           	line	540
  5487  020D  2B25               	goto	l5180
  5488                           	
  5489  020E                     l1296:	
  5490                           	line	542
  5491                           	
  5492  020E                     l5116:	
  5493  020E  082F               	movf	(sprintf@c),w
  5494  020F  3A25               	xorlw	025h
  5495  0210  1903               	skipnz
  5496  0211  2A13               	goto	u4281
  5497  0212  2A14               	goto	u4280
  5498  0213                     u4281:
  5499  0213  2A20               	goto	l1297
  5500  0214                     u4280:
  5501                           	line	545
  5502                           	
  5503  0214                     l5118:	
  5504  0214  082F               	movf	(sprintf@c),w
  5505  0215  00A5               	movwf	(??_sprintf+0)+0
  5506  0216  082B               	movf	(sprintf@sp),w
  5507  0217  0084               	movwf	fsr0
  5508  0218  0825               	movf	(??_sprintf+0)+0,w
  5509  0219  1383               	bcf	status, 7	;select IRP bank0
  5510  021A  0080               	movwf	indf
  5511                           	
  5512  021B                     l5120:	
  5513  021B  3001               	movlw	(01h)
  5514  021C  00A5               	movwf	(??_sprintf+0)+0
  5515  021D  0825               	movf	(??_sprintf+0)+0,w
  5516  021E  07AB               	addwf	(sprintf@sp),f
  5517                           	line	546
  5518  021F  2B25               	goto	l5180
  5519                           	line	547
  5520                           	
  5521  0220                     l1297:	
  5522                           	line	552
  5523  0220  01A8               	clrf	(sprintf@flag)
  5524                           	line	638
  5525  0221  2A5F               	goto	l5138
  5526                           	line	640
  5527                           	
  5528  0222                     l1299:	
  5529                           	line	641
  5530  0222  2B39               	goto	l5182
  5531                           	line	700
  5532                           	
  5533  0223                     l1301:	
  5534  0223  2A77               	goto	l5140
  5535                           	line	701
  5536                           	
  5537  0224                     l1302:	
  5538                           	line	702
  5539  0224  2A77               	goto	l5140
  5540                           	line	731
  5541                           	
  5542  0225                     l1304:	
  5543                           	line	737
  5544                           	
  5545  0225                     l5122:	
  5546  0225  082A               	movf	(sprintf@ap),w
  5547  0226  0084               	movwf	fsr0
  5548  0227  1383               	bcf	status, 7	;select IRP bank0
  5549  0228  0800               	movf	indf,w
  5550  0229  00A5               	movwf	(??_sprintf+0)+0
  5551  022A  0825               	movf	(??_sprintf+0)+0,w
  5552  022B  00AC               	movwf	(sprintf@_val)
  5553                           	
  5554  022C                     l5124:	
  5555  022C  3001               	movlw	(01h)
  5556  022D  00A5               	movwf	(??_sprintf+0)+0
  5557  022E  0825               	movf	(??_sprintf+0)+0,w
  5558  022F  07AA               	addwf	(sprintf@ap),f
  5559                           	line	743
  5560                           	
  5561  0230                     l5126:	
  5562  0230  08AC               	movf	(sprintf@_val),f
  5563  0231  1D03               	skipz
  5564  0232  2A34               	goto	u4291
  5565  0233  2A35               	goto	u4290
  5566  0234                     u4291:
  5567  0234  2A4F               	goto	l1306
  5568  0235                     u4290:
  5569                           	line	744
  5570                           	
  5571  0235                     l5128:	
  5572  0235  30A7               	movlw	((STR_25-__stringbase))&0ffh
  5573  0236  00A5               	movwf	(??_sprintf+0)+0
  5574  0237  0825               	movf	(??_sprintf+0)+0,w
  5575  0238  00AC               	movwf	(sprintf@_val)
  5576  0239  2A4F               	goto	l1306
  5577                           	
  5578  023A                     l1305:	
  5579                           	line	780
  5580  023A  2A4F               	goto	l1306
  5581                           	
  5582  023B                     l1307:	
  5583                           	line	781
  5584                           	
  5585  023B                     l5130:	
  5586  023B  082C               	movf	(sprintf@_val),w
  5587  023C  0084               	movwf	fsr0
  5588  023D  120A  158A  2000   	fcall	stringdir
              120A  118A         
  5589  0242  00A5               	movwf	(??_sprintf+0)+0
  5590  0243  082B               	movf	(sprintf@sp),w
  5591  0244  0084               	movwf	fsr0
  5592  0245  0825               	movf	(??_sprintf+0)+0,w
  5593  0246  0080               	movwf	indf
  5594                           	
  5595  0247                     l5132:	
  5596  0247  3001               	movlw	(01h)
  5597  0248  00A5               	movwf	(??_sprintf+0)+0
  5598  0249  0825               	movf	(??_sprintf+0)+0,w
  5599  024A  07AC               	addwf	(sprintf@_val),f
  5600                           	
  5601  024B                     l5134:	
  5602  024B  3001               	movlw	(01h)
  5603  024C  00A5               	movwf	(??_sprintf+0)+0
  5604  024D  0825               	movf	(??_sprintf+0)+0,w
  5605  024E  07AB               	addwf	(sprintf@sp),f
  5606                           	
  5607  024F                     l1306:	
  5608                           	line	780
  5609  024F  082C               	movf	(sprintf@_val),w
  5610  0250  0084               	movwf	fsr0
  5611  0251  120A  158A  2000   	fcall	stringdir
              120A  118A         
  5612  0256  3800               	iorlw	0
  5613  0257  1D03               	skipz
  5614  0258  2A5A               	goto	u4301
  5615  0259  2A5B               	goto	u4300
  5616  025A                     u4301:
  5617  025A  2A3B               	goto	l5130
  5618  025B                     u4300:
  5619  025B  2B25               	goto	l5180
  5620                           	
  5621  025C                     l1308:	
  5622                           	line	782
  5623  025C  2B25               	goto	l5180
  5624                           	line	805
  5625                           	
  5626  025D                     l1309:	
  5627                           	line	816
  5628  025D  2B25               	goto	l5180
  5629                           	line	825
  5630                           	
  5631  025E                     l5136:	
  5632  025E  2A77               	goto	l5140
  5633                           	line	638
  5634                           	
  5635  025F                     l1298:	
  5636                           	
  5637  025F                     l5138:	
  5638  025F  3001               	movlw	01h
  5639  0260  07A0               	addwf	(sprintf@f),f
  5640  0261  30FF               	movlw	-01h
  5641  0262  0720               	addwf	(sprintf@f),w
  5642  0263  0084               	movwf	fsr0
  5643  0264  120A  158A  2000   	fcall	stringdir
              120A  118A         
  5644  0269  00AF               	movwf	(sprintf@c)
  5645                           	; Switch size 1, requested type "space"
  5646                           ; Number of cases is 4, Range of values is 0 to 115
  5647                           ; switch strategies available:
  5648                           ; Name         Instructions Cycles
  5649                           ; simple_byte           13     7 (average)
  5650                           ; jumptable            260     6 (fixed)
  5651                           ; rangetable           120     6 (fixed)
  5652                           ; spacedrange          238     9 (fixed)
  5653                           ; locatedrange         116     3 (fixed)
  5654                           ;	Chosen strategy is simple_byte
  5655                           
  5656                           	opt asmopt_off
  5657  026A  3A00               	xorlw	0^0	; case 0
  5658  026B  1903               	skipnz
  5659  026C  2B39               	goto	l5182
  5660  026D  3A64               	xorlw	100^0	; case 100
  5661  026E  1903               	skipnz
  5662  026F  2A77               	goto	l5140
  5663  0270  3A0D               	xorlw	105^100	; case 105
  5664  0271  1903               	skipnz
  5665  0272  2A77               	goto	l5140
  5666  0273  3A1A               	xorlw	115^105	; case 115
  5667  0274  1903               	skipnz
  5668  0275  2A25               	goto	l5122
  5669  0276  2B25               	goto	l5180
  5670                           	opt asmopt_on
  5671                           
  5672                           	line	825
  5673                           	
  5674  0277                     l1303:	
  5675                           	line	1254
  5676                           	
  5677  0277                     l5140:	
  5678  0277  082A               	movf	(sprintf@ap),w
  5679  0278  0084               	movwf	fsr0
  5680  0279  1383               	bcf	status, 7	;select IRP bank0
  5681  027A  0800               	movf	indf,w
  5682  027B  00AC               	movwf	(sprintf@_val)
  5683  027C  0A84               	incf	fsr0,f
  5684  027D  0800               	movf	indf,w
  5685  027E  00AD               	movwf	(sprintf@_val+1)
  5686                           	
  5687  027F                     l5142:	
  5688  027F  3002               	movlw	(02h)
  5689  0280  00A5               	movwf	(??_sprintf+0)+0
  5690  0281  0825               	movf	(??_sprintf+0)+0,w
  5691  0282  07AA               	addwf	(sprintf@ap),f
  5692                           	line	1256
  5693                           	
  5694  0283                     l5144:	
  5695  0283  1FAD               	btfss	(sprintf@_val+1),7
  5696  0284  2A86               	goto	u4311
  5697  0285  2A87               	goto	u4310
  5698  0286                     u4311:
  5699  0286  2A91               	goto	l5150
  5700  0287                     u4310:
  5701                           	line	1257
  5702                           	
  5703  0287                     l5146:	
  5704  0287  3003               	movlw	(03h)
  5705  0288  00A5               	movwf	(??_sprintf+0)+0
  5706  0289  0825               	movf	(??_sprintf+0)+0,w
  5707  028A  04A8               	iorwf	(sprintf@flag),f
  5708                           	line	1258
  5709                           	
  5710  028B                     l5148:	
  5711  028B  09AC               	comf	(sprintf@_val),f
  5712  028C  09AD               	comf	(sprintf@_val+1),f
  5713  028D  0AAC               	incf	(sprintf@_val),f
  5714  028E  1903               	skipnz
  5715  028F  0AAD               	incf	(sprintf@_val+1),f
  5716  0290  2A91               	goto	l5150
  5717                           	line	1259
  5718                           	
  5719  0291                     l1310:	
  5720                           	line	1300
  5721                           	
  5722  0291                     l5150:	
  5723  0291  01AF               	clrf	(sprintf@c)
  5724  0292  1403               	bsf	status,0
  5725  0293  0DAF               	rlf	(sprintf@c),f
  5726                           	
  5727  0294                     l5152:	
  5728  0294  082F               	movf	(sprintf@c),w
  5729  0295  3A05               	xorlw	05h
  5730  0296  1D03               	skipz
  5731  0297  2A99               	goto	u4321
  5732  0298  2A9A               	goto	u4320
  5733  0299                     u4321:
  5734  0299  2A9C               	goto	l5156
  5735  029A                     u4320:
  5736  029A  2AC4               	goto	l5164
  5737                           	
  5738  029B                     l5154:	
  5739  029B  2AC4               	goto	l5164
  5740                           	line	1301
  5741                           	
  5742  029C                     l1311:	
  5743                           	
  5744  029C                     l5156:	
  5745  029C  082F               	movf	(sprintf@c),w
  5746  029D  00A5               	movwf	(??_sprintf+0)+0
  5747  029E  0725               	addwf	(??_sprintf+0)+0,w
  5748  029F  3E21               	addlw	low((_dpowers-__stringbase))
  5749  02A0  0084               	movwf	fsr0
  5750  02A1  120A  158A  2000   	fcall	stringdir
              120A  118A         
  5751  02A6  00A6               	movwf	(??_sprintf+1)+0
  5752  02A7  120A  158A  2000   	fcall	stringdir
              120A  118A         
  5753  02AC  00A7               	movwf	(??_sprintf+1)+0+1
  5754  02AD  0827               	movf	1+(??_sprintf+1)+0,w
  5755  02AE  022D               	subwf	(sprintf@_val+1),w
  5756  02AF  1D03               	skipz
  5757  02B0  2AB3               	goto	u4335
  5758  02B1  0826               	movf	0+(??_sprintf+1)+0,w
  5759  02B2  022C               	subwf	(sprintf@_val),w
  5760  02B3                     u4335:
  5761  02B3  1803               	skipnc
  5762  02B4  2AB6               	goto	u4331
  5763  02B5  2AB7               	goto	u4330
  5764  02B6                     u4331:
  5765  02B6  2AB9               	goto	l5160
  5766  02B7                     u4330:
  5767  02B7  2AC4               	goto	l5164
  5768                           	line	1302
  5769                           	
  5770  02B8                     l5158:	
  5771  02B8  2AC4               	goto	l5164
  5772                           	
  5773  02B9                     l1313:	
  5774                           	line	1300
  5775                           	
  5776  02B9                     l5160:	
  5777  02B9  3001               	movlw	(01h)
  5778  02BA  00A5               	movwf	(??_sprintf+0)+0
  5779  02BB  0825               	movf	(??_sprintf+0)+0,w
  5780  02BC  07AF               	addwf	(sprintf@c),f
  5781                           	
  5782  02BD                     l5162:	
  5783  02BD  082F               	movf	(sprintf@c),w
  5784  02BE  3A05               	xorlw	05h
  5785  02BF  1D03               	skipz
  5786  02C0  2AC2               	goto	u4341
  5787  02C1  2AC3               	goto	u4340
  5788  02C2                     u4341:
  5789  02C2  2A9C               	goto	l5156
  5790  02C3                     u4340:
  5791  02C3  2AC4               	goto	l5164
  5792                           	
  5793  02C4                     l1312:	
  5794                           	line	1433
  5795                           	
  5796  02C4                     l5164:	
  5797  02C4  0828               	movf	(sprintf@flag),w
  5798  02C5  3903               	andlw	03h
  5799  02C6  1903               	btfsc	status,2
  5800  02C7  2AC9               	goto	u4351
  5801  02C8  2ACA               	goto	u4350
  5802  02C9                     u4351:
  5803  02C9  2AD6               	goto	l5170
  5804  02CA                     u4350:
  5805                           	line	1434
  5806                           	
  5807  02CA                     l5166:	
  5808  02CA  302D               	movlw	(02Dh)
  5809  02CB  00A5               	movwf	(??_sprintf+0)+0
  5810  02CC  082B               	movf	(sprintf@sp),w
  5811  02CD  0084               	movwf	fsr0
  5812  02CE  0825               	movf	(??_sprintf+0)+0,w
  5813  02CF  1383               	bcf	status, 7	;select IRP bank0
  5814  02D0  0080               	movwf	indf
  5815                           	
  5816  02D1                     l5168:	
  5817  02D1  3001               	movlw	(01h)
  5818  02D2  00A5               	movwf	(??_sprintf+0)+0
  5819  02D3  0825               	movf	(??_sprintf+0)+0,w
  5820  02D4  07AB               	addwf	(sprintf@sp),f
  5821  02D5  2AD6               	goto	l5170
  5822                           	
  5823  02D6                     l1314:	
  5824                           	line	1467
  5825                           	
  5826  02D6                     l5170:	
  5827  02D6  082F               	movf	(sprintf@c),w
  5828  02D7  00A5               	movwf	(??_sprintf+0)+0
  5829  02D8  0825               	movf	(??_sprintf+0)+0,w
  5830  02D9  00A9               	movwf	(sprintf@prec)
  5831                           	line	1469
  5832  02DA  2B19               	goto	l5178
  5833                           	
  5834  02DB                     l1316:	
  5835                           	line	1484
  5836                           	
  5837  02DB                     l5172:	
  5838  02DB  300A               	movlw	low(0Ah)
  5839  02DC  00F8               	movwf	(?___lwmod)
  5840  02DD  3000               	movlw	high(0Ah)
  5841  02DE  00F9               	movwf	((?___lwmod))+1
  5842  02DF  0829               	movf	(sprintf@prec),w
  5843  02E0  00A5               	movwf	(??_sprintf+0)+0
  5844  02E1  0725               	addwf	(??_sprintf+0)+0,w
  5845  02E2  3E21               	addlw	low((_dpowers-__stringbase))
  5846  02E3  0084               	movwf	fsr0
  5847  02E4  120A  158A  2000   	fcall	stringdir
              120A  118A         
  5848  02E9  00F0               	movwf	(?___lwdiv)
  5849  02EA  120A  158A  2000   	fcall	stringdir
              120A  118A         
  5850  02EF  00F1               	movwf	(?___lwdiv+1)
  5851  02F0  082D               	movf	(sprintf@_val+1),w
  5852  02F1  01F3               	clrf	1+(?___lwdiv)+02h
  5853  02F2  07F3               	addwf	1+(?___lwdiv)+02h
  5854  02F3  082C               	movf	(sprintf@_val),w
  5855  02F4  01F2               	clrf	0+(?___lwdiv)+02h
  5856  02F5  07F2               	addwf	0+(?___lwdiv)+02h
  5857                           
  5858  02F6  120A  158A  22A6   	fcall	___lwdiv
              120A  118A         
  5859  02FB  0871               	movf	(1+(?___lwdiv)),w
  5860  02FC  01FB               	clrf	1+(?___lwmod)+02h
  5861  02FD  07FB               	addwf	1+(?___lwmod)+02h
  5862  02FE  0870               	movf	(0+(?___lwdiv)),w
  5863  02FF  01FA               	clrf	0+(?___lwmod)+02h
  5864  0300  07FA               	addwf	0+(?___lwmod)+02h
  5865                           
  5866  0301  120A  158A  2262   	fcall	___lwmod
              120A  118A         
  5867  0306  0878               	movf	(0+(?___lwmod)),w
  5868  0307  3E30               	addlw	030h
  5869  0308  1283               	bcf	status, 5	;RP0=0, select bank0
  5870  0309  1303               	bcf	status, 6	;RP1=0, select bank0
  5871  030A  00A6               	movwf	(??_sprintf+1)+0
  5872  030B  0826               	movf	(??_sprintf+1)+0,w
  5873  030C  00AF               	movwf	(sprintf@c)
  5874                           	line	1516
  5875                           	
  5876  030D                     l5174:	
  5877  030D  082F               	movf	(sprintf@c),w
  5878  030E  00A5               	movwf	(??_sprintf+0)+0
  5879  030F  082B               	movf	(sprintf@sp),w
  5880  0310  0084               	movwf	fsr0
  5881  0311  0825               	movf	(??_sprintf+0)+0,w
  5882  0312  1383               	bcf	status, 7	;select IRP bank0
  5883  0313  0080               	movwf	indf
  5884                           	
  5885  0314                     l5176:	
  5886  0314  3001               	movlw	(01h)
  5887  0315  00A5               	movwf	(??_sprintf+0)+0
  5888  0316  0825               	movf	(??_sprintf+0)+0,w
  5889  0317  07AB               	addwf	(sprintf@sp),f
  5890  0318  2B19               	goto	l5178
  5891                           	line	1517
  5892                           	
  5893  0319                     l1315:	
  5894                           	line	1469
  5895                           	
  5896  0319                     l5178:	
  5897  0319  30FF               	movlw	(-1)
  5898  031A  00A5               	movwf	(??_sprintf+0)+0
  5899  031B  0825               	movf	(??_sprintf+0)+0,w
  5900  031C  07A9               	addwf	(sprintf@prec),f
  5901  031D  0829               	movf	((sprintf@prec)),w
  5902  031E  3AFF               	xorlw	-1
  5903  031F  1D03               	skipz
  5904  0320  2B22               	goto	u4361
  5905  0321  2B23               	goto	u4360
  5906  0322                     u4361:
  5907  0322  2ADB               	goto	l5172
  5908  0323                     u4360:
  5909  0323  2B25               	goto	l5180
  5910                           	
  5911  0324                     l1317:	
  5912  0324  2B25               	goto	l5180
  5913                           	line	1525
  5914                           	
  5915  0325                     l1295:	
  5916                           	line	540
  5917                           	
  5918  0325                     l5180:	
  5919  0325  3001               	movlw	01h
  5920  0326  07A0               	addwf	(sprintf@f),f
  5921  0327  30FF               	movlw	-01h
  5922  0328  0720               	addwf	(sprintf@f),w
  5923  0329  0084               	movwf	fsr0
  5924  032A  120A  158A  2000   	fcall	stringdir
              120A  118A         
  5925  032F  00A5               	movwf	(??_sprintf+0)+0
  5926  0330  0825               	movf	(??_sprintf+0)+0,w
  5927  0331  00AF               	movwf	(sprintf@c)
  5928  0332  08AF               	movf	((sprintf@c)),f
  5929  0333  1D03               	skipz
  5930  0334  2B36               	goto	u4371
  5931  0335  2B37               	goto	u4370
  5932  0336                     u4371:
  5933  0336  2A0E               	goto	l5116
  5934  0337                     u4370:
  5935  0337  2B39               	goto	l5182
  5936                           	
  5937  0338                     l1318:	
  5938  0338  2B39               	goto	l5182
  5939                           	line	1527
  5940                           	
  5941  0339                     l1300:	
  5942                           	line	1530
  5943                           	
  5944  0339                     l5182:	
  5945  0339  082B               	movf	(sprintf@sp),w
  5946  033A  0084               	movwf	fsr0
  5947  033B  1383               	bcf	status, 7	;select IRP bank0
  5948  033C  0180               	clrf	indf
  5949  033D  2B3E               	goto	l1319
  5950                           	line	1532
  5951                           	
  5952  033E                     l5184:	
  5953                           	line	1533
  5954                           ;	Return value of _sprintf is never used
  5955                           	
  5956  033E                     l1319:	
  5957  033E  0008               	return
  5958                           	opt stack 0
  5959                           GLOBAL	__end_of_sprintf
  5960  033F                     	__end_of_sprintf:
  5961 ;; =============== function _sprintf ends ============
  5962                           
  5963                           	signat	_sprintf,4698
  5964                           	global	_SendIRSequence
  5965                           psect	text1023,local,class=CODE,delta=2
  5966                           global __ptext1023
  5967  0007                     __ptext1023:
  5968                           
  5969 ;; *************** function _SendIRSequence *****************
  5970 ;; Defined at:
  5971 ;;		line 219 in file "main.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;		None
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;		None               void
  5978 ;; Registers used:
  5979 ;;		wreg, status,2, status,0, pclath, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5985 ;;      Params:         0       0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0
  5987 ;;      Temps:          2       0       0       0       0
  5988 ;;      Totals:         2       0       0       0       0
  5989 ;;Total ram usage:        2 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    1
  5992 ;; This function calls:
  5993 ;;		_SendIRPulseCycles
  5994 ;; This function is called by:
  5995 ;;		_takePic
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           psect	text1023
  5999                           	file	"main.c"
  6000                           	line	219
  6001                           	global	__size_of_SendIRSequence
  6002  0032                     	__size_of_SendIRSequence	equ	__end_of_SendIRSequence-_SendIRSequence
  6003                           	
  6004  0007                     _SendIRSequence:	
  6005                           	opt	stack 4
  6006                           ; Regs used in _SendIRSequence: [wreg+status,2+status,0+pclath+cstack]
  6007                           	line	220
  6008                           	
  6009  0007                     l5104:	
  6010                           ;main.c: 220: SendIRPulseCycles(2250/25);;
  6011  0007  305A               	movlw	(05Ah)
  6012  0008  120A  158A  21CD   	fcall	_SendIRPulseCycles
              120A  118A         
  6013                           	line	221
  6014                           	
  6015  000D                     l5106:	
  6016                           ;main.c: 221: _delay((unsigned long)((27600)*(8000000/4000000.0)));
  6017                           	opt asmopt_off
  6018  000D  3048               movlw	72
  6019  000E  00F2               movwf	((??_SendIRSequence+0)+0+1),f
  6020  000F  30AF               	movlw	175
  6021  0010  00F1               movwf	((??_SendIRSequence+0)+0),f
  6022  0011                     u5217:
  6023  0011  0BF1               	decfsz	((??_SendIRSequence+0)+0),f
  6024  0012  2811               	goto	u5217
  6025  0013  0BF2               	decfsz	((??_SendIRSequence+0)+0+1),f
  6026  0014  2811               	goto	u5217
  6027                           opt asmopt_on
  6028                           
  6029                           	line	222
  6030                           	
  6031  0015                     l5108:	
  6032                           ;main.c: 222: SendIRPulseCycles(650/25);;
  6033  0015  301A               	movlw	(01Ah)
  6034  0016  120A  158A  21CD   	fcall	_SendIRPulseCycles
              120A  118A         
  6035                           	line	223
  6036                           ;main.c: 223: _delay((unsigned long)((1375)*(8000000/4000000.0)));
  6037                           	opt asmopt_off
  6038  001B  3004               movlw	4
  6039  001C  00F2               movwf	((??_SendIRSequence+0)+0+1),f
  6040  001D  3091               	movlw	145
  6041  001E  00F1               movwf	((??_SendIRSequence+0)+0),f
  6042  001F                     u5227:
  6043  001F  0BF1               	decfsz	((??_SendIRSequence+0)+0),f
  6044  0020  281F               	goto	u5227
  6045  0021  0BF2               	decfsz	((??_SendIRSequence+0)+0+1),f
  6046  0022  281F               	goto	u5227
  6047                           opt asmopt_on
  6048                           
  6049                           	line	224
  6050                           	
  6051  0023                     l5110:	
  6052                           ;main.c: 224: SendIRPulseCycles(575/25);;
  6053  0023  3017               	movlw	(017h)
  6054  0024  120A  158A  21CD   	fcall	_SendIRPulseCycles
              120A  118A         
  6055                           	line	225
  6056                           	
  6057  0029                     l5112:	
  6058                           ;main.c: 225: _delay((unsigned long)((3350)*(8000000/4000000.0)));
  6059                           	opt asmopt_off
  6060  0029  3009               movlw	9
  6061  002A  00F2               movwf	((??_SendIRSequence+0)+0+1),f
  6062  002B  30B2               	movlw	178
  6063  002C  00F1               movwf	((??_SendIRSequence+0)+0),f
  6064  002D                     u5237:
  6065  002D  0BF1               	decfsz	((??_SendIRSequence+0)+0),f
  6066  002E  282D               	goto	u5237
  6067  002F  0BF2               	decfsz	((??_SendIRSequence+0)+0+1),f
  6068  0030  282D               	goto	u5237
  6069  0031  0064               	clrwdt
  6070                           opt asmopt_on
  6071                           
  6072                           	line	226
  6073                           ;main.c: 226: SendIRPulseCycles(650/25);;
  6074  0032  301A               	movlw	(01Ah)
  6075  0033  120A  158A  21CD   	fcall	_SendIRPulseCycles
              120A  118A         
  6076                           	line	227
  6077                           	
  6078  0038                     l1168:	
  6079  0038  0008               	return
  6080                           	opt stack 0
  6081                           GLOBAL	__end_of_SendIRSequence
  6082  0039                     	__end_of_SendIRSequence:
  6083 ;; =============== function _SendIRSequence ends ============
  6084                           
  6085                           	signat	_SendIRSequence,88
  6086                           	global	_deselect
  6087                           psect	text1024,local,class=CODE,delta=2
  6088                           global __ptext1024
  6089  0DF0                     __ptext1024:
  6090                           
  6091 ;; *************** function _deselect *****************
  6092 ;; Defined at:
  6093 ;;		line 307 in file "main.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  myMenu         13    0[BANK0 ] struct menu
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;		None
  6098 ;; Return value:  Size  Location     Type
  6099 ;;                  13    0[BANK0 ] struct menu
  6100 ;; Registers used:
  6101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6102 ;; Tracked objects:
  6103 ;;		On entry : 0/0
  6104 ;;		On exit  : 0/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6107 ;;      Params:         0      13       0       0       0
  6108 ;;      Locals:         0       0       0       0       0
  6109 ;;      Temps:          9       0       0       0       0
  6110 ;;      Totals:         9      13       0       0       0
  6111 ;;Total ram usage:       22 bytes
  6112 ;; Hardware stack levels used:    1
  6113 ;; Hardware stack levels required when called:    1
  6114 ;; This function calls:
  6115 ;;		___bmul
  6116 ;; This function is called by:
  6117 ;;		_main
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           psect	text1024
  6121                           	file	"main.c"
  6122                           	line	307
  6123                           	global	__size_of_deselect
  6124  009D                     	__size_of_deselect	equ	__end_of_deselect-_deselect
  6125                           	
  6126  0DF0                     _deselect:	
  6127                           	opt	stack 6
  6128                           ; Regs used in _deselect: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6129                           	line	308
  6130                           	
  6131  0DF0                     l5092:	
  6132                           ;main.c: 308: if (myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].up!=255) {
  6133  0DF0  1283               	bcf	status, 5	;RP0=0, select bank0
  6134  0DF1  1303               	bcf	status, 6	;RP1=0, select bank0
  6135  0DF2  0822               	movf	0+(deselect@myMenu)+02h,w
  6136  0DF3  00F4               	movwf	(??_deselect+0)+0
  6137  0DF4  0774               	addwf	(??_deselect+0)+0,w
  6138  0DF5  3E05               	addlw	05h
  6139  0DF6  3E20               	addlw	deselect@myMenu&0ffh
  6140  0DF7  0084               	movwf	fsr0
  6141  0DF8  1383               	bcf	status, 7	;select IRP bank0
  6142  0DF9  0800               	movf	indf,w
  6143  0DFA  00F5               	movwf	(??_deselect+1)+0+0
  6144  0DFB  0A84               	incf	fsr0,f
  6145  0DFC  0800               	movf	indf,w
  6146  0DFD  00F6               	movwf	(??_deselect+1)+0+1
  6147  0DFE  3007               	movlw	(07h)
  6148  0DFF  00F7               	movwf	(??_deselect+3)+0
  6149  0E00  0877               	movf	(??_deselect+3)+0,w
  6150  0E01  00F0               	movwf	(?___bmul)
  6151  0E02  0823               	movf	0+(deselect@myMenu)+03h,w
  6152  0E03  160A  118A  27B3   	fcall	___bmul
              120A  158A         
  6153  0E08  0775               	addwf	0+(??_deselect+1)+0,w
  6154  0E09  00F8               	movwf	(??_deselect+4)+0
  6155  0E0A  0876               	movf	1+(??_deselect+1)+0,w
  6156  0E0B  1803               	skipnc
  6157  0E0C  3E01               	addlw	1
  6158  0E0D  00F9               	movwf	1+((??_deselect+4)+0)
  6159  0E0E  0878               	movf	0+(??_deselect+4)+0,w
  6160  0E0F  3E02               	addlw	low(02h)
  6161  0E10  00FA               	movwf	(??_deselect+6)+0
  6162  0E11  0879               	movf	1+(??_deselect+4)+0,w
  6163  0E12  1803               	skipnc
  6164  0E13  3E01               	addlw	1
  6165  0E14  3E00               	addlw	high(02h)
  6166  0E15  00FB               	movwf	1+(??_deselect+6)+0
  6167  0E16  087A               	movf	0+(??_deselect+6)+0,w
  6168  0E17  0084               	movwf	fsr0
  6169  0E18  1783               	bsf	status,7
  6170  0E19  1C7B               	btfss	1+(??_deselect+6)+0,0
  6171  0E1A  1383               	bcf	status,7
  6172  0E1B  0800               	movf	indf,w
  6173  0E1C  3AFF               	xorlw	0FFh
  6174  0E1D  1903               	skipnz
  6175  0E1E  2E20               	goto	u4261
  6176  0E1F  2E21               	goto	u4260
  6177  0E20                     u4261:
  6178  0E20  2E8B               	goto	l5100
  6179  0E21                     u4260:
  6180                           	line	309
  6181                           	
  6182  0E21                     l5094:	
  6183                           ;main.c: 309: if (myMenu.pos.set==1) myMenu.pos.set=0;
  6184  0E21  1283               	bcf	status, 5	;RP0=0, select bank0
  6185  0E22  1303               	bcf	status, 6	;RP1=0, select bank0
  6186  0E23  0824               	movf	0+(deselect@myMenu)+04h,w
  6187  0E24  3A01               	xorlw	01h
  6188  0E25  1D03               	skipz
  6189  0E26  2E28               	goto	u4271
  6190  0E27  2E29               	goto	u4270
  6191  0E28                     u4271:
  6192  0E28  2E2B               	goto	l5098
  6193  0E29                     u4270:
  6194                           	
  6195  0E29                     l5096:	
  6196  0E29  01A4               	clrf	0+(deselect@myMenu)+04h
  6197  0E2A  2E8B               	goto	l5100
  6198                           	line	310
  6199                           	
  6200  0E2B                     l1221:	
  6201                           	line	311
  6202                           	
  6203  0E2B                     l5098:	
  6204                           ;main.c: 310: else {
  6205                           ;main.c: 311: myMenu.pos.index=myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].indexUp;
  6206  0E2B  0822               	movf	0+(deselect@myMenu)+02h,w
  6207  0E2C  00F4               	movwf	(??_deselect+0)+0
  6208  0E2D  0774               	addwf	(??_deselect+0)+0,w
  6209  0E2E  3E05               	addlw	05h
  6210  0E2F  3E20               	addlw	deselect@myMenu&0ffh
  6211  0E30  0084               	movwf	fsr0
  6212  0E31  1383               	bcf	status, 7	;select IRP bank0
  6213  0E32  0800               	movf	indf,w
  6214  0E33  00F5               	movwf	(??_deselect+1)+0+0
  6215  0E34  0A84               	incf	fsr0,f
  6216  0E35  0800               	movf	indf,w
  6217  0E36  00F6               	movwf	(??_deselect+1)+0+1
  6218  0E37  3007               	movlw	(07h)
  6219  0E38  00F7               	movwf	(??_deselect+3)+0
  6220  0E39  0877               	movf	(??_deselect+3)+0,w
  6221  0E3A  00F0               	movwf	(?___bmul)
  6222  0E3B  0823               	movf	0+(deselect@myMenu)+03h,w
  6223  0E3C  160A  118A  27B3   	fcall	___bmul
              120A  158A         
  6224  0E41  0775               	addwf	0+(??_deselect+1)+0,w
  6225  0E42  00F8               	movwf	(??_deselect+4)+0
  6226  0E43  0876               	movf	1+(??_deselect+1)+0,w
  6227  0E44  1803               	skipnc
  6228  0E45  3E01               	addlw	1
  6229  0E46  00F9               	movwf	1+((??_deselect+4)+0)
  6230  0E47  0878               	movf	0+(??_deselect+4)+0,w
  6231  0E48  3E03               	addlw	low(03h)
  6232  0E49  00FA               	movwf	(??_deselect+6)+0
  6233  0E4A  0879               	movf	1+(??_deselect+4)+0,w
  6234  0E4B  1803               	skipnc
  6235  0E4C  3E01               	addlw	1
  6236  0E4D  3E00               	addlw	high(03h)
  6237  0E4E  00FB               	movwf	1+(??_deselect+6)+0
  6238  0E4F  087A               	movf	0+(??_deselect+6)+0,w
  6239  0E50  0084               	movwf	fsr0
  6240  0E51  1783               	bsf	status,7
  6241  0E52  1C7B               	btfss	1+(??_deselect+6)+0,0
  6242  0E53  1383               	bcf	status,7
  6243  0E54  0800               	movf	indf,w
  6244  0E55  00FC               	movwf	(??_deselect+8)+0
  6245  0E56  087C               	movf	(??_deselect+8)+0,w
  6246  0E57  1283               	bcf	status, 5	;RP0=0, select bank0
  6247  0E58  1303               	bcf	status, 6	;RP1=0, select bank0
  6248  0E59  00A3               	movwf	0+(deselect@myMenu)+03h
  6249                           	line	312
  6250                           ;main.c: 312: myMenu.pos.menuIndex=myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].up;
  6251  0E5A  0822               	movf	0+(deselect@myMenu)+02h,w
  6252  0E5B  00F4               	movwf	(??_deselect+0)+0
  6253  0E5C  0774               	addwf	(??_deselect+0)+0,w
  6254  0E5D  3E05               	addlw	05h
  6255  0E5E  3E20               	addlw	deselect@myMenu&0ffh
  6256  0E5F  0084               	movwf	fsr0
  6257  0E60  1383               	bcf	status, 7	;select IRP bank0
  6258  0E61  0800               	movf	indf,w
  6259  0E62  00F5               	movwf	(??_deselect+1)+0+0
  6260  0E63  0A84               	incf	fsr0,f
  6261  0E64  0800               	movf	indf,w
  6262  0E65  00F6               	movwf	(??_deselect+1)+0+1
  6263  0E66  3007               	movlw	(07h)
  6264  0E67  00F7               	movwf	(??_deselect+3)+0
  6265  0E68  0877               	movf	(??_deselect+3)+0,w
  6266  0E69  00F0               	movwf	(?___bmul)
  6267  0E6A  0823               	movf	0+(deselect@myMenu)+03h,w
  6268  0E6B  160A  118A  27B3   	fcall	___bmul
              120A  158A         
  6269  0E70  0775               	addwf	0+(??_deselect+1)+0,w
  6270  0E71  00F8               	movwf	(??_deselect+4)+0
  6271  0E72  0876               	movf	1+(??_deselect+1)+0,w
  6272  0E73  1803               	skipnc
  6273  0E74  3E01               	addlw	1
  6274  0E75  00F9               	movwf	1+((??_deselect+4)+0)
  6275  0E76  0878               	movf	0+(??_deselect+4)+0,w
  6276  0E77  3E02               	addlw	low(02h)
  6277  0E78  00FA               	movwf	(??_deselect+6)+0
  6278  0E79  0879               	movf	1+(??_deselect+4)+0,w
  6279  0E7A  1803               	skipnc
  6280  0E7B  3E01               	addlw	1
  6281  0E7C  3E00               	addlw	high(02h)
  6282  0E7D  00FB               	movwf	1+(??_deselect+6)+0
  6283  0E7E  087A               	movf	0+(??_deselect+6)+0,w
  6284  0E7F  0084               	movwf	fsr0
  6285  0E80  1783               	bsf	status,7
  6286  0E81  1C7B               	btfss	1+(??_deselect+6)+0,0
  6287  0E82  1383               	bcf	status,7
  6288  0E83  0800               	movf	indf,w
  6289  0E84  00FC               	movwf	(??_deselect+8)+0
  6290  0E85  087C               	movf	(??_deselect+8)+0,w
  6291  0E86  1283               	bcf	status, 5	;RP0=0, select bank0
  6292  0E87  1303               	bcf	status, 6	;RP1=0, select bank0
  6293  0E88  00A2               	movwf	0+(deselect@myMenu)+02h
  6294  0E89  2E8B               	goto	l5100
  6295                           	line	313
  6296                           	
  6297  0E8A                     l1222:	
  6298  0E8A  2E8B               	goto	l5100
  6299                           	line	314
  6300                           	
  6301  0E8B                     l1220:	
  6302                           	line	315
  6303                           	
  6304  0E8B                     l5100:	
  6305                           ;main.c: 313: }
  6306                           ;main.c: 314: }
  6307                           ;main.c: 315: return myMenu;
  6308  0E8B  2E8C               	goto	l1223
  6309                           	
  6310  0E8C                     l5102:	
  6311                           	line	316
  6312                           	
  6313  0E8C                     l1223:	
  6314  0E8C  0008               	return
  6315                           	opt stack 0
  6316                           GLOBAL	__end_of_deselect
  6317  0E8D                     	__end_of_deselect:
  6318 ;; =============== function _deselect ends ============
  6319                           
  6320                           	signat	_deselect,4223
  6321                           	global	_right
  6322                           psect	text1025,local,class=CODE,delta=2
  6323                           global __ptext1025
  6324  0CBC                     __ptext1025:
  6325                           
  6326 ;; *************** function _right *****************
  6327 ;; Defined at:
  6328 ;;		line 280 in file "main.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;  myMenu         13    0[BANK0 ] struct menu
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;		None
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  13    0[BANK0 ] struct menu
  6335 ;; Registers used:
  6336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6342 ;;      Params:         0      13       0       0       0
  6343 ;;      Locals:         0       0       0       0       0
  6344 ;;      Temps:         10       0       0       0       0
  6345 ;;      Totals:        10      13       0       0       0
  6346 ;;Total ram usage:       23 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:    1
  6349 ;; This function calls:
  6350 ;;		___bmul
  6351 ;; This function is called by:
  6352 ;;		_main
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           psect	text1025
  6356                           	file	"main.c"
  6357                           	line	280
  6358                           	global	__size_of_right
  6359  009A                     	__size_of_right	equ	__end_of_right-_right
  6360                           	
  6361  0CBC                     _right:	
  6362                           	opt	stack 6
  6363                           ; Regs used in _right: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6364                           	line	281
  6365                           	
  6366  0CBC                     l5078:	
  6367                           ;main.c: 281: if (myMenu.pos.set==1) {
  6368  0CBC  1283               	bcf	status, 5	;RP0=0, select bank0
  6369  0CBD  1303               	bcf	status, 6	;RP1=0, select bank0
  6370  0CBE  0824               	movf	0+(right@myMenu)+04h,w
  6371  0CBF  3A01               	xorlw	01h
  6372  0CC0  1D03               	skipz
  6373  0CC1  2CC3               	goto	u4231
  6374  0CC2  2CC4               	goto	u4230
  6375  0CC3                     u4231:
  6376  0CC3  2D31               	goto	l5084
  6377  0CC4                     u4230:
  6378                           	line	282
  6379                           	
  6380  0CC4                     l5080:	
  6381                           ;main.c: 282: if (myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].value<=255)
  6382  0CC4  0822               	movf	0+(right@myMenu)+02h,w
  6383  0CC5  00F4               	movwf	(??_right+0)+0
  6384  0CC6  0774               	addwf	(??_right+0)+0,w
  6385  0CC7  3E05               	addlw	05h
  6386  0CC8  3E20               	addlw	right@myMenu&0ffh
  6387  0CC9  0084               	movwf	fsr0
  6388  0CCA  1383               	bcf	status, 7	;select IRP bank0
  6389  0CCB  0800               	movf	indf,w
  6390  0CCC  00F5               	movwf	(??_right+1)+0+0
  6391  0CCD  0A84               	incf	fsr0,f
  6392  0CCE  0800               	movf	indf,w
  6393  0CCF  00F6               	movwf	(??_right+1)+0+1
  6394  0CD0  3007               	movlw	(07h)
  6395  0CD1  00F7               	movwf	(??_right+3)+0
  6396  0CD2  0877               	movf	(??_right+3)+0,w
  6397  0CD3  00F0               	movwf	(?___bmul)
  6398  0CD4  0823               	movf	0+(right@myMenu)+03h,w
  6399  0CD5  160A  118A  27B3   	fcall	___bmul
              120A  158A         
  6400  0CDA  0775               	addwf	0+(??_right+1)+0,w
  6401  0CDB  00F8               	movwf	(??_right+4)+0
  6402  0CDC  0876               	movf	1+(??_right+1)+0,w
  6403  0CDD  1803               	skipnc
  6404  0CDE  3E01               	addlw	1
  6405  0CDF  00F9               	movwf	1+((??_right+4)+0)
  6406  0CE0  0878               	movf	0+(??_right+4)+0,w
  6407  0CE1  3E05               	addlw	low(05h)
  6408  0CE2  00FA               	movwf	(??_right+6)+0
  6409  0CE3  0879               	movf	1+(??_right+4)+0,w
  6410  0CE4  1803               	skipnc
  6411  0CE5  3E01               	addlw	1
  6412  0CE6  3E00               	addlw	high(05h)
  6413  0CE7  00FB               	movwf	1+(??_right+6)+0
  6414  0CE8  087A               	movf	0+(??_right+6)+0,w
  6415  0CE9  0084               	movwf	fsr0
  6416  0CEA  1783               	bsf	status,7
  6417  0CEB  1C7B               	btfss	1+(??_right+6)+0,0
  6418  0CEC  1383               	bcf	status,7
  6419  0CED  0800               	movf	indf,w
  6420  0CEE  00FC               	movwf	(??_right+8)+0+0
  6421  0CEF  0A84               	incf	fsr0,f
  6422  0CF0  0800               	movf	indf,w
  6423  0CF1  00FD               	movwf	(??_right+8)+0+1
  6424  0CF2  087D               	movf	1+(??_right+8)+0,w
  6425  0CF3  3A80               	xorlw	80h
  6426  0CF4  00FF               	movwf	btemp+1
  6427  0CF5  3081               	movlw	(high(0100h))^80h
  6428  0CF6  027F               	subwf	btemp+1,w
  6429  0CF7  1D03               	skipz
  6430  0CF8  2CFB               	goto	u4245
  6431  0CF9  3000               	movlw	low(0100h)
  6432  0CFA  027C               	subwf	0+(??_right+8)+0,w
  6433  0CFB                     u4245:
  6434                           
  6435  0CFB  1803               	skipnc
  6436  0CFC  2CFE               	goto	u4241
  6437  0CFD  2CFF               	goto	u4240
  6438  0CFE                     u4241:
  6439  0CFE  2D54               	goto	l5088
  6440  0CFF                     u4240:
  6441                           	line	283
  6442                           	
  6443  0CFF                     l5082:	
  6444                           ;main.c: 283: myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].value++;
  6445  0CFF  1283               	bcf	status, 5	;RP0=0, select bank0
  6446  0D00  1303               	bcf	status, 6	;RP1=0, select bank0
  6447  0D01  0822               	movf	0+(right@myMenu)+02h,w
  6448  0D02  00F4               	movwf	(??_right+0)+0
  6449  0D03  0774               	addwf	(??_right+0)+0,w
  6450  0D04  3E05               	addlw	05h
  6451  0D05  3E20               	addlw	right@myMenu&0ffh
  6452  0D06  0084               	movwf	fsr0
  6453  0D07  1383               	bcf	status, 7	;select IRP bank0
  6454  0D08  0800               	movf	indf,w
  6455  0D09  00F5               	movwf	(??_right+1)+0+0
  6456  0D0A  0A84               	incf	fsr0,f
  6457  0D0B  0800               	movf	indf,w
  6458  0D0C  00F6               	movwf	(??_right+1)+0+1
  6459  0D0D  3007               	movlw	(07h)
  6460  0D0E  00F7               	movwf	(??_right+3)+0
  6461  0D0F  0877               	movf	(??_right+3)+0,w
  6462  0D10  00F0               	movwf	(?___bmul)
  6463  0D11  0823               	movf	0+(right@myMenu)+03h,w
  6464  0D12  160A  118A  27B3   	fcall	___bmul
              120A  158A         
  6465  0D17  0775               	addwf	0+(??_right+1)+0,w
  6466  0D18  00F8               	movwf	(??_right+4)+0
  6467  0D19  0876               	movf	1+(??_right+1)+0,w
  6468  0D1A  1803               	skipnc
  6469  0D1B  3E01               	addlw	1
  6470  0D1C  00F9               	movwf	1+((??_right+4)+0)
  6471  0D1D  0878               	movf	0+(??_right+4)+0,w
  6472  0D1E  3E05               	addlw	low(05h)
  6473  0D1F  00FA               	movwf	(??_right+6)+0
  6474  0D20  0879               	movf	1+(??_right+4)+0,w
  6475  0D21  1803               	skipnc
  6476  0D22  3E01               	addlw	1
  6477  0D23  3E00               	addlw	high(05h)
  6478  0D24  00FB               	movwf	1+(??_right+6)+0
  6479  0D25  087A               	movf	0+(??_right+6)+0,w
  6480  0D26  0084               	movwf	fsr0
  6481  0D27  1783               	bsf	status,7
  6482  0D28  1C7B               	btfss	1+(??_right+6)+0,0
  6483  0D29  1383               	bcf	status,7
  6484  0D2A  3001               	movlw	01h
  6485  0D2B  0780               	addwf	indf,f
  6486  0D2C  0A84               	incf	fsr0,f
  6487  0D2D  1803               	skipnc
  6488  0D2E  0A80               	incf	indf,f
  6489  0D2F  2D54               	goto	l5088
  6490                           	
  6491  0D30                     l1199:	
  6492                           	line	284
  6493                           ;main.c: 284: }
  6494  0D30  2D54               	goto	l5088
  6495                           	line	285
  6496                           	
  6497  0D31                     l1198:	
  6498                           	line	286
  6499                           	
  6500  0D31                     l5084:	
  6501                           ;main.c: 285: else {
  6502                           ;main.c: 286: if (myMenu.pos.index<menuLengths[myMenu.pos.menuIndex]-1)
  6503  0D31  1283               	bcf	status, 5	;RP0=0, select bank0
  6504  0D32  1303               	bcf	status, 6	;RP1=0, select bank0
  6505  0D33  0822               	movf	0+(right@myMenu)+02h,w
  6506  0D34  3E2B               	addlw	low((_menuLengths-__stringbase))
  6507  0D35  0084               	movwf	fsr0
  6508  0D36  120A  158A  2000   	fcall	stringdir
              120A  158A         
  6509  0D3B  3EFF               	addlw	low(-1)
  6510  0D3C  00F4               	movwf	(??_right+0)+0
  6511  0D3D  30FF               	movlw	high(-1)
  6512  0D3E  1803               	skipnc
  6513  0D3F  3000               	movlw	(high(-1)+1)&0ffh
  6514  0D40  00F5               	movwf	((??_right+0)+0)+1
  6515  0D41  0875               	movf	1+(??_right+0)+0,w
  6516  0D42  3A80               	xorlw	80h
  6517  0D43  3C80               	sublw	080h
  6518  0D44  1D03               	skipz
  6519  0D45  2D48               	goto	u4255
  6520  0D46  0874               	movf	0+(??_right+0)+0,w
  6521  0D47  0223               	subwf	0+(right@myMenu)+03h,w
  6522  0D48                     u4255:
  6523                           
  6524  0D48  1803               	skipnc
  6525  0D49  2D4B               	goto	u4251
  6526  0D4A  2D4C               	goto	u4250
  6527  0D4B                     u4251:
  6528  0D4B  2D54               	goto	l5088
  6529  0D4C                     u4250:
  6530                           	line	287
  6531                           	
  6532  0D4C                     l5086:	
  6533                           ;main.c: 287: myMenu.pos.index++;
  6534  0D4C  3001               	movlw	(01h)
  6535  0D4D  00F4               	movwf	(??_right+0)+0
  6536  0D4E  0874               	movf	(??_right+0)+0,w
  6537  0D4F  1283               	bcf	status, 5	;RP0=0, select bank0
  6538  0D50  1303               	bcf	status, 6	;RP1=0, select bank0
  6539  0D51  07A3               	addwf	0+(right@myMenu)+03h,f
  6540  0D52  2D54               	goto	l5088
  6541                           	
  6542  0D53                     l1201:	
  6543  0D53  2D54               	goto	l5088
  6544                           	line	288
  6545                           	
  6546  0D54                     l1200:	
  6547                           	line	289
  6548                           	
  6549  0D54                     l5088:	
  6550                           ;main.c: 288: }
  6551                           ;main.c: 289: return myMenu;
  6552  0D54  2D55               	goto	l1202
  6553                           	
  6554  0D55                     l5090:	
  6555                           	line	290
  6556                           	
  6557  0D55                     l1202:	
  6558  0D55  0008               	return
  6559                           	opt stack 0
  6560                           GLOBAL	__end_of_right
  6561  0D56                     	__end_of_right:
  6562 ;; =============== function _right ends ============
  6563                           
  6564                           	signat	_right,4223
  6565                           	global	_left
  6566                           psect	text1026,local,class=CODE,delta=2
  6567                           global __ptext1026
  6568  0C35                     __ptext1026:
  6569                           
  6570 ;; *************** function _left *****************
  6571 ;; Defined at:
  6572 ;;		line 269 in file "main.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  myMenu         13    0[BANK0 ] struct menu
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;		None
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  13    0[BANK0 ] struct menu
  6579 ;; Registers used:
  6580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6586 ;;      Params:         0      13       0       0       0
  6587 ;;      Locals:         0       0       0       0       0
  6588 ;;      Temps:         10       0       0       0       0
  6589 ;;      Totals:        10      13       0       0       0
  6590 ;;Total ram usage:       23 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:    1
  6593 ;; This function calls:
  6594 ;;		___bmul
  6595 ;; This function is called by:
  6596 ;;		_main
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           psect	text1026
  6600                           	file	"main.c"
  6601                           	line	269
  6602                           	global	__size_of_left
  6603  0087                     	__size_of_left	equ	__end_of_left-_left
  6604                           	
  6605  0C35                     _left:	
  6606                           	opt	stack 6
  6607                           ; Regs used in _left: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6608                           	line	270
  6609                           	
  6610  0C35                     l5064:	
  6611                           ;main.c: 270: if (myMenu.pos.set==1) {
  6612  0C35  1283               	bcf	status, 5	;RP0=0, select bank0
  6613  0C36  1303               	bcf	status, 6	;RP1=0, select bank0
  6614  0C37  0824               	movf	0+(left@myMenu)+04h,w
  6615  0C38  3A01               	xorlw	01h
  6616  0C39  1D03               	skipz
  6617  0C3A  2C3C               	goto	u4201
  6618  0C3B  2C3D               	goto	u4200
  6619  0C3C                     u4201:
  6620  0C3C  2CB0               	goto	l5070
  6621  0C3D                     u4200:
  6622                           	line	271
  6623                           	
  6624  0C3D                     l5066:	
  6625                           ;main.c: 271: if (myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].value>0)
  6626  0C3D  0822               	movf	0+(left@myMenu)+02h,w
  6627  0C3E  00F4               	movwf	(??_left+0)+0
  6628  0C3F  0774               	addwf	(??_left+0)+0,w
  6629  0C40  3E05               	addlw	05h
  6630  0C41  3E20               	addlw	left@myMenu&0ffh
  6631  0C42  0084               	movwf	fsr0
  6632  0C43  1383               	bcf	status, 7	;select IRP bank0
  6633  0C44  0800               	movf	indf,w
  6634  0C45  00F5               	movwf	(??_left+1)+0+0
  6635  0C46  0A84               	incf	fsr0,f
  6636  0C47  0800               	movf	indf,w
  6637  0C48  00F6               	movwf	(??_left+1)+0+1
  6638  0C49  3007               	movlw	(07h)
  6639  0C4A  00F7               	movwf	(??_left+3)+0
  6640  0C4B  0877               	movf	(??_left+3)+0,w
  6641  0C4C  00F0               	movwf	(?___bmul)
  6642  0C4D  0823               	movf	0+(left@myMenu)+03h,w
  6643  0C4E  160A  118A  27B3   	fcall	___bmul
              120A  158A         
  6644  0C53  0775               	addwf	0+(??_left+1)+0,w
  6645  0C54  00F8               	movwf	(??_left+4)+0
  6646  0C55  0876               	movf	1+(??_left+1)+0,w
  6647  0C56  1803               	skipnc
  6648  0C57  3E01               	addlw	1
  6649  0C58  00F9               	movwf	1+((??_left+4)+0)
  6650  0C59  0878               	movf	0+(??_left+4)+0,w
  6651  0C5A  3E05               	addlw	low(05h)
  6652  0C5B  00FA               	movwf	(??_left+6)+0
  6653  0C5C  0879               	movf	1+(??_left+4)+0,w
  6654  0C5D  1803               	skipnc
  6655  0C5E  3E01               	addlw	1
  6656  0C5F  3E00               	addlw	high(05h)
  6657  0C60  00FB               	movwf	1+(??_left+6)+0
  6658  0C61  087A               	movf	0+(??_left+6)+0,w
  6659  0C62  0084               	movwf	fsr0
  6660  0C63  1783               	bsf	status,7
  6661  0C64  1C7B               	btfss	1+(??_left+6)+0,0
  6662  0C65  1383               	bcf	status,7
  6663  0C66  0800               	movf	indf,w
  6664  0C67  00FC               	movwf	(??_left+8)+0+0
  6665  0C68  0A84               	incf	fsr0,f
  6666  0C69  0800               	movf	indf,w
  6667  0C6A  00FD               	movwf	(??_left+8)+0+1
  6668  0C6B  087D               	movf	1+(??_left+8)+0,w
  6669  0C6C  3A80               	xorlw	80h
  6670  0C6D  00FF               	movwf	btemp+1
  6671  0C6E  3080               	movlw	(high(01h))^80h
  6672  0C6F  027F               	subwf	btemp+1,w
  6673  0C70  1D03               	skipz
  6674  0C71  2C74               	goto	u4215
  6675  0C72  3001               	movlw	low(01h)
  6676  0C73  027C               	subwf	0+(??_left+8)+0,w
  6677  0C74                     u4215:
  6678                           
  6679  0C74  1C03               	skipc
  6680  0C75  2C77               	goto	u4211
  6681  0C76  2C78               	goto	u4210
  6682  0C77                     u4211:
  6683  0C77  2CBA               	goto	l5074
  6684  0C78                     u4210:
  6685                           	line	272
  6686                           	
  6687  0C78                     l5068:	
  6688                           ;main.c: 272: myMenu.m[myMenu.pos.menuIndex][myMenu.pos.index].value--;
  6689  0C78  1283               	bcf	status, 5	;RP0=0, select bank0
  6690  0C79  1303               	bcf	status, 6	;RP1=0, select bank0
  6691  0C7A  0822               	movf	0+(left@myMenu)+02h,w
  6692  0C7B  00F4               	movwf	(??_left+0)+0
  6693  0C7C  0774               	addwf	(??_left+0)+0,w
  6694  0C7D  3E05               	addlw	05h
  6695  0C7E  3E20               	addlw	left@myMenu&0ffh
  6696  0C7F  0084               	movwf	fsr0
  6697  0C80  1383               	bcf	status, 7	;select IRP bank0
  6698  0C81  0800               	movf	indf,w
  6699  0C82  00F5               	movwf	(??_left+1)+0+0
  6700  0C83  0A84               	incf	fsr0,f
  6701  0C84  0800               	movf	indf,w
  6702  0C85  00F6               	movwf	(??_left+1)+0+1
  6703  0C86  3007               	movlw	(07h)
  6704  0C87  00F7               	movwf	(??_left+3)+0
  6705  0C88  0877               	movf	(??_left+3)+0,w
  6706  0C89  00F0               	movwf	(?___bmul)
  6707  0C8A  0823               	movf	0+(left@myMenu)+03h,w
  6708  0C8B  160A  118A  27B3   	fcall	___bmul
              120A  158A         
  6709  0C90  0775               	addwf	0+(??_left+1)+0,w
  6710  0C91  00F8               	movwf	(??_left+4)+0
  6711  0C92  0876               	movf	1+(??_left+1)+0,w
  6712  0C93  1803               	skipnc
  6713  0C94  3E01               	addlw	1
  6714  0C95  00F9               	movwf	1+((??_left+4)+0)
  6715  0C96  0878               	movf	0+(??_left+4)+0,w
  6716  0C97  3E05               	addlw	low(05h)
  6717  0C98  00FA               	movwf	(??_left+6)+0
  6718  0C99  0879               	movf	1+(??_left+4)+0,w
  6719  0C9A  1803               	skipnc
  6720  0C9B  3E01               	addlw	1
  6721  0C9C  3E00               	addlw	high(05h)
  6722  0C9D  00FB               	movwf	1+(??_left+6)+0
  6723  0C9E  087A               	movf	0+(??_left+6)+0,w
  6724  0C9F  0084               	movwf	fsr0
  6725  0CA0  1783               	bsf	status,7
  6726  0CA1  1C7B               	btfss	1+(??_left+6)+0,0
  6727  0CA2  1383               	bcf	status,7
  6728  0CA3  30FF               	movlw	low(-1)
  6729  0CA4  0780               	addwf	indf,f
  6730  0CA5  0F84               	incfsz	fsr0,f
  6731  0CA6  0800               	movf	indf,w
  6732  0CA7  1803               	skipnc
  6733  0CA8  0A00               	incf	indf,w
  6734  0CA9  00FF               	movwf	btemp+1
  6735  0CAA  30FF               	movlw	high(-1)
  6736  0CAB  077F               	addwf	btemp+1,w
  6737  0CAC  0080               	movwf	indf
  6738  0CAD  0384               	decf	fsr0,f
  6739  0CAE  2CBA               	goto	l5074
  6740                           	
  6741  0CAF                     l1192:	
  6742                           	line	273
  6743                           ;main.c: 273: }
  6744  0CAF  2CBA               	goto	l5074
  6745                           	line	274
  6746                           	
  6747  0CB0                     l1191:	
  6748                           	line	275
  6749                           	
  6750  0CB0                     l5070:	
  6751                           ;main.c: 274: else
  6752                           ;main.c: 275: if (myMenu.pos.index>0)
  6753  0CB0  1283               	bcf	status, 5	;RP0=0, select bank0
  6754  0CB1  1303               	bcf	status, 6	;RP1=0, select bank0
  6755  0CB2  0823               	movf	0+(left@myMenu)+03h,w
  6756  0CB3  1D03               	skipz
  6757  0CB4  2CB6               	goto	u4220
  6758  0CB5  2CBA               	goto	l5074
  6759  0CB6                     u4220:
  6760                           	line	276
  6761                           	
  6762  0CB6                     l5072:	
  6763                           ;main.c: 276: myMenu.pos.index--;
  6764  0CB6  3001               	movlw	low(01h)
  6765  0CB7  02A3               	subwf	0+(left@myMenu)+03h,f
  6766  0CB8  2CBA               	goto	l5074
  6767                           	
  6768  0CB9                     l1194:	
  6769  0CB9  2CBA               	goto	l5074
  6770                           	line	277
  6771                           	
  6772  0CBA                     l1193:	
  6773                           	
  6774  0CBA                     l5074:	
  6775                           ;main.c: 277: return myMenu;
  6776  0CBA  2CBB               	goto	l1195
  6777                           	
  6778  0CBB                     l5076:	
  6779                           	line	278
  6780                           	
  6781  0CBB                     l1195:	
  6782  0CBB  0008               	return
  6783                           	opt stack 0
  6784                           GLOBAL	__end_of_left
  6785  0CBC                     	__end_of_left:
  6786 ;; =============== function _left ends ============
  6787                           
  6788                           	signat	_left,4223
  6789                           	global	_DelayS
  6790                           psect	text1027,local,class=CODE,delta=2
  6791                           global __ptext1027
  6792  08CE                     __ptext1027:
  6793                           
  6794 ;; *************** function _DelayS *****************
  6795 ;; Defined at:
  6796 ;;		line 75 in file "/Users/francescomeli/Dropbox/Tesi/pocketDolly.X/delay/delay.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  cnt             1    wreg     unsigned char 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;  cnt             1    4[COMMON] unsigned char 
  6801 ;;  i               1    5[COMMON] unsigned char 
  6802 ;; Return value:  Size  Location     Type
  6803 ;;		None               void
  6804 ;; Registers used:
  6805 ;;		wreg, status,2, status,0, pclath, cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6811 ;;      Params:         0       0       0       0       0
  6812 ;;      Locals:         2       0       0       0       0
  6813 ;;      Temps:          1       0       0       0       0
  6814 ;;      Totals:         3       0       0       0       0
  6815 ;;Total ram usage:        3 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; Hardware stack levels required when called:    1
  6818 ;; This function calls:
  6819 ;;		_DelayMs
  6820 ;; This function is called by:
  6821 ;;		_start
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           psect	text1027
  6825                           	file	"/Users/francescomeli/Dropbox/Tesi/pocketDolly.X/delay/delay.c"
  6826                           	line	75
  6827                           	global	__size_of_DelayS
  6828  001C                     	__size_of_DelayS	equ	__end_of_DelayS-_DelayS
  6829                           	
  6830  08CE                     _DelayS:	
  6831                           	opt	stack 5
  6832                           ; Regs used in _DelayS: [wreg+status,2+status,0+pclath+cstack]
  6833                           ;DelayS@cnt stored from wreg
  6834  08CE  00F4               	movwf	(DelayS@cnt)
  6835                           	line	77
  6836                           ;delay.c: 76: unsigned char i;
  6837                           ;delay.c: 77: do {
  6838                           	
  6839  08CF                     l1100:	
  6840                           	line	78
  6841                           	
  6842  08CF                     l5054:	
  6843                           ;delay.c: 78: i = 4;
  6844  08CF  3004               	movlw	(04h)
  6845  08D0  00F3               	movwf	(??_DelayS+0)+0
  6846  08D1  0873               	movf	(??_DelayS+0)+0,w
  6847  08D2  00F5               	movwf	(DelayS@i)
  6848  08D3  28D4               	goto	l5056
  6849                           	line	79
  6850                           ;delay.c: 79: do {
  6851                           	
  6852  08D4                     l1101:	
  6853                           	line	80
  6854                           	
  6855  08D4                     l5056:	
  6856                           ;delay.c: 80: DelayMs(250);
  6857  08D4  30FA               	movlw	(0FAh)
  6858  08D5  120A  158A  20EA   	fcall	_DelayMs
              120A  158A         
  6859                           	line	81
  6860                           	
  6861  08DA                     l5058:	
  6862                           # 81 "/Users/francescomeli/Dropbox/Tesi/pocketDolly.X/delay/delay.c"
  6863  08DA  0064               clrwdt ;#
  6864                           psect	text1027
  6865                           	line	82
  6866                           	
  6867  08DB                     l5060:	
  6868                           ;delay.c: 82: } while(--i);
  6869  08DB  3001               	movlw	low(01h)
  6870  08DC  02F5               	subwf	(DelayS@i),f
  6871  08DD  1D03               	btfss	status,2
  6872  08DE  28E0               	goto	u4181
  6873  08DF  28E1               	goto	u4180
  6874  08E0                     u4181:
  6875  08E0  28D4               	goto	l5056
  6876  08E1                     u4180:
  6877  08E1  28E2               	goto	l5062
  6878                           	
  6879  08E2                     l1102:	
  6880                           	line	83
  6881                           	
  6882  08E2                     l5062:	
  6883                           ;delay.c: 83: } while(--cnt);
  6884  08E2  3001               	movlw	low(01h)
  6885  08E3  02F4               	subwf	(DelayS@cnt),f
  6886  08E4  1D03               	btfss	status,2
  6887  08E5  28E7               	goto	u4191
  6888  08E6  28E8               	goto	u4190
  6889  08E7                     u4191:
  6890  08E7  28CF               	goto	l1100
  6891  08E8                     u4190:
  6892  08E8  28E9               	goto	l1104
  6893                           	
  6894  08E9                     l1103:	
  6895                           	line	84
  6896                           	
  6897  08E9                     l1104:	
  6898  08E9  0008               	return
  6899                           	opt stack 0
  6900                           GLOBAL	__end_of_DelayS
  6901  08EA                     	__end_of_DelayS:
  6902 ;; =============== function _DelayS ends ============
  6903                           
  6904                           	signat	_DelayS,4216
  6905                           	global	___fttol
  6906                           psect	text1028,local,class=CODE,delta=2
  6907                           global __ptext1028
  6908  0E8D                     __ptext1028:
  6909                           
  6910 ;; *************** function ___fttol *****************
  6911 ;; Defined at:
  6912 ;;		line 45 in file "/Applications/HI-TECH/picc/9.83/sources/fttol.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;  f1              3    8[COMMON] float 
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;  lval            4    5[BANK0 ] unsigned long 
  6917 ;;  exp1            1    9[BANK0 ] unsigned char 
  6918 ;;  sign1           1    4[BANK0 ] unsigned char 
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  4    8[COMMON] long 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2, status,0
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6928 ;;      Params:         4       0       0       0       0
  6929 ;;      Locals:         0       6       0       0       0
  6930 ;;      Temps:          0       4       0       0       0
  6931 ;;      Totals:         4      10       0       0       0
  6932 ;;Total ram usage:       14 bytes
  6933 ;; Hardware stack levels used:    1
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		_spin
  6938 ;;		_printData
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           psect	text1028
  6942                           	file	"/Applications/HI-TECH/picc/9.83/sources/fttol.c"
  6943                           	line	45
  6944                           	global	__size_of___fttol
  6945  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  6946                           	
  6947  0E8D                     ___fttol:	
  6948                           	opt	stack 5
  6949                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6950                           	line	49
  6951                           	
  6952  0E8D                     l4908:	
  6953  0E8D  0878               	movf	(___fttol@f1),w
  6954  0E8E  1283               	bcf	status, 5	;RP0=0, select bank0
  6955  0E8F  1303               	bcf	status, 6	;RP1=0, select bank0
  6956  0E90  00A0               	movwf	((??___fttol+0)+0)
  6957  0E91  0879               	movf	(___fttol@f1+1),w
  6958  0E92  00A1               	movwf	((??___fttol+0)+0+1)
  6959  0E93  087A               	movf	(___fttol@f1+2),w
  6960  0E94  00A2               	movwf	((??___fttol+0)+0+2)
  6961  0E95  1003               	clrc
  6962  0E96  0D21               	rlf	(??___fttol+0)+1,w
  6963  0E97  0D22               	rlf	(??___fttol+0)+2,w
  6964  0E98  00A3               	movwf	(??___fttol+3)+0
  6965  0E99  0823               	movf	(??___fttol+3)+0,w
  6966  0E9A  00A9               	movwf	(___fttol@exp1)
  6967  0E9B  08A9               	movf	((___fttol@exp1)),f
  6968  0E9C  1D03               	skipz
  6969  0E9D  2E9F               	goto	u3901
  6970  0E9E  2EA0               	goto	u3900
  6971  0E9F                     u3901:
  6972  0E9F  2EAA               	goto	l4914
  6973  0EA0                     u3900:
  6974                           	line	50
  6975                           	
  6976  0EA0                     l4910:	
  6977  0EA0  3000               	movlw	0
  6978  0EA1  00FB               	movwf	(?___fttol+3)
  6979  0EA2  3000               	movlw	0
  6980  0EA3  00FA               	movwf	(?___fttol+2)
  6981  0EA4  3000               	movlw	0
  6982  0EA5  00F9               	movwf	(?___fttol+1)
  6983  0EA6  3000               	movlw	0
  6984  0EA7  00F8               	movwf	(?___fttol)
  6985                           
  6986  0EA8  2F32               	goto	l2422
  6987                           	
  6988  0EA9                     l4912:	
  6989  0EA9  2F32               	goto	l2422
  6990                           	
  6991  0EAA                     l2421:	
  6992                           	line	51
  6993                           	
  6994  0EAA                     l4914:	
  6995  0EAA  0878               	movf	(___fttol@f1),w
  6996  0EAB  00A0               	movwf	((??___fttol+0)+0)
  6997  0EAC  0879               	movf	(___fttol@f1+1),w
  6998  0EAD  00A1               	movwf	((??___fttol+0)+0+1)
  6999  0EAE  087A               	movf	(___fttol@f1+2),w
  7000  0EAF  00A2               	movwf	((??___fttol+0)+0+2)
  7001  0EB0  3017               	movlw	017h
  7002  0EB1                     u3915:
  7003  0EB1  1003               	clrc
  7004  0EB2  0CA2               	rrf	(??___fttol+0)+2,f
  7005  0EB3  0CA1               	rrf	(??___fttol+0)+1,f
  7006  0EB4  0CA0               	rrf	(??___fttol+0)+0,f
  7007  0EB5                     u3910:
  7008  0EB5  3EFF               	addlw	-1
  7009  0EB6  1D03               	skipz
  7010  0EB7  2EB1               	goto	u3915
  7011  0EB8  0820               	movf	0+(??___fttol+0)+0,w
  7012  0EB9  00A3               	movwf	(??___fttol+3)+0
  7013  0EBA  0823               	movf	(??___fttol+3)+0,w
  7014  0EBB  00A4               	movwf	(___fttol@sign1)
  7015                           	line	52
  7016                           	
  7017  0EBC                     l4916:	
  7018  0EBC  17F9               	bsf	(___fttol@f1)+(15/8),(15)&7
  7019                           	line	53
  7020                           	
  7021  0EBD                     l4918:	
  7022  0EBD  30FF               	movlw	0FFh
  7023  0EBE  05F8               	andwf	(___fttol@f1),f
  7024  0EBF  30FF               	movlw	0FFh
  7025  0EC0  05F9               	andwf	(___fttol@f1+1),f
  7026  0EC1  3000               	movlw	0
  7027  0EC2  05FA               	andwf	(___fttol@f1+2),f
  7028                           	line	54
  7029                           	
  7030  0EC3                     l4920:	
  7031  0EC3  0878               	movf	(___fttol@f1),w
  7032  0EC4  00A5               	movwf	(___fttol@lval)
  7033  0EC5  0879               	movf	(___fttol@f1+1),w
  7034  0EC6  00A6               	movwf	((___fttol@lval))+1
  7035  0EC7  087A               	movf	(___fttol@f1+2),w
  7036  0EC8  00A7               	movwf	((___fttol@lval))+2
  7037  0EC9  01A8               	clrf	((___fttol@lval))+3
  7038                           	line	55
  7039                           	
  7040  0ECA                     l4922:	
  7041  0ECA  308E               	movlw	low(08Eh)
  7042  0ECB  02A9               	subwf	(___fttol@exp1),f
  7043                           	line	56
  7044                           	
  7045  0ECC                     l4924:	
  7046  0ECC  1FA9               	btfss	(___fttol@exp1),7
  7047  0ECD  2ECF               	goto	u3921
  7048  0ECE  2ED0               	goto	u3920
  7049  0ECF                     u3921:
  7050  0ECF  2EF5               	goto	l4934
  7051  0ED0                     u3920:
  7052                           	line	57
  7053                           	
  7054  0ED0                     l4926:	
  7055  0ED0  0829               	movf	(___fttol@exp1),w
  7056  0ED1  3A80               	xorlw	80h
  7057  0ED2  3E8F               	addlw	-((-15)^80h)
  7058  0ED3  1803               	skipnc
  7059  0ED4  2ED6               	goto	u3931
  7060  0ED5  2ED7               	goto	u3930
  7061  0ED6                     u3931:
  7062  0ED6  2EE2               	goto	l4932
  7063  0ED7                     u3930:
  7064                           	line	58
  7065                           	
  7066  0ED7                     l4928:	
  7067  0ED7  3000               	movlw	0
  7068  0ED8  00FB               	movwf	(?___fttol+3)
  7069  0ED9  3000               	movlw	0
  7070  0EDA  00FA               	movwf	(?___fttol+2)
  7071  0EDB  3000               	movlw	0
  7072  0EDC  00F9               	movwf	(?___fttol+1)
  7073  0EDD  3000               	movlw	0
  7074  0EDE  00F8               	movwf	(?___fttol)
  7075                           
  7076  0EDF  2F32               	goto	l2422
  7077                           	
  7078  0EE0                     l4930:	
  7079  0EE0  2F32               	goto	l2422
  7080                           	
  7081  0EE1                     l2424:	
  7082  0EE1  2EE2               	goto	l4932
  7083                           	line	59
  7084                           	
  7085  0EE2                     l2425:	
  7086                           	line	60
  7087                           	
  7088  0EE2                     l4932:	
  7089  0EE2  3001               	movlw	01h
  7090  0EE3                     u3945:
  7091  0EE3  1003               	clrc
  7092  0EE4  0CA8               	rrf	(___fttol@lval+3),f
  7093  0EE5  0CA7               	rrf	(___fttol@lval+2),f
  7094  0EE6  0CA6               	rrf	(___fttol@lval+1),f
  7095  0EE7  0CA5               	rrf	(___fttol@lval),f
  7096  0EE8  3EFF               	addlw	-1
  7097  0EE9  1D03               	skipz
  7098  0EEA  2EE3               	goto	u3945
  7099                           
  7100                           	line	61
  7101  0EEB  3001               	movlw	(01h)
  7102  0EEC  00A0               	movwf	(??___fttol+0)+0
  7103  0EED  0820               	movf	(??___fttol+0)+0,w
  7104  0EEE  07A9               	addwf	(___fttol@exp1),f
  7105  0EEF  1D03               	btfss	status,2
  7106  0EF0  2EF2               	goto	u3951
  7107  0EF1  2EF3               	goto	u3950
  7108  0EF2                     u3951:
  7109  0EF2  2EE2               	goto	l4932
  7110  0EF3                     u3950:
  7111  0EF3  2F19               	goto	l4944
  7112                           	
  7113  0EF4                     l2426:	
  7114                           	line	62
  7115  0EF4  2F19               	goto	l4944
  7116                           	
  7117  0EF5                     l2423:	
  7118                           	line	63
  7119                           	
  7120  0EF5                     l4934:	
  7121  0EF5  3018               	movlw	(018h)
  7122  0EF6  0229               	subwf	(___fttol@exp1),w
  7123  0EF7  1C03               	skipc
  7124  0EF8  2EFA               	goto	u3961
  7125  0EF9  2EFB               	goto	u3960
  7126  0EFA                     u3961:
  7127  0EFA  2F12               	goto	l4942
  7128  0EFB                     u3960:
  7129                           	line	64
  7130                           	
  7131  0EFB                     l4936:	
  7132  0EFB  3000               	movlw	0
  7133  0EFC  00FB               	movwf	(?___fttol+3)
  7134  0EFD  3000               	movlw	0
  7135  0EFE  00FA               	movwf	(?___fttol+2)
  7136  0EFF  3000               	movlw	0
  7137  0F00  00F9               	movwf	(?___fttol+1)
  7138  0F01  3000               	movlw	0
  7139  0F02  00F8               	movwf	(?___fttol)
  7140                           
  7141  0F03  2F32               	goto	l2422
  7142                           	
  7143  0F04                     l4938:	
  7144  0F04  2F32               	goto	l2422
  7145                           	
  7146  0F05                     l2428:	
  7147                           	line	65
  7148  0F05  2F12               	goto	l4942
  7149                           	
  7150  0F06                     l2430:	
  7151                           	line	66
  7152                           	
  7153  0F06                     l4940:	
  7154  0F06  3001               	movlw	01h
  7155  0F07  00A0               	movwf	(??___fttol+0)+0
  7156  0F08                     u3975:
  7157  0F08  1003               	clrc
  7158  0F09  0DA5               	rlf	(___fttol@lval),f
  7159  0F0A  0DA6               	rlf	(___fttol@lval+1),f
  7160  0F0B  0DA7               	rlf	(___fttol@lval+2),f
  7161  0F0C  0DA8               	rlf	(___fttol@lval+3),f
  7162  0F0D  0BA0               	decfsz	(??___fttol+0)+0
  7163  0F0E  2F08               	goto	u3975
  7164                           	line	67
  7165  0F0F  3001               	movlw	low(01h)
  7166  0F10  02A9               	subwf	(___fttol@exp1),f
  7167  0F11  2F12               	goto	l4942
  7168                           	line	68
  7169                           	
  7170  0F12                     l2429:	
  7171                           	line	65
  7172                           	
  7173  0F12                     l4942:	
  7174  0F12  08A9               	movf	(___fttol@exp1),f
  7175  0F13  1D03               	skipz
  7176  0F14  2F16               	goto	u3981
  7177  0F15  2F17               	goto	u3980
  7178  0F16                     u3981:
  7179  0F16  2F06               	goto	l4940
  7180  0F17                     u3980:
  7181  0F17  2F19               	goto	l4944
  7182                           	
  7183  0F18                     l2431:	
  7184  0F18  2F19               	goto	l4944
  7185                           	line	69
  7186                           	
  7187  0F19                     l2427:	
  7188                           	line	70
  7189                           	
  7190  0F19                     l4944:	
  7191  0F19  0824               	movf	(___fttol@sign1),w
  7192  0F1A  1D03               	skipz
  7193  0F1B  2F1D               	goto	u3990
  7194  0F1C  2F29               	goto	l4948
  7195  0F1D                     u3990:
  7196                           	line	71
  7197                           	
  7198  0F1D                     l4946:	
  7199  0F1D  09A5               	comf	(___fttol@lval),f
  7200  0F1E  09A6               	comf	(___fttol@lval+1),f
  7201  0F1F  09A7               	comf	(___fttol@lval+2),f
  7202  0F20  09A8               	comf	(___fttol@lval+3),f
  7203  0F21  0AA5               	incf	(___fttol@lval),f
  7204  0F22  1903               	skipnz
  7205  0F23  0AA6               	incf	(___fttol@lval+1),f
  7206  0F24  1903               	skipnz
  7207  0F25  0AA7               	incf	(___fttol@lval+2),f
  7208  0F26  1903               	skipnz
  7209  0F27  0AA8               	incf	(___fttol@lval+3),f
  7210  0F28  2F29               	goto	l4948
  7211                           	
  7212  0F29                     l2432:	
  7213                           	line	72
  7214                           	
  7215  0F29                     l4948:	
  7216  0F29  0828               	movf	(___fttol@lval+3),w
  7217  0F2A  00FB               	movwf	(?___fttol+3)
  7218  0F2B  0827               	movf	(___fttol@lval+2),w
  7219  0F2C  00FA               	movwf	(?___fttol+2)
  7220  0F2D  0826               	movf	(___fttol@lval+1),w
  7221  0F2E  00F9               	movwf	(?___fttol+1)
  7222  0F2F  0825               	movf	(___fttol@lval),w
  7223  0F30  00F8               	movwf	(?___fttol)
  7224                           
  7225  0F31  2F32               	goto	l2422
  7226                           	
  7227  0F32                     l4950:	
  7228                           	line	73
  7229                           	
  7230  0F32                     l2422:	
  7231  0F32  0008               	return
  7232                           	opt stack 0
  7233                           GLOBAL	__end_of___fttol
  7234  0F33                     	__end_of___fttol:
  7235 ;; =============== function ___fttol ends ============
  7236                           
  7237                           	signat	___fttol,4220
  7238                           	global	___ftpack
  7239                           psect	text1029,local,class=CODE,delta=2
  7240                           global __ptext1029
  7241  0BBA                     __ptext1029:
  7242                           
  7243 ;; *************** function ___ftpack *****************
  7244 ;; Defined at:
  7245 ;;		line 63 in file "/Applications/HI-TECH/picc/9.83/sources/float.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;  arg             3    0[COMMON] unsigned um
  7248 ;;  exp             1    3[COMMON] unsigned char 
  7249 ;;  sign            1    4[COMMON] unsigned char 
  7250 ;; Auto vars:     Size  Location     Type
  7251 ;;		None
  7252 ;; Return value:  Size  Location     Type
  7253 ;;                  3    0[COMMON] float 
  7254 ;; Registers used:
  7255 ;;		wreg, status,2, status,0
  7256 ;; Tracked objects:
  7257 ;;		On entry : 0/0
  7258 ;;		On exit  : 0/0
  7259 ;;		Unchanged: 0/0
  7260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7261 ;;      Params:         5       0       0       0       0
  7262 ;;      Locals:         0       0       0       0       0
  7263 ;;      Temps:          3       0       0       0       0
  7264 ;;      Totals:         8       0       0       0       0
  7265 ;;Total ram usage:        8 bytes
  7266 ;; Hardware stack levels used:    1
  7267 ;; This function calls:
  7268 ;;		Nothing
  7269 ;; This function is called by:
  7270 ;;		___ftmul
  7271 ;;		___lwtoft
  7272 ;;		___ftadd
  7273 ;;		___ftdiv
  7274 ;;		___lbtoft
  7275 ;;		___abtoft
  7276 ;;		___awtoft
  7277 ;;		___altoft
  7278 ;;		___lltoft
  7279 ;;		___attoft
  7280 ;;		___lttoft
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           psect	text1029
  7284                           	file	"/Applications/HI-TECH/picc/9.83/sources/float.c"
  7285                           	line	63
  7286                           	global	__size_of___ftpack
  7287  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  7288                           	
  7289  0BBA                     ___ftpack:	
  7290                           	opt	stack 4
  7291                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7292                           	line	64
  7293                           	
  7294  0BBA                     l4834:	
  7295  0BBA  0873               	movf	(___ftpack@exp),w
  7296  0BBB  1D03               	skipz
  7297  0BBC  2BBE               	goto	u3710
  7298  0BBD  2BC6               	goto	l4838
  7299  0BBE                     u3710:
  7300                           	
  7301  0BBE                     l4836:	
  7302  0BBE  0872               	movf	(___ftpack@arg+2),w
  7303  0BBF  0471               	iorwf	(___ftpack@arg+1),w
  7304  0BC0  0470               	iorwf	(___ftpack@arg),w
  7305  0BC1  1D03               	skipz
  7306  0BC2  2BC4               	goto	u3721
  7307  0BC3  2BC5               	goto	u3720
  7308  0BC4                     u3721:
  7309  0BC4  2BDC               	goto	l4844
  7310  0BC5                     u3720:
  7311  0BC5  2BC6               	goto	l4838
  7312                           	
  7313  0BC6                     l2646:	
  7314                           	line	65
  7315                           	
  7316  0BC6                     l4838:	
  7317  0BC6  3000               	movlw	0x0
  7318  0BC7  00F0               	movwf	(?___ftpack)
  7319  0BC8  3000               	movlw	0x0
  7320  0BC9  00F1               	movwf	(?___ftpack+1)
  7321  0BCA  3000               	movlw	0x0
  7322  0BCB  00F2               	movwf	(?___ftpack+2)
  7323  0BCC  2C34               	goto	l2647
  7324                           	
  7325  0BCD                     l4840:	
  7326  0BCD  2C34               	goto	l2647
  7327                           	
  7328  0BCE                     l2644:	
  7329                           	line	66
  7330  0BCE  2BDC               	goto	l4844
  7331                           	
  7332  0BCF                     l2649:	
  7333                           	line	67
  7334                           	
  7335  0BCF                     l4842:	
  7336  0BCF  3001               	movlw	(01h)
  7337  0BD0  00F5               	movwf	(??___ftpack+0)+0
  7338  0BD1  0875               	movf	(??___ftpack+0)+0,w
  7339  0BD2  07F3               	addwf	(___ftpack@exp),f
  7340                           	line	68
  7341  0BD3  3001               	movlw	01h
  7342  0BD4                     u3735:
  7343  0BD4  1003               	clrc
  7344  0BD5  0CF2               	rrf	(___ftpack@arg+2),f
  7345  0BD6  0CF1               	rrf	(___ftpack@arg+1),f
  7346  0BD7  0CF0               	rrf	(___ftpack@arg),f
  7347  0BD8  3EFF               	addlw	-1
  7348  0BD9  1D03               	skipz
  7349  0BDA  2BD4               	goto	u3735
  7350                           
  7351  0BDB  2BDC               	goto	l4844
  7352                           	line	69
  7353                           	
  7354  0BDC                     l2648:	
  7355                           	line	66
  7356                           	
  7357  0BDC                     l4844:	
  7358  0BDC  30FE               	movlw	low highword(0FE0000h)
  7359  0BDD  0572               	andwf	(___ftpack@arg+2),w
  7360  0BDE  1D03               	btfss	status,2
  7361  0BDF  2BE1               	goto	u3741
  7362  0BE0  2BE2               	goto	u3740
  7363  0BE1                     u3741:
  7364  0BE1  2BCF               	goto	l4842
  7365  0BE2                     u3740:
  7366  0BE2  2BFA               	goto	l2651
  7367                           	
  7368  0BE3                     l2650:	
  7369                           	line	70
  7370  0BE3  2BFA               	goto	l2651
  7371                           	
  7372  0BE4                     l2652:	
  7373                           	line	71
  7374                           	
  7375  0BE4                     l4846:	
  7376  0BE4  3001               	movlw	(01h)
  7377  0BE5  00F5               	movwf	(??___ftpack+0)+0
  7378  0BE6  0875               	movf	(??___ftpack+0)+0,w
  7379  0BE7  07F3               	addwf	(___ftpack@exp),f
  7380                           	line	72
  7381                           	
  7382  0BE8                     l4848:	
  7383  0BE8  3001               	movlw	01h
  7384  0BE9  07F0               	addwf	(___ftpack@arg),f
  7385  0BEA  3000               	movlw	0
  7386  0BEB  1803               	skipnc
  7387  0BEC  3001               movlw 1
  7388  0BED  07F1               	addwf	(___ftpack@arg+1),f
  7389  0BEE  3000               	movlw	0
  7390  0BEF  1803               	skipnc
  7391  0BF0  3001               movlw 1
  7392  0BF1  07F2               	addwf	(___ftpack@arg+2),f
  7393                           	line	73
  7394                           	
  7395  0BF2                     l4850:	
  7396  0BF2  3001               	movlw	01h
  7397  0BF3                     u3755:
  7398  0BF3  1003               	clrc
  7399  0BF4  0CF2               	rrf	(___ftpack@arg+2),f
  7400  0BF5  0CF1               	rrf	(___ftpack@arg+1),f
  7401  0BF6  0CF0               	rrf	(___ftpack@arg),f
  7402  0BF7  3EFF               	addlw	-1
  7403  0BF8  1D03               	skipz
  7404  0BF9  2BF3               	goto	u3755
  7405                           
  7406                           	line	74
  7407                           	
  7408  0BFA                     l2651:	
  7409                           	line	70
  7410  0BFA  30FF               	movlw	low highword(0FF0000h)
  7411  0BFB  0572               	andwf	(___ftpack@arg+2),w
  7412  0BFC  1D03               	btfss	status,2
  7413  0BFD  2BFF               	goto	u3761
  7414  0BFE  2C00               	goto	u3760
  7415  0BFF                     u3761:
  7416  0BFF  2BE4               	goto	l4846
  7417  0C00                     u3760:
  7418  0C00  2C0D               	goto	l4854
  7419                           	
  7420  0C01                     l2653:	
  7421                           	line	75
  7422  0C01  2C0D               	goto	l4854
  7423                           	
  7424  0C02                     l2655:	
  7425                           	line	76
  7426                           	
  7427  0C02                     l4852:	
  7428  0C02  3001               	movlw	low(01h)
  7429  0C03  02F3               	subwf	(___ftpack@exp),f
  7430                           	line	77
  7431  0C04  3001               	movlw	01h
  7432  0C05                     u3775:
  7433  0C05  1003               	clrc
  7434  0C06  0DF0               	rlf	(___ftpack@arg),f
  7435  0C07  0DF1               	rlf	(___ftpack@arg+1),f
  7436  0C08  0DF2               	rlf	(___ftpack@arg+2),f
  7437  0C09  3EFF               	addlw	-1
  7438  0C0A  1D03               	skipz
  7439  0C0B  2C05               	goto	u3775
  7440  0C0C  2C0D               	goto	l4854
  7441                           	line	78
  7442                           	
  7443  0C0D                     l2654:	
  7444                           	line	75
  7445                           	
  7446  0C0D                     l4854:	
  7447  0C0D  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  7448  0C0E  2C10               	goto	u3781
  7449  0C0F  2C11               	goto	u3780
  7450  0C10                     u3781:
  7451  0C10  2C02               	goto	l4852
  7452  0C11                     u3780:
  7453                           	
  7454  0C11                     l2656:	
  7455                           	line	79
  7456  0C11  1873               	btfsc	(___ftpack@exp),(0)&7
  7457  0C12  2C14               	goto	u3791
  7458  0C13  2C15               	goto	u3790
  7459  0C14                     u3791:
  7460  0C14  2C1B               	goto	l2657
  7461  0C15                     u3790:
  7462                           	line	80
  7463                           	
  7464  0C15                     l4856:	
  7465  0C15  30FF               	movlw	0FFh
  7466  0C16  05F0               	andwf	(___ftpack@arg),f
  7467  0C17  307F               	movlw	07Fh
  7468  0C18  05F1               	andwf	(___ftpack@arg+1),f
  7469  0C19  30FF               	movlw	0FFh
  7470  0C1A  05F2               	andwf	(___ftpack@arg+2),f
  7471                           	
  7472  0C1B                     l2657:	
  7473                           	line	81
  7474  0C1B  1003               	clrc
  7475  0C1C  0CF3               	rrf	(___ftpack@exp),f
  7476                           
  7477                           	line	82
  7478                           	
  7479  0C1D                     l4858:	
  7480  0C1D  0873               	movf	(___ftpack@exp),w
  7481  0C1E  00F5               	movwf	((??___ftpack+0)+0)
  7482  0C1F  01F6               	clrf	((??___ftpack+0)+0+1)
  7483  0C20  01F7               	clrf	((??___ftpack+0)+0+2)
  7484  0C21  3010               	movlw	010h
  7485  0C22                     u3805:
  7486  0C22  1003               	clrc
  7487  0C23  0DF5               	rlf	(??___ftpack+0)+0,f
  7488  0C24  0DF6               	rlf	(??___ftpack+0)+1,f
  7489  0C25  0DF7               	rlf	(??___ftpack+0)+2,f
  7490  0C26                     u3800:
  7491  0C26  3EFF               	addlw	-1
  7492  0C27  1D03               	skipz
  7493  0C28  2C22               	goto	u3805
  7494  0C29  0875               	movf	0+(??___ftpack+0)+0,w
  7495  0C2A  04F0               	iorwf	(___ftpack@arg),f
  7496  0C2B  0876               	movf	1+(??___ftpack+0)+0,w
  7497  0C2C  04F1               	iorwf	(___ftpack@arg+1),f
  7498  0C2D  0877               	movf	2+(??___ftpack+0)+0,w
  7499  0C2E  04F2               	iorwf	(___ftpack@arg+2),f
  7500                           	line	83
  7501                           	
  7502  0C2F                     l4860:	
  7503  0C2F  0874               	movf	(___ftpack@sign),w
  7504  0C30  1D03               	skipz
  7505  0C31  2C33               	goto	u3810
  7506  0C32  2C34               	goto	l2658
  7507  0C33                     u3810:
  7508                           	line	84
  7509                           	
  7510  0C33                     l4862:	
  7511  0C33  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  7512                           	
  7513  0C34                     l2658:	
  7514                           	line	85
  7515                           	line	86
  7516                           	
  7517  0C34                     l2647:	
  7518  0C34  0008               	return
  7519                           	opt stack 0
  7520                           GLOBAL	__end_of___ftpack
  7521  0C35                     	__end_of___ftpack:
  7522 ;; =============== function ___ftpack ends ============
  7523                           
  7524                           	signat	___ftpack,12411
  7525                           	global	___lwmod
  7526                           psect	text1030,local,class=CODE,delta=2
  7527                           global __ptext1030
  7528  0A62                     __ptext1030:
  7529                           
  7530 ;; *************** function ___lwmod *****************
  7531 ;; Defined at:
  7532 ;;		line 5 in file "/Applications/HI-TECH/picc/9.83/sources/lwmod.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  divisor         2    8[COMMON] unsigned int 
  7535 ;;  dividend        2   10[COMMON] unsigned int 
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  counter         1   13[COMMON] unsigned char 
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  2    8[COMMON] unsigned int 
  7540 ;; Registers used:
  7541 ;;		wreg, status,2, status,0
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7547 ;;      Params:         4       0       0       0       0
  7548 ;;      Locals:         1       0       0       0       0
  7549 ;;      Temps:          1       0       0       0       0
  7550 ;;      Totals:         6       0       0       0       0
  7551 ;;Total ram usage:        6 bytes
  7552 ;; Hardware stack levels used:    1
  7553 ;; This function calls:
  7554 ;;		Nothing
  7555 ;; This function is called by:
  7556 ;;		_sprintf
  7557 ;; This function uses a non-reentrant model
  7558 ;;
  7559                           psect	text1030
  7560                           	file	"/Applications/HI-TECH/picc/9.83/sources/lwmod.c"
  7561                           	line	5
  7562                           	global	__size_of___lwmod
  7563  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  7564                           	
  7565  0A62                     ___lwmod:	
  7566                           	opt	stack 4
  7567                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7568                           	line	8
  7569                           	
  7570  0A62                     l4742:	
  7571  0A62  0879               	movf	(___lwmod@divisor+1),w
  7572  0A63  0478               	iorwf	(___lwmod@divisor),w
  7573  0A64  1903               	skipnz
  7574  0A65  2A67               	goto	u3411
  7575  0A66  2A68               	goto	u3410
  7576  0A67                     u3411:
  7577  0A67  2A9E               	goto	l4760
  7578  0A68                     u3410:
  7579                           	line	9
  7580                           	
  7581  0A68                     l4744:	
  7582  0A68  01FD               	clrf	(___lwmod@counter)
  7583  0A69  1403               	bsf	status,0
  7584  0A6A  0DFD               	rlf	(___lwmod@counter),f
  7585                           	line	10
  7586  0A6B  2A78               	goto	l4750
  7587                           	
  7588  0A6C                     l2330:	
  7589                           	line	11
  7590                           	
  7591  0A6C                     l4746:	
  7592  0A6C  3001               	movlw	01h
  7593                           	
  7594  0A6D                     u3425:
  7595  0A6D  1003               	clrc
  7596  0A6E  0DF8               	rlf	(___lwmod@divisor),f
  7597  0A6F  0DF9               	rlf	(___lwmod@divisor+1),f
  7598  0A70  3EFF               	addlw	-1
  7599  0A71  1D03               	skipz
  7600  0A72  2A6D               	goto	u3425
  7601                           	line	12
  7602                           	
  7603  0A73                     l4748:	
  7604  0A73  3001               	movlw	(01h)
  7605  0A74  00FC               	movwf	(??___lwmod+0)+0
  7606  0A75  087C               	movf	(??___lwmod+0)+0,w
  7607  0A76  07FD               	addwf	(___lwmod@counter),f
  7608  0A77  2A78               	goto	l4750
  7609                           	line	13
  7610                           	
  7611  0A78                     l2329:	
  7612                           	line	10
  7613                           	
  7614  0A78                     l4750:	
  7615  0A78  1FF9               	btfss	(___lwmod@divisor+1),(15)&7
  7616  0A79  2A7B               	goto	u3431
  7617  0A7A  2A7C               	goto	u3430
  7618  0A7B                     u3431:
  7619  0A7B  2A6C               	goto	l4746
  7620  0A7C                     u3430:
  7621  0A7C  2A7E               	goto	l4752
  7622                           	
  7623  0A7D                     l2331:	
  7624  0A7D  2A7E               	goto	l4752
  7625                           	line	14
  7626                           	
  7627  0A7E                     l2332:	
  7628                           	line	15
  7629                           	
  7630  0A7E                     l4752:	
  7631  0A7E  0879               	movf	(___lwmod@divisor+1),w
  7632  0A7F  027B               	subwf	(___lwmod@dividend+1),w
  7633  0A80  1D03               	skipz
  7634  0A81  2A84               	goto	u3445
  7635  0A82  0878               	movf	(___lwmod@divisor),w
  7636  0A83  027A               	subwf	(___lwmod@dividend),w
  7637  0A84                     u3445:
  7638  0A84  1C03               	skipc
  7639  0A85  2A87               	goto	u3441
  7640  0A86  2A88               	goto	u3440
  7641  0A87                     u3441:
  7642  0A87  2A8F               	goto	l4756
  7643  0A88                     u3440:
  7644                           	line	16
  7645                           	
  7646  0A88                     l4754:	
  7647  0A88  0878               	movf	(___lwmod@divisor),w
  7648  0A89  02FA               	subwf	(___lwmod@dividend),f
  7649  0A8A  0879               	movf	(___lwmod@divisor+1),w
  7650  0A8B  1C03               	skipc
  7651  0A8C  03FB               	decf	(___lwmod@dividend+1),f
  7652  0A8D  02FB               	subwf	(___lwmod@dividend+1),f
  7653  0A8E  2A8F               	goto	l4756
  7654                           	
  7655  0A8F                     l2333:	
  7656                           	line	17
  7657                           	
  7658  0A8F                     l4756:	
  7659  0A8F  3001               	movlw	01h
  7660                           	
  7661  0A90                     u3455:
  7662  0A90  1003               	clrc
  7663  0A91  0CF9               	rrf	(___lwmod@divisor+1),f
  7664  0A92  0CF8               	rrf	(___lwmod@divisor),f
  7665  0A93  3EFF               	addlw	-1
  7666  0A94  1D03               	skipz
  7667  0A95  2A90               	goto	u3455
  7668                           	line	18
  7669                           	
  7670  0A96                     l4758:	
  7671  0A96  3001               	movlw	low(01h)
  7672  0A97  02FD               	subwf	(___lwmod@counter),f
  7673  0A98  1D03               	btfss	status,2
  7674  0A99  2A9B               	goto	u3461
  7675  0A9A  2A9C               	goto	u3460
  7676  0A9B                     u3461:
  7677  0A9B  2A7E               	goto	l4752
  7678  0A9C                     u3460:
  7679  0A9C  2A9E               	goto	l4760
  7680                           	
  7681  0A9D                     l2334:	
  7682  0A9D  2A9E               	goto	l4760
  7683                           	line	19
  7684                           	
  7685  0A9E                     l2328:	
  7686                           	line	20
  7687                           	
  7688  0A9E                     l4760:	
  7689  0A9E  087B               	movf	(___lwmod@dividend+1),w
  7690  0A9F  01F9               	clrf	(?___lwmod+1)
  7691  0AA0  07F9               	addwf	(?___lwmod+1)
  7692  0AA1  087A               	movf	(___lwmod@dividend),w
  7693  0AA2  01F8               	clrf	(?___lwmod)
  7694  0AA3  07F8               	addwf	(?___lwmod)
  7695                           
  7696  0AA4  2AA5               	goto	l2335
  7697                           	
  7698  0AA5                     l4762:	
  7699                           	line	21
  7700                           	
  7701  0AA5                     l2335:	
  7702  0AA5  0008               	return
  7703                           	opt stack 0
  7704                           GLOBAL	__end_of___lwmod
  7705  0AA6                     	__end_of___lwmod:
  7706 ;; =============== function ___lwmod ends ============
  7707                           
  7708                           	signat	___lwmod,8314
  7709                           	global	___lwdiv
  7710                           psect	text1031,local,class=CODE,delta=2
  7711                           global __ptext1031
  7712  0AA6                     __ptext1031:
  7713                           
  7714 ;; *************** function ___lwdiv *****************
  7715 ;; Defined at:
  7716 ;;		line 5 in file "/Applications/HI-TECH/picc/9.83/sources/lwdiv.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;  divisor         2    0[COMMON] unsigned int 
  7719 ;;  dividend        2    2[COMMON] unsigned int 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;  quotient        2    5[COMMON] unsigned int 
  7722 ;;  counter         1    7[COMMON] unsigned char 
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  2    0[COMMON] unsigned int 
  7725 ;; Registers used:
  7726 ;;		wreg, status,2, status,0
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7732 ;;      Params:         4       0       0       0       0
  7733 ;;      Locals:         3       0       0       0       0
  7734 ;;      Temps:          1       0       0       0       0
  7735 ;;      Totals:         8       0       0       0       0
  7736 ;;Total ram usage:        8 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_getData
  7742 ;;		_sprintf
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           psect	text1031
  7746                           	file	"/Applications/HI-TECH/picc/9.83/sources/lwdiv.c"
  7747                           	line	5
  7748                           	global	__size_of___lwdiv
  7749  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  7750                           	
  7751  0AA6                     ___lwdiv:	
  7752                           	opt	stack 4
  7753                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7754                           	line	9
  7755                           	
  7756  0AA6                     l4716:	
  7757  0AA6  01F5               	clrf	(___lwdiv@quotient)
  7758  0AA7  01F6               	clrf	(___lwdiv@quotient+1)
  7759                           	line	10
  7760                           	
  7761  0AA8                     l4718:	
  7762  0AA8  0871               	movf	(___lwdiv@divisor+1),w
  7763  0AA9  0470               	iorwf	(___lwdiv@divisor),w
  7764  0AAA  1903               	skipnz
  7765  0AAB  2AAD               	goto	u3341
  7766  0AAC  2AAE               	goto	u3340
  7767  0AAD                     u3341:
  7768  0AAD  2AEC               	goto	l4738
  7769  0AAE                     u3340:
  7770                           	line	11
  7771                           	
  7772  0AAE                     l4720:	
  7773  0AAE  01F7               	clrf	(___lwdiv@counter)
  7774  0AAF  1403               	bsf	status,0
  7775  0AB0  0DF7               	rlf	(___lwdiv@counter),f
  7776                           	line	12
  7777  0AB1  2ABE               	goto	l4726
  7778                           	
  7779  0AB2                     l2320:	
  7780                           	line	13
  7781                           	
  7782  0AB2                     l4722:	
  7783  0AB2  3001               	movlw	01h
  7784                           	
  7785  0AB3                     u3355:
  7786  0AB3  1003               	clrc
  7787  0AB4  0DF0               	rlf	(___lwdiv@divisor),f
  7788  0AB5  0DF1               	rlf	(___lwdiv@divisor+1),f
  7789  0AB6  3EFF               	addlw	-1
  7790  0AB7  1D03               	skipz
  7791  0AB8  2AB3               	goto	u3355
  7792                           	line	14
  7793                           	
  7794  0AB9                     l4724:	
  7795  0AB9  3001               	movlw	(01h)
  7796  0ABA  00F4               	movwf	(??___lwdiv+0)+0
  7797  0ABB  0874               	movf	(??___lwdiv+0)+0,w
  7798  0ABC  07F7               	addwf	(___lwdiv@counter),f
  7799  0ABD  2ABE               	goto	l4726
  7800                           	line	15
  7801                           	
  7802  0ABE                     l2319:	
  7803                           	line	12
  7804                           	
  7805  0ABE                     l4726:	
  7806  0ABE  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  7807  0ABF  2AC1               	goto	u3361
  7808  0AC0  2AC2               	goto	u3360
  7809  0AC1                     u3361:
  7810  0AC1  2AB2               	goto	l4722
  7811  0AC2                     u3360:
  7812  0AC2  2AC4               	goto	l4728
  7813                           	
  7814  0AC3                     l2321:	
  7815  0AC3  2AC4               	goto	l4728
  7816                           	line	16
  7817                           	
  7818  0AC4                     l2322:	
  7819                           	line	17
  7820                           	
  7821  0AC4                     l4728:	
  7822  0AC4  3001               	movlw	01h
  7823                           	
  7824  0AC5                     u3375:
  7825  0AC5  1003               	clrc
  7826  0AC6  0DF5               	rlf	(___lwdiv@quotient),f
  7827  0AC7  0DF6               	rlf	(___lwdiv@quotient+1),f
  7828  0AC8  3EFF               	addlw	-1
  7829  0AC9  1D03               	skipz
  7830  0ACA  2AC5               	goto	u3375
  7831                           	line	18
  7832  0ACB  0871               	movf	(___lwdiv@divisor+1),w
  7833  0ACC  0273               	subwf	(___lwdiv@dividend+1),w
  7834  0ACD  1D03               	skipz
  7835  0ACE  2AD1               	goto	u3385
  7836  0ACF  0870               	movf	(___lwdiv@divisor),w
  7837  0AD0  0272               	subwf	(___lwdiv@dividend),w
  7838  0AD1                     u3385:
  7839  0AD1  1C03               	skipc
  7840  0AD2  2AD4               	goto	u3381
  7841  0AD3  2AD5               	goto	u3380
  7842  0AD4                     u3381:
  7843  0AD4  2ADD               	goto	l4734
  7844  0AD5                     u3380:
  7845                           	line	19
  7846                           	
  7847  0AD5                     l4730:	
  7848  0AD5  0870               	movf	(___lwdiv@divisor),w
  7849  0AD6  02F2               	subwf	(___lwdiv@dividend),f
  7850  0AD7  0871               	movf	(___lwdiv@divisor+1),w
  7851  0AD8  1C03               	skipc
  7852  0AD9  03F3               	decf	(___lwdiv@dividend+1),f
  7853  0ADA  02F3               	subwf	(___lwdiv@dividend+1),f
  7854                           	line	20
  7855                           	
  7856  0ADB                     l4732:	
  7857  0ADB  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  7858  0ADC  2ADD               	goto	l4734
  7859                           	line	21
  7860                           	
  7861  0ADD                     l2323:	
  7862                           	line	22
  7863                           	
  7864  0ADD                     l4734:	
  7865  0ADD  3001               	movlw	01h
  7866                           	
  7867  0ADE                     u3395:
  7868  0ADE  1003               	clrc
  7869  0ADF  0CF1               	rrf	(___lwdiv@divisor+1),f
  7870  0AE0  0CF0               	rrf	(___lwdiv@divisor),f
  7871  0AE1  3EFF               	addlw	-1
  7872  0AE2  1D03               	skipz
  7873  0AE3  2ADE               	goto	u3395
  7874                           	line	23
  7875                           	
  7876  0AE4                     l4736:	
  7877  0AE4  3001               	movlw	low(01h)
  7878  0AE5  02F7               	subwf	(___lwdiv@counter),f
  7879  0AE6  1D03               	btfss	status,2
  7880  0AE7  2AE9               	goto	u3401
  7881  0AE8  2AEA               	goto	u3400
  7882  0AE9                     u3401:
  7883  0AE9  2AC4               	goto	l4728
  7884  0AEA                     u3400:
  7885  0AEA  2AEC               	goto	l4738
  7886                           	
  7887  0AEB                     l2324:	
  7888  0AEB  2AEC               	goto	l4738
  7889                           	line	24
  7890                           	
  7891  0AEC                     l2318:	
  7892                           	line	25
  7893                           	
  7894  0AEC                     l4738:	
  7895  0AEC  0876               	movf	(___lwdiv@quotient+1),w
  7896  0AED  01F1               	clrf	(?___lwdiv+1)
  7897  0AEE  07F1               	addwf	(?___lwdiv+1)
  7898  0AEF  0875               	movf	(___lwdiv@quotient),w
  7899  0AF0  01F0               	clrf	(?___lwdiv)
  7900  0AF1  07F0               	addwf	(?___lwdiv)
  7901                           
  7902  0AF2  2AF3               	goto	l2325
  7903                           	
  7904  0AF3                     l4740:	
  7905                           	line	26
  7906                           	
  7907  0AF3                     l2325:	
  7908  0AF3  0008               	return
  7909                           	opt stack 0
  7910                           GLOBAL	__end_of___lwdiv
  7911  0AF4                     	__end_of___lwdiv:
  7912 ;; =============== function ___lwdiv ends ============
  7913                           
  7914                           	signat	___lwdiv,8314
  7915                           	global	___wmul
  7916                           psect	text1032,local,class=CODE,delta=2
  7917                           global __ptext1032
  7918  094D                     __ptext1032:
  7919                           
  7920 ;; *************** function ___wmul *****************
  7921 ;; Defined at:
  7922 ;;		line 3 in file "/Applications/HI-TECH/picc/9.83/sources/wmul.c"
  7923 ;; Parameters:    Size  Location     Type
  7924 ;;  multiplier      2    0[COMMON] unsigned int 
  7925 ;;  multiplicand    2    2[COMMON] unsigned int 
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;  product         2    4[COMMON] unsigned int 
  7928 ;; Return value:  Size  Location     Type
  7929 ;;                  2    0[COMMON] unsigned int 
  7930 ;; Registers used:
  7931 ;;		wreg, status,2, status,0
  7932 ;; Tracked objects:
  7933 ;;		On entry : 0/0
  7934 ;;		On exit  : 0/0
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7937 ;;      Params:         4       0       0       0       0
  7938 ;;      Locals:         2       0       0       0       0
  7939 ;;      Temps:          0       0       0       0       0
  7940 ;;      Totals:         6       0       0       0       0
  7941 ;;Total ram usage:        6 bytes
  7942 ;; Hardware stack levels used:    1
  7943 ;; This function calls:
  7944 ;;		Nothing
  7945 ;; This function is called by:
  7946 ;;		_getData
  7947 ;;		_left
  7948 ;;		_right
  7949 ;;		_select
  7950 ;;		_deselect
  7951 ;;		_print
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           psect	text1032
  7955                           	file	"/Applications/HI-TECH/picc/9.83/sources/wmul.c"
  7956                           	line	3
  7957                           	global	__size_of___wmul
  7958  002A                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  7959                           	
  7960  094D                     ___wmul:	
  7961                           	opt	stack 6
  7962                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7963                           	line	4
  7964                           	
  7965  094D                     l4704:	
  7966  094D  01F4               	clrf	(___wmul@product)
  7967  094E  01F5               	clrf	(___wmul@product+1)
  7968  094F  2950               	goto	l4706
  7969                           	line	6
  7970                           	
  7971  0950                     l2312:	
  7972                           	line	7
  7973                           	
  7974  0950                     l4706:	
  7975  0950  1C70               	btfss	(___wmul@multiplier),(0)&7
  7976  0951  2953               	goto	u3301
  7977  0952  2954               	goto	u3300
  7978  0953                     u3301:
  7979  0953  295A               	goto	l2313
  7980  0954                     u3300:
  7981                           	line	8
  7982                           	
  7983  0954                     l4708:	
  7984  0954  0872               	movf	(___wmul@multiplicand),w
  7985  0955  07F4               	addwf	(___wmul@product),f
  7986  0956  1803               	skipnc
  7987  0957  0AF5               	incf	(___wmul@product+1),f
  7988  0958  0873               	movf	(___wmul@multiplicand+1),w
  7989  0959  07F5               	addwf	(___wmul@product+1),f
  7990                           	
  7991  095A                     l2313:	
  7992                           	line	9
  7993  095A  3001               	movlw	01h
  7994                           	
  7995  095B                     u3315:
  7996  095B  1003               	clrc
  7997  095C  0DF2               	rlf	(___wmul@multiplicand),f
  7998  095D  0DF3               	rlf	(___wmul@multiplicand+1),f
  7999  095E  3EFF               	addlw	-1
  8000  095F  1D03               	skipz
  8001  0960  295B               	goto	u3315
  8002                           	line	10
  8003                           	
  8004  0961                     l4710:	
  8005  0961  3001               	movlw	01h
  8006                           	
  8007  0962                     u3325:
  8008  0962  1003               	clrc
  8009  0963  0CF1               	rrf	(___wmul@multiplier+1),f
  8010  0964  0CF0               	rrf	(___wmul@multiplier),f
  8011  0965  3EFF               	addlw	-1
  8012  0966  1D03               	skipz
  8013  0967  2962               	goto	u3325
  8014                           	line	11
  8015  0968  0871               	movf	((___wmul@multiplier+1)),w
  8016  0969  0470               	iorwf	((___wmul@multiplier)),w
  8017  096A  1D03               	skipz
  8018  096B  296D               	goto	u3331
  8019  096C  296E               	goto	u3330
  8020  096D                     u3331:
  8021  096D  2950               	goto	l4706
  8022  096E                     u3330:
  8023  096E  296F               	goto	l4712
  8024                           	
  8025  096F                     l2314:	
  8026                           	line	12
  8027                           	
  8028  096F                     l4712:	
  8029  096F  0875               	movf	(___wmul@product+1),w
  8030  0970  01F1               	clrf	(?___wmul+1)
  8031  0971  07F1               	addwf	(?___wmul+1)
  8032  0972  0874               	movf	(___wmul@product),w
  8033  0973  01F0               	clrf	(?___wmul)
  8034  0974  07F0               	addwf	(?___wmul)
  8035                           
  8036  0975  2976               	goto	l2315
  8037                           	
  8038  0976                     l4714:	
  8039                           	line	13
  8040                           	
  8041  0976                     l2315:	
  8042  0976  0008               	return
  8043                           	opt stack 0
  8044                           GLOBAL	__end_of___wmul
  8045  0977                     	__end_of___wmul:
  8046 ;; =============== function ___wmul ends ============
  8047                           
  8048                           	signat	___wmul,8314
  8049                           	global	___bmul
  8050                           psect	text1033,local,class=CODE,delta=2
  8051                           global __ptext1033
  8052  17B3                     __ptext1033:
  8053                           
  8054 ;; *************** function ___bmul *****************
  8055 ;; Defined at:
  8056 ;;		line 3 in file "/Applications/HI-TECH/picc/9.83/sources/bmul.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;  multiplier      1    wreg     unsigned char 
  8059 ;;  multiplicand    1    0[COMMON] unsigned char 
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;  multiplier      1    3[COMMON] unsigned char 
  8062 ;;  product         1    2[COMMON] unsigned char 
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  1    wreg      unsigned char 
  8065 ;; Registers used:
  8066 ;;		wreg, status,2, status,0
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8072 ;;      Params:         1       0       0       0       0
  8073 ;;      Locals:         2       0       0       0       0
  8074 ;;      Temps:          1       0       0       0       0
  8075 ;;      Totals:         4       0       0       0       0
  8076 ;;Total ram usage:        4 bytes
  8077 ;; Hardware stack levels used:    1
  8078 ;; This function calls:
  8079 ;;		Nothing
  8080 ;; This function is called by:
  8081 ;;		_left
  8082 ;;		_right
  8083 ;;		_select
  8084 ;;		_deselect
  8085 ;;		_print
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           psect	text1033
  8089                           	file	"/Applications/HI-TECH/picc/9.83/sources/bmul.c"
  8090                           	line	3
  8091                           	global	__size_of___bmul
  8092  0018                     	__size_of___bmul	equ	__end_of___bmul-___bmul
  8093                           	
  8094  17B3                     ___bmul:	
  8095                           	opt	stack 6
  8096                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8097                           ;___bmul@multiplier stored from wreg
  8098  17B3  00F3               	movwf	(___bmul@multiplier)
  8099                           	line	4
  8100                           	
  8101  17B4                     l4690:	
  8102  17B4  01F2               	clrf	(___bmul@product)
  8103                           	line	6
  8104                           	
  8105  17B5                     l2306:	
  8106                           	line	7
  8107  17B5  1C73               	btfss	(___bmul@multiplier),(0)&7
  8108  17B6  2FB8               	goto	u3281
  8109  17B7  2FB9               	goto	u3280
  8110  17B8                     u3281:
  8111  17B8  2FBE               	goto	l4694
  8112  17B9                     u3280:
  8113                           	line	8
  8114                           	
  8115  17B9                     l4692:	
  8116  17B9  0870               	movf	(___bmul@multiplicand),w
  8117  17BA  00F1               	movwf	(??___bmul+0)+0
  8118  17BB  0871               	movf	(??___bmul+0)+0,w
  8119  17BC  07F2               	addwf	(___bmul@product),f
  8120  17BD  2FBE               	goto	l4694
  8121                           	
  8122  17BE                     l2307:	
  8123                           	line	9
  8124                           	
  8125  17BE                     l4694:	
  8126  17BE  1003               	clrc
  8127  17BF  0DF0               	rlf	(___bmul@multiplicand),f
  8128                           
  8129                           	line	10
  8130                           	
  8131  17C0                     l4696:	
  8132  17C0  1003               	clrc
  8133  17C1  0CF3               	rrf	(___bmul@multiplier),f
  8134                           
  8135                           	line	11
  8136                           	
  8137  17C2                     l4698:	
  8138  17C2  08F3               	movf	(___bmul@multiplier),f
  8139  17C3  1D03               	skipz
  8140  17C4  2FC6               	goto	u3291
  8141  17C5  2FC7               	goto	u3290
  8142  17C6                     u3291:
  8143  17C6  2FB5               	goto	l2306
  8144  17C7                     u3290:
  8145  17C7  2FC8               	goto	l4700
  8146                           	
  8147  17C8                     l2308:	
  8148                           	line	12
  8149                           	
  8150  17C8                     l4700:	
  8151  17C8  0872               	movf	(___bmul@product),w
  8152  17C9  2FCA               	goto	l2309
  8153                           	
  8154  17CA                     l4702:	
  8155                           	line	13
  8156                           	
  8157  17CA                     l2309:	
  8158  17CA  0008               	return
  8159                           	opt stack 0
  8160                           GLOBAL	__end_of___bmul
  8161  17CB                     	__end_of___bmul:
  8162 ;; =============== function ___bmul ends ============
  8163                           
  8164                           	signat	___bmul,8313
  8165                           	global	_abs
  8166                           psect	text1034,local,class=CODE,delta=2
  8167                           global __ptext1034
  8168  175F                     __ptext1034:
  8169                           
  8170 ;; *************** function _abs *****************
  8171 ;; Defined at:
  8172 ;;		line 5 in file "/Applications/HI-TECH/picc/9.83/sources/abs.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  a               2    0[COMMON] int 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;		None
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  2    0[COMMON] int 
  8179 ;; Registers used:
  8180 ;;		wreg, status,2, status,0
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8186 ;;      Params:         2       0       0       0       0
  8187 ;;      Locals:         0       0       0       0       0
  8188 ;;      Temps:          2       0       0       0       0
  8189 ;;      Totals:         4       0       0       0       0
  8190 ;;Total ram usage:        4 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; This function calls:
  8193 ;;		Nothing
  8194 ;; This function is called by:
  8195 ;;		_spin
  8196 ;; This function uses a non-reentrant model
  8197 ;;
  8198                           psect	text1034
  8199                           	file	"/Applications/HI-TECH/picc/9.83/sources/abs.c"
  8200                           	line	5
  8201                           	global	__size_of_abs
  8202  0012                     	__size_of_abs	equ	__end_of_abs-_abs
  8203                           	
  8204  175F                     _abs:	
  8205                           	opt	stack 5
  8206                           ; Regs used in _abs: [wreg+status,2+status,0]
  8207                           	line	6
  8208                           	
  8209  175F                     l4684:	
  8210  175F  1FF1               	btfss	(abs@a+1),7
  8211  1760  2F62               	goto	u3271
  8212  1761  2F63               	goto	u3270
  8213  1762                     u3271:
  8214  1762  2F70               	goto	l2302
  8215  1763                     u3270:
  8216                           	line	7
  8217                           	
  8218  1763                     l4686:	
  8219  1763  0970               	comf	(abs@a),w
  8220  1764  00F2               	movwf	(??_abs+0)+0
  8221  1765  0971               	comf	(abs@a+1),w
  8222  1766  00F3               	movwf	((??_abs+0)+0+1)
  8223  1767  0AF2               	incf	(??_abs+0)+0,f
  8224  1768  1903               	skipnz
  8225  1769  0AF3               	incf	((??_abs+0)+0+1),f
  8226  176A  0872               	movf	0+(??_abs+0)+0,w
  8227  176B  00F0               	movwf	(?_abs)
  8228  176C  0873               	movf	1+(??_abs+0)+0,w
  8229  176D  00F1               	movwf	(?_abs+1)
  8230  176E  2F70               	goto	l2303
  8231                           	
  8232  176F                     l4688:	
  8233  176F  2F70               	goto	l2303
  8234                           	
  8235  1770                     l2302:	
  8236                           	line	8
  8237                           	line	9
  8238                           	
  8239  1770                     l2303:	
  8240  1770  0008               	return
  8241                           	opt stack 0
  8242                           GLOBAL	__end_of_abs
  8243  1771                     	__end_of_abs:
  8244 ;; =============== function _abs ends ============
  8245                           
  8246                           	signat	_abs,4218
  8247                           	global	_SendIRPulseCycles
  8248                           psect	text1035,local,class=CODE,delta=2
  8249                           global __ptext1035
  8250  09CD                     __ptext1035:
  8251                           
  8252 ;; *************** function _SendIRPulseCycles *****************
  8253 ;; Defined at:
  8254 ;;		line 205 in file "main.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;  cycles          1    wreg     unsigned char 
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;  cycles          1    0[COMMON] unsigned char 
  8259 ;; Return value:  Size  Location     Type
  8260 ;;		None               void
  8261 ;; Registers used:
  8262 ;;		wreg, status,2, status,0
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8268 ;;      Params:         0       0       0       0       0
  8269 ;;      Locals:         1       0       0       0       0
  8270 ;;      Temps:          0       0       0       0       0
  8271 ;;      Totals:         1       0       0       0       0
  8272 ;;Total ram usage:        1 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; This function calls:
  8275 ;;		Nothing
  8276 ;; This function is called by:
  8277 ;;		_SendIRSequence
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           psect	text1035
  8281                           	file	"main.c"
  8282                           	line	205
  8283                           	global	__size_of_SendIRPulseCycles
  8284  002F                     	__size_of_SendIRPulseCycles	equ	__end_of_SendIRPulseCycles-_SendIRPulseCycles
  8285                           	
  8286  09CD                     _SendIRPulseCycles:	
  8287                           	opt	stack 4
  8288                           ; Regs used in _SendIRPulseCycles: [wreg+status,2+status,0]
  8289                           ;SendIRPulseCycles@cycles stored from wreg
  8290  09CD  00F0               	movwf	(SendIRPulseCycles@cycles)
  8291                           	line	206
  8292                           	
  8293  09CE                     l4680:	
  8294                           ;main.c: 206: while (cycles--)
  8295  09CE  29F2               	goto	l4682
  8296                           	
  8297  09CF                     l1163:	
  8298                           	line	211
  8299                           ;main.c: 207: {
  8300                           ;main.c: 211: RB1 = 1;
  8301  09CF  1283               	bcf	status, 5	;RP0=0, select bank0
  8302  09D0  1303               	bcf	status, 6	;RP1=0, select bank0
  8303  09D1  1486               	bsf	(49/8),(49)&7
  8304                           	line	212
  8305                           # 212 "main.c"
  8306  09D2  0000               nop ;#
  8307                           # 212 "main.c"
  8308  09D3  0000               nop ;#
  8309                           # 212 "main.c"
  8310  09D4  0000               nop ;#
  8311                           # 212 "main.c"
  8312  09D5  0000               nop ;#
  8313                           # 212 "main.c"
  8314  09D6  0000               nop ;#
  8315                           # 212 "main.c"
  8316  09D7  0000               nop ;#
  8317                           # 212 "main.c"
  8318  09D8  0000               nop ;#
  8319                           # 212 "main.c"
  8320  09D9  0000               nop ;#
  8321                           # 212 "main.c"
  8322  09DA  0000               nop ;#
  8323                           # 212 "main.c"
  8324  09DB  0000               nop ;#
  8325                           # 212 "main.c"
  8326  09DC  0000               nop ;#
  8327                           # 212 "main.c"
  8328  09DD  0000               nop ;#
  8329                           # 212 "main.c"
  8330  09DE  0000               nop ;#
  8331                           # 212 "main.c"
  8332  09DF  0000               nop ;#
  8333                           # 212 "main.c"
  8334  09E0  0000               nop ;#
  8335                           # 212 "main.c"
  8336  09E1  0000               nop ;#
  8337                           # 212 "main.c"
  8338  09E2  0000               nop ;#
  8339                           # 212 "main.c"
  8340  09E3  0000               nop ;#
  8341                           # 212 "main.c"
  8342  09E4  0000               nop ;#
  8343                           # 212 "main.c"
  8344  09E5  0000               nop ;#
  8345                           psect	text1035
  8346                           	line	213
  8347                           ;main.c: 213: RB1 = 0;
  8348  09E6  1283               	bcf	status, 5	;RP0=0, select bank0
  8349  09E7  1303               	bcf	status, 6	;RP1=0, select bank0
  8350  09E8  1086               	bcf	(49/8),(49)&7
  8351                           	line	214
  8352                           # 214 "main.c"
  8353  09E9  0000               nop ;#
  8354                           # 214 "main.c"
  8355  09EA  0000               nop ;#
  8356                           # 214 "main.c"
  8357  09EB  0000               nop ;#
  8358                           # 214 "main.c"
  8359  09EC  0000               nop ;#
  8360                           # 214 "main.c"
  8361  09ED  0000               nop ;#
  8362                           # 214 "main.c"
  8363  09EE  0000               nop ;#
  8364                           # 214 "main.c"
  8365  09EF  0000               nop ;#
  8366                           # 214 "main.c"
  8367  09F0  0000               nop ;#
  8368                           psect	text1035
  8369  09F1  29F2               	goto	l4682
  8370                           	line	215
  8371                           	
  8372  09F2                     l1162:	
  8373                           	line	206
  8374                           	
  8375  09F2                     l4682:	
  8376  09F2  3001               	movlw	low(01h)
  8377  09F3  02F0               	subwf	(SendIRPulseCycles@cycles),f
  8378  09F4  0870               	movf	((SendIRPulseCycles@cycles)),w
  8379  09F5  3AFF               	xorlw	0FFh
  8380  09F6  1D03               	skipz
  8381  09F7  29F9               	goto	u3261
  8382  09F8  29FA               	goto	u3260
  8383  09F9                     u3261:
  8384  09F9  29CF               	goto	l1163
  8385  09FA                     u3260:
  8386  09FA  29FB               	goto	l1165
  8387                           	
  8388  09FB                     l1164:	
  8389                           	line	216
  8390                           	
  8391  09FB                     l1165:	
  8392  09FB  0008               	return
  8393                           	opt stack 0
  8394                           GLOBAL	__end_of_SendIRPulseCycles
  8395  09FC                     	__end_of_SendIRPulseCycles:
  8396 ;; =============== function _SendIRPulseCycles ends ============
  8397                           
  8398                           	signat	_SendIRPulseCycles,4216
  8399                           	global	_getKey
  8400                           psect	text1036,local,class=CODE,delta=2
  8401                           global __ptext1036
  8402  0AF4                     __ptext1036:
  8403                           
  8404 ;; *************** function _getKey *****************
  8405 ;; Defined at:
  8406 ;;		line 420 in file "main.c"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;		None
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;  btn             2    2[COMMON] int 
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  2    0[COMMON] int 
  8413 ;; Registers used:
  8414 ;;		wreg, status,2, status,0
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8420 ;;      Params:         2       0       0       0       0
  8421 ;;      Locals:         2       0       0       0       0
  8422 ;;      Temps:          0       0       0       0       0
  8423 ;;      Totals:         4       0       0       0       0
  8424 ;;Total ram usage:        4 bytes
  8425 ;; Hardware stack levels used:    1
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_main
  8430 ;; This function uses a non-reentrant model
  8431 ;;
  8432                           psect	text1036
  8433                           	file	"main.c"
  8434                           	line	420
  8435                           	global	__size_of_getKey
  8436  0054                     	__size_of_getKey	equ	__end_of_getKey-_getKey
  8437                           	
  8438  0AF4                     _getKey:	
  8439                           	opt	stack 7
  8440                           ; Regs used in _getKey: [wreg+status,2+status,0]
  8441                           	line	421
  8442                           	
  8443  0AF4                     l4664:	
  8444                           ;main.c: 421: int btn=0;
  8445  0AF4  01F2               	clrf	(getKey@btn)
  8446  0AF5  01F3               	clrf	(getKey@btn+1)
  8447                           	line	423
  8448                           ;main.c: 423: while (btn==0) {
  8449  0AF6  2B39               	goto	l4674
  8450                           	
  8451  0AF7                     l1262:	
  8452                           	line	424
  8453                           ;main.c: 424: if (RB7==1) {btn=1; while (RB7==1);}
  8454  0AF7  1283               	bcf	status, 5	;RP0=0, select bank0
  8455  0AF8  1303               	bcf	status, 6	;RP1=0, select bank0
  8456  0AF9  1F86               	btfss	(55/8),(55)&7
  8457  0AFA  2AFC               	goto	u3171
  8458  0AFB  2AFD               	goto	u3170
  8459  0AFC                     u3171:
  8460  0AFC  2B08               	goto	l1263
  8461  0AFD                     u3170:
  8462                           	
  8463  0AFD                     l4666:	
  8464  0AFD  3001               	movlw	low(01h)
  8465  0AFE  00F2               	movwf	(getKey@btn)
  8466  0AFF  3000               	movlw	high(01h)
  8467  0B00  00F3               	movwf	((getKey@btn))+1
  8468  0B01  2B02               	goto	l1264
  8469                           	
  8470  0B02                     l1265:	
  8471                           	
  8472  0B02                     l1264:	
  8473  0B02  1B86               	btfsc	(55/8),(55)&7
  8474  0B03  2B05               	goto	u3181
  8475  0B04  2B06               	goto	u3180
  8476  0B05                     u3181:
  8477  0B05  2B02               	goto	l1264
  8478  0B06                     u3180:
  8479  0B06  2B39               	goto	l4674
  8480                           	
  8481  0B07                     l1266:	
  8482  0B07  2B39               	goto	l4674
  8483                           	line	425
  8484                           	
  8485  0B08                     l1263:	
  8486                           ;main.c: 425: else if (RB4==1) {btn=2; while (RB4==1);}
  8487  0B08  1E06               	btfss	(52/8),(52)&7
  8488  0B09  2B0B               	goto	u3191
  8489  0B0A  2B0C               	goto	u3190
  8490  0B0B                     u3191:
  8491  0B0B  2B17               	goto	l1268
  8492  0B0C                     u3190:
  8493                           	
  8494  0B0C                     l4668:	
  8495  0B0C  3002               	movlw	low(02h)
  8496  0B0D  00F2               	movwf	(getKey@btn)
  8497  0B0E  3000               	movlw	high(02h)
  8498  0B0F  00F3               	movwf	((getKey@btn))+1
  8499  0B10  2B11               	goto	l1269
  8500                           	
  8501  0B11                     l1270:	
  8502                           	
  8503  0B11                     l1269:	
  8504  0B11  1A06               	btfsc	(52/8),(52)&7
  8505  0B12  2B14               	goto	u3201
  8506  0B13  2B15               	goto	u3200
  8507  0B14                     u3201:
  8508  0B14  2B11               	goto	l1269
  8509  0B15                     u3200:
  8510  0B15  2B39               	goto	l4674
  8511                           	
  8512  0B16                     l1271:	
  8513  0B16  2B39               	goto	l4674
  8514                           	line	426
  8515                           	
  8516  0B17                     l1268:	
  8517                           ;main.c: 426: else if (RB6==1){btn=3; while (RB6==1);}
  8518  0B17  1F06               	btfss	(54/8),(54)&7
  8519  0B18  2B1A               	goto	u3211
  8520  0B19  2B1B               	goto	u3210
  8521  0B1A                     u3211:
  8522  0B1A  2B26               	goto	l1273
  8523  0B1B                     u3210:
  8524                           	
  8525  0B1B                     l4670:	
  8526  0B1B  3003               	movlw	low(03h)
  8527  0B1C  00F2               	movwf	(getKey@btn)
  8528  0B1D  3000               	movlw	high(03h)
  8529  0B1E  00F3               	movwf	((getKey@btn))+1
  8530  0B1F  2B20               	goto	l1274
  8531                           	
  8532  0B20                     l1275:	
  8533                           	
  8534  0B20                     l1274:	
  8535  0B20  1B06               	btfsc	(54/8),(54)&7
  8536  0B21  2B23               	goto	u3221
  8537  0B22  2B24               	goto	u3220
  8538  0B23                     u3221:
  8539  0B23  2B20               	goto	l1274
  8540  0B24                     u3220:
  8541  0B24  2B39               	goto	l4674
  8542                           	
  8543  0B25                     l1276:	
  8544  0B25  2B39               	goto	l4674
  8545                           	line	427
  8546                           	
  8547  0B26                     l1273:	
  8548                           ;main.c: 427: else if (RB5==1){btn=4; while (RB5==1);}
  8549  0B26  1E86               	btfss	(53/8),(53)&7
  8550  0B27  2B29               	goto	u3231
  8551  0B28  2B2A               	goto	u3230
  8552  0B29                     u3231:
  8553  0B29  2B39               	goto	l4674
  8554  0B2A                     u3230:
  8555                           	
  8556  0B2A                     l4672:	
  8557  0B2A  3004               	movlw	low(04h)
  8558  0B2B  00F2               	movwf	(getKey@btn)
  8559  0B2C  3000               	movlw	high(04h)
  8560  0B2D  00F3               	movwf	((getKey@btn))+1
  8561  0B2E  2B2F               	goto	l1279
  8562                           	
  8563  0B2F                     l1280:	
  8564                           	
  8565  0B2F                     l1279:	
  8566  0B2F  1A86               	btfsc	(53/8),(53)&7
  8567  0B30  2B32               	goto	u3241
  8568  0B31  2B33               	goto	u3240
  8569  0B32                     u3241:
  8570  0B32  2B2F               	goto	l1279
  8571  0B33                     u3240:
  8572  0B33  2B39               	goto	l4674
  8573                           	
  8574  0B34                     l1281:	
  8575  0B34  2B39               	goto	l4674
  8576                           	
  8577  0B35                     l1278:	
  8578  0B35  2B39               	goto	l4674
  8579                           	line	428
  8580                           	
  8581  0B36                     l1277:	
  8582  0B36  2B39               	goto	l4674
  8583                           	
  8584  0B37                     l1272:	
  8585  0B37  2B39               	goto	l4674
  8586                           	
  8587  0B38                     l1267:	
  8588  0B38  2B39               	goto	l4674
  8589                           	
  8590  0B39                     l1261:	
  8591                           	line	423
  8592                           	
  8593  0B39                     l4674:	
  8594  0B39  0873               	movf	(getKey@btn+1),w
  8595  0B3A  0472               	iorwf	(getKey@btn),w
  8596  0B3B  1903               	skipnz
  8597  0B3C  2B3E               	goto	u3251
  8598  0B3D  2B3F               	goto	u3250
  8599  0B3E                     u3251:
  8600  0B3E  2AF7               	goto	l1262
  8601  0B3F                     u3250:
  8602  0B3F  2B40               	goto	l4676
  8603                           	
  8604  0B40                     l1282:	
  8605                           	line	430
  8606                           	
  8607  0B40                     l4676:	
  8608                           ;main.c: 428: }
  8609                           ;main.c: 430: return btn;
  8610  0B40  0873               	movf	(getKey@btn+1),w
  8611  0B41  01F1               	clrf	(?_getKey+1)
  8612  0B42  07F1               	addwf	(?_getKey+1)
  8613  0B43  0872               	movf	(getKey@btn),w
  8614  0B44  01F0               	clrf	(?_getKey)
  8615  0B45  07F0               	addwf	(?_getKey)
  8616                           
  8617  0B46  2B47               	goto	l1283
  8618                           	
  8619  0B47                     l4678:	
  8620                           	line	431
  8621                           	
  8622  0B47                     l1283:	
  8623  0B47  0008               	return
  8624                           	opt stack 0
  8625                           GLOBAL	__end_of_getKey
  8626  0B48                     	__end_of_getKey:
  8627 ;; =============== function _getKey ends ============
  8628                           
  8629                           	signat	_getKey,90
  8630                           	global	_motorRelax
  8631                           psect	text1037,local,class=CODE,delta=2
  8632                           global __ptext1037
  8633  1749                     __ptext1037:
  8634                           
  8635 ;; *************** function _motorRelax *****************
  8636 ;; Defined at:
  8637 ;;		line 240 in file "main.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;		None
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;		None
  8642 ;; Return value:  Size  Location     Type
  8643 ;;		None               void
  8644 ;; Registers used:
  8645 ;;		None
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8651 ;;      Params:         0       0       0       0       0
  8652 ;;      Locals:         0       0       0       0       0
  8653 ;;      Temps:          0       0       0       0       0
  8654 ;;      Totals:         0       0       0       0       0
  8655 ;;Total ram usage:        0 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; This function calls:
  8658 ;;		Nothing
  8659 ;; This function is called by:
  8660 ;;		_main
  8661 ;;		_spin
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           psect	text1037
  8665                           	file	"main.c"
  8666                           	line	240
  8667                           	global	__size_of_motorRelax
  8668  0007                     	__size_of_motorRelax	equ	__end_of_motorRelax-_motorRelax
  8669                           	
  8670  1749                     _motorRelax:	
  8671                           	opt	stack 5
  8672                           ; Regs used in _motorRelax: []
  8673                           	line	241
  8674                           	
  8675  1749                     l4662:	
  8676                           ;main.c: 241: RA0=0;
  8677  1749  1283               	bcf	status, 5	;RP0=0, select bank0
  8678  174A  1303               	bcf	status, 6	;RP1=0, select bank0
  8679  174B  1005               	bcf	(40/8),(40)&7
  8680                           	line	242
  8681                           ;main.c: 242: RA1=0;
  8682  174C  1085               	bcf	(41/8),(41)&7
  8683                           	line	243
  8684                           ;main.c: 243: RA2=0;
  8685  174D  1105               	bcf	(42/8),(42)&7
  8686                           	line	244
  8687                           ;main.c: 244: RA3=0;
  8688  174E  1185               	bcf	(43/8),(43)&7
  8689                           	line	245
  8690                           	
  8691  174F                     l1174:	
  8692  174F  0008               	return
  8693                           	opt stack 0
  8694                           GLOBAL	__end_of_motorRelax
  8695  1750                     	__end_of_motorRelax:
  8696 ;; =============== function _motorRelax ends ============
  8697                           
  8698                           	signat	_motorRelax,88
  8699                           	global	_pic_init
  8700                           psect	text1038,local,class=CODE,delta=2
  8701                           global __ptext1038
  8702  179B                     __ptext1038:
  8703                           
  8704 ;; *************** function _pic_init *****************
  8705 ;; Defined at:
  8706 ;;		line 351 in file "main.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;		None
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;		None
  8711 ;; Return value:  Size  Location     Type
  8712 ;;		None               void
  8713 ;; Registers used:
  8714 ;;		wreg, status,2
  8715 ;; Tracked objects:
  8716 ;;		On entry : 0/0
  8717 ;;		On exit  : 0/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8720 ;;      Params:         0       0       0       0       0
  8721 ;;      Locals:         0       0       0       0       0
  8722 ;;      Temps:          0       0       0       0       0
  8723 ;;      Totals:         0       0       0       0       0
  8724 ;;Total ram usage:        0 bytes
  8725 ;; Hardware stack levels used:    1
  8726 ;; This function calls:
  8727 ;;		Nothing
  8728 ;; This function is called by:
  8729 ;;		_main
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           psect	text1038
  8733                           	file	"main.c"
  8734                           	line	351
  8735                           	global	__size_of_pic_init
  8736  0018                     	__size_of_pic_init	equ	__end_of_pic_init-_pic_init
  8737                           	
  8738  179B                     _pic_init:	
  8739                           	opt	stack 7
  8740                           ; Regs used in _pic_init: [wreg+status,2]
  8741                           	line	353
  8742                           	
  8743  179B                     l4652:	
  8744                           ;main.c: 353: OSCCON = 0b11110001;
  8745  179B  30F1               	movlw	(0F1h)
  8746  179C  1683               	bsf	status, 5	;RP0=1, select bank1
  8747  179D  1303               	bcf	status, 6	;RP1=0, select bank1
  8748  179E  008F               	movwf	(143)^080h	;volatile
  8749                           	line	355
  8750                           	
  8751  179F                     l4654:	
  8752                           ;main.c: 355: ANSELH = 0b00000000;
  8753  179F  1683               	bsf	status, 5	;RP0=1, select bank3
  8754  17A0  1703               	bsf	status, 6	;RP1=1, select bank3
  8755  17A1  0189               	clrf	(393)^0180h	;volatile
  8756                           	line	356
  8757                           	
  8758  17A2                     l4656:	
  8759                           ;main.c: 356: ANSEL = 0b00000000;
  8760  17A2  0188               	clrf	(392)^0180h	;volatile
  8761                           	line	358
  8762                           	
  8763  17A3                     l4658:	
  8764                           ;main.c: 358: TRISA = 0b00000000;
  8765  17A3  1683               	bsf	status, 5	;RP0=1, select bank1
  8766  17A4  1303               	bcf	status, 6	;RP1=0, select bank1
  8767  17A5  0185               	clrf	(133)^080h	;volatile
  8768                           	line	359
  8769                           	
  8770  17A6                     l4660:	
  8771                           ;main.c: 359: TRISB = 0b11110001;
  8772  17A6  30F1               	movlw	(0F1h)
  8773  17A7  0086               	movwf	(134)^080h	;volatile
  8774                           	line	360
  8775                           ;main.c: 360: TRISC = 0b00000000;
  8776  17A8  0187               	clrf	(135)^080h	;volatile
  8777                           	line	361
  8778                           ;main.c: 361: TRISD = 0b00000000;
  8779  17A9  0188               	clrf	(136)^080h	;volatile
  8780                           	line	362
  8781                           ;main.c: 362: TRISE = 0b00000000;
  8782  17AA  0189               	clrf	(137)^080h	;volatile
  8783                           	line	364
  8784                           ;main.c: 364: PORTA = 0;
  8785  17AB  1283               	bcf	status, 5	;RP0=0, select bank0
  8786  17AC  1303               	bcf	status, 6	;RP1=0, select bank0
  8787  17AD  0185               	clrf	(5)	;volatile
  8788                           	line	365
  8789                           ;main.c: 365: PORTB = 0;
  8790  17AE  0186               	clrf	(6)	;volatile
  8791                           	line	366
  8792                           ;main.c: 366: PORTC = 0;
  8793  17AF  0187               	clrf	(7)	;volatile
  8794                           	line	367
  8795                           ;main.c: 367: PORTD = 0;
  8796  17B0  0188               	clrf	(8)	;volatile
  8797                           	line	368
  8798                           ;main.c: 368: PORTE = 0;
  8799  17B1  0189               	clrf	(9)	;volatile
  8800                           	line	371
  8801                           	
  8802  17B2                     l1237:	
  8803  17B2  0008               	return
  8804                           	opt stack 0
  8805                           GLOBAL	__end_of_pic_init
  8806  17B3                     	__end_of_pic_init:
  8807 ;; =============== function _pic_init ends ============
  8808                           
  8809                           	signat	_pic_init,88
  8810                           	global	_DelayMs
  8811                           psect	text1039,local,class=CODE,delta=2
  8812                           global __ptext1039
  8813  08EA                     __ptext1039:
  8814                           
  8815 ;; *************** function _DelayMs *****************
  8816 ;; Defined at:
  8817 ;;		line 39 in file "/Users/francescomeli/Dropbox/Tesi/pocketDolly.X/delay/delay.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;  cnt             1    wreg     unsigned char 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  cnt             1    1[COMMON] unsigned char 
  8822 ;;  i               1    2[COMMON] unsigned char 
  8823 ;; Return value:  Size  Location     Type
  8824 ;;		None               void
  8825 ;; Registers used:
  8826 ;;		wreg, status,2, status,0
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8832 ;;      Params:         0       0       0       0       0
  8833 ;;      Locals:         2       0       0       0       0
  8834 ;;      Temps:          1       0       0       0       0
  8835 ;;      Totals:         3       0       0       0       0
  8836 ;;Total ram usage:        3 bytes
  8837 ;; Hardware stack levels used:    1
  8838 ;; This function calls:
  8839 ;;		Nothing
  8840 ;; This function is called by:
  8841 ;;		_DelayS
  8842 ;;		_spin
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           psect	text1039
  8846                           	file	"/Users/francescomeli/Dropbox/Tesi/pocketDolly.X/delay/delay.c"
  8847                           	line	39
  8848                           	global	__size_of_DelayMs
  8849  001E                     	__size_of_DelayMs	equ	__end_of_DelayMs-_DelayMs
  8850                           	
  8851  08EA                     _DelayMs:	
  8852                           	opt	stack 5
  8853                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  8854                           ;DelayMs@cnt stored from wreg
  8855  08EA  00F1               	movwf	(DelayMs@cnt)
  8856                           	line	41
  8857                           ;delay.c: 40: unsigned char i;
  8858                           ;delay.c: 41: do {
  8859                           	
  8860  08EB                     l1079:	
  8861                           	line	42
  8862                           	
  8863  08EB                     l4612:	
  8864                           ;delay.c: 42: i = 4;
  8865  08EB  3004               	movlw	(04h)
  8866  08EC  00F0               	movwf	(??_DelayMs+0)+0
  8867  08ED  0870               	movf	(??_DelayMs+0)+0,w
  8868  08EE  00F2               	movwf	(DelayMs@i)
  8869                           	line	43
  8870                           ;delay.c: 43: do {
  8871                           	
  8872  08EF                     l1080:	
  8873                           	line	44
  8874                           ;delay.c: 44: { delayus_variable=(unsigned char)(250/2); asm("nop"); } asm("decfsz _dela
                                 yus_variable,f"); asm("goto $ - 2");;
  8875  08EF  307D               	movlw	(07Dh)
  8876  08F0  00F0               	movwf	(??_DelayMs+0)+0
  8877  08F1  0870               	movf	(??_DelayMs+0)+0,w
  8878  08F2  1283               	bcf	status, 5	;RP0=0, select bank0
  8879  08F3  1303               	bcf	status, 6	;RP1=0, select bank0
  8880  08F4  00EF               	movwf	(_delayus_variable)
  8881                           	
  8882  08F5                     l4614:	
  8883                           # 44 "/Users/francescomeli/Dropbox/Tesi/pocketDolly.X/delay/delay.c"
  8884  08F5  0000               nop ;#
  8885                           psect	text1039
  8886                           	
  8887  08F6                     l4616:	
  8888                           # 44 "/Users/francescomeli/Dropbox/Tesi/pocketDolly.X/delay/delay.c"
  8889  08F6  0BEF               decfsz _delayus_variable,f ;#
  8890                           psect	text1039
  8891                           	
  8892  08F7                     l4618:	
  8893                           # 44 "/Users/francescomeli/Dropbox/Tesi/pocketDolly.X/delay/delay.c"
  8894  08F7  28F5               goto $ - 2 ;#
  8895                           psect	text1039
  8896                           	line	45
  8897                           	
  8898  08F8                     l4620:	
  8899                           # 45 "/Users/francescomeli/Dropbox/Tesi/pocketDolly.X/delay/delay.c"
  8900  08F8  0064               clrwdt ;#
  8901                           psect	text1039
  8902                           	line	46
  8903                           	
  8904  08F9                     l4622:	
  8905                           ;delay.c: 46: } while(--i);
  8906  08F9  3001               	movlw	low(01h)
  8907  08FA  02F2               	subwf	(DelayMs@i),f
  8908  08FB  1D03               	btfss	status,2
  8909  08FC  28FE               	goto	u3111
  8910  08FD  28FF               	goto	u3110
  8911  08FE                     u3111:
  8912  08FE  28EF               	goto	l1080
  8913  08FF                     u3110:
  8914  08FF  2900               	goto	l4624
  8915                           	
  8916  0900                     l1081:	
  8917                           	line	47
  8918                           	
  8919  0900                     l4624:	
  8920                           ;delay.c: 47: } while(--cnt);
  8921  0900  3001               	movlw	low(01h)
  8922  0901  02F1               	subwf	(DelayMs@cnt),f
  8923  0902  1D03               	btfss	status,2
  8924  0903  2905               	goto	u3121
  8925  0904  2906               	goto	u3120
  8926  0905                     u3121:
  8927  0905  28EB               	goto	l1079
  8928  0906                     u3120:
  8929  0906  2907               	goto	l1083
  8930                           	
  8931  0907                     l1082:	
  8932                           	line	48
  8933                           	
  8934  0907                     l1083:	
  8935  0907  0008               	return
  8936                           	opt stack 0
  8937                           GLOBAL	__end_of_DelayMs
  8938  0908                     	__end_of_DelayMs:
  8939 ;; =============== function _DelayMs ends ============
  8940                           
  8941                           	signat	_DelayMs,4216
  8942                           psect	text1040,local,class=CODE,delta=2
  8943                           global __ptext1040
  8944  0000                     __ptext1040:
  8945                           	global	btemp
  8946  007E                     	btemp set 07Eh
  8947                           
  8948                           	DABS	1,126,2	;btemp
  8949                           	global	wtemp0
  8950  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Jun  1 00:04:29 2013

                         pc 0002              ___bmul@product 0072                          _RD 0C60  
                        _WR 0C61                          fsr 0004         ___wmul@multiplicand 0072  
                       _GIE 005F                         _RA0 0028                         _RA1 0029  
                       _RB0 0030                         _RA2 002A                         _RB1 0031  
                       _RA3 002B                         _RA4 002C                         _RA5 002D  
                       _RB4 0034                         _RB5 0035                         _RC4 003C  
                       _RB6 0036                         _RB7 0037                         _abs 175F  
                       _cmd 09A1                         fsr0 0004                         indf 0000  
                      l1100 08CF                        l1101 08D4                        l1102 08E2  
                      l1103 08E9                        l1104 08E9                        l1200 0D54  
                      l1120 079C                        l1201 0D53                        l1121 068D  
                      l1202 0D55                        l1210 0FCC                        l1130 07FC  
                      l1122 0786                        l1211 0F75                        l1131 07FD  
                      l1123 06B7                        ?_abs 0070                        l1220 0E8B  
                      l1300 0339                        l1212 0F7A                        l1132 07FD  
                      l1124 079B                        l1221 0E2B                        l1301 0223  
                      l1205 0FCD                        l1213 0F7B                        l1125 06EB  
                      l1222 0E8A                        l1310 0291                        l1302 0224  
                      l1206 0F94                        l1214 0F91                        l1230 063B  
                      l1126 071E                        l1223 0E8C                        l1311 029C  
                      l1303 0277                        l1215 0F92                        l1207 0F68  
                      l1231 064F                        l1127 0751                        l1119 068C  
                      l1080 08EF                        l1312 02C4                        l1304 0225  
                      l1240 175E                        l1216 0FFE                        l1208 0F70  
                      l1144 0DDE                        l1128 0784                        l1081 0900  
                      l1313 02B9                        l1305 023A                        l1217 0FFF  
                      l1209 0F74                        l1145 0D77                        l1129 07A5  
                      l1082 0907                        l1162 09F2                        l1314 02D6  
                      l1306 024F                        l1226 04E7                        l1234 0BB9  
                      l1146 0DE9                        l1083 0907                        l1163 09CF  
                      l1315 0319                        l1307 023B                        l1171 0117  
                      l1243 09CC                        l1227 051B                        l1147 0DEF  
                      l1164 09FB                        l1316 02DB                        l1308 025C  
                      l1180 0384                        l1252 094C                        l1228 0648  
                      l1237 17B2                        l1261 0B39                        l1165 09FB  
                      l1317 0324                        l1309 025D                        l1181 048C  
                      l1229 05CF                        l1174 174F                        l1270 0B11  
                      l1262 0AF7                        l2302 1770                        l1318 0338  
                      l1182 047A                        l1246 1756                        l1079 08EB  
                      l1271 0B16                        l1263 0B08                        l2303 1770  
                      l1191 0CB0                        l1319 033E                        l1183 047A  
                      l1255 17DB                        l1272 0B37                        l1280 0B2F  
                      l1264 0B02                        l2312 0950                        l2320 0AB2  
                      l1192 0CAF                        l1168 0038                        l1184 047F  
                      l1256 17CD                        l1281 0B34                        l1273 0B26  
                      l1265 0B02                        l2313 095A                        l2321 0AC3  
                      l1193 0CBA                        l1177 0493                        l1185 0487  
                      l1249 0A61                        l1257 17E4                        l1282 0B40  
                      l1274 0B20                        l1266 0B07                        l2306 17B5  
                      l2314 096F                        l2322 0AC4                        l2330 0A6C  
                      l1194 0CB9                        l2410 0133                        l1186 048B  
                      l1178 0370                        l1258 17E4                        ?_cmd 0070  
                      l1283 0B47                        l1267 0B38                        l1275 0B20  
                      l2307 17BE                        l2315 0976                        l2323 0ADD  
                      l2331 0A7D                        l1195 0CBB                        l2411 0205  
                      l1187 04A2                        l1179 037F                        l1276 0B25  
                      l1268 0B17                        l2308 17C8                        l2324 0AEB  
                      l2332 0A7E                        l2412 014C                        l1188 04A8  
                      l1277 0B36                        l1269 0B11                        l2309 17CA  
                      l2325 0AF3                        l2333 0A8F                        l2421 0EAA  
                      l2413 018C                        l1278 0B35                        l2318 0AEC  
                      l2334 0A9D                        l2430 0F06                        l2422 0F32  
                      l1198 0D31                        l2414 01A1                        l1286 17FF  
                      l1279 0B2F                        l2319 0ABE                        l2335 0AA5  
                      l2431 0F18                        l2423 0EF5                        l1199 0D30  
                      l1295 0325                        l2415 01B8                        l2328 0A9E  
                      l2432 0F29                        l2424 0EE1                        l1296 020E  
                      l2416 01BD                        l2329 0A78                        l2425 0EE2  
                      l1297 0220                        l2417 01D2                        l2426 0EF4  
                      l1298 025F                        l2418 01E9                        l2427 0F19  
                      l1299 0222                        l2428 0F05                        l5100 0E8B  
                      l2429 0F12                        l5102 0E8C                        l5110 0023  
                      l2535 179A                        l5112 0029                        l5104 0007  
                      l5120 021B                        l5200 014C                        l2650 0BE3  
                      l5106 000D                        l5130 023B                        l5122 0225  
                      l5114 0209                        l5210 0187                        l5202 0179  
                      l2651 0BFA                        l2652 0BE4                        l2644 0BCE  
                      l5060 08DB                        l5108 0015                        l5132 0247  
                      l5124 022C                        l5140 0277                        l5116 020E  
                      l5220 01B1                        l5212 018C                        l5204 017A  
                      l5300 17E6                        l2653 0C01                        l2654 0C0D  
                      l2646 0BC6                        l5062 08E2                        l5054 08CF  
                      l5070 0CB0                        l5150 0291                        l5142 027F  
                      l5134 024B                        l5126 0230                        l5118 0214  
                      l5230 01DA                        l5222 01B8                        l5214 0190  
                      l5206 017B                        l5310 17FF                        l5302 17EB  
                      l2655 0C02                        l2647 0C34                        l2656 0C11  
                      l2648 0BDC                        l5056 08D4                        l5072 0CB6  
                      l5064 0C35                        l5080 0CC4                        l5160 02B9  
                      l5152 0294                        l5144 0283                        l5136 025E  
                      l5128 0235                        l5232 01E2                        l5224 01BD  
                      l5216 01A1                        l5208 0181                        l5240 179A  
                      l5304 17F4                        l5320 09BA                        l5312 09A2  
                      l5400 0641                        l2657 0C1B                        l2649 0BCF  
                      l2658 0C34                        l5058 08DA                        l5074 0CBA  
                      l5066 0C3D                        l5090 0D55                        l5082 0CFF  
                      l5170 02D6                        l5162 02BD                        l5154 029B  
                      l5146 0287                        l5138 025F                        l5234 01E9  
                      l5226 01C1                        l5218 01A9                        l5250 00E6  
                      l5242 0039                        l5306 17F9                        l5322 09BE  
                      l5314 09A5                        l5330 0932                        l5402 0648  
                      l5410 0B89                        l4620 08F8                        l4612 08EB  
                      l4700 17C8                        l5076 0CBB                        l5068 0C78  
                      l5084 0D31                        l5092 0DF0                        l5172 02DB  
                      l5164 02C4                        l5156 029C                        l5148 028B  
                      l5180 0325                        l5236 0205                        l5228 01D2  
                      l5252 00FF                        l5244 009B                        l5260 033F  
                      l5308 17FD                        l5324 09C3                        l5316 09A9  
                      l5332 093E                        l5500 0F67                        l5412 0B8F  
                      l5404 0B48                        l5420 0D72                        l4622 08F9  
                      l4614 08F5                        l4702 17CA                        l4710 0961  
                      l5086 0D4C                        l5078 0CBC                        l5094 0E21  
                      l5174 030D                        l5166 02CA                        l5158 02B8  
                      l5182 0339                        l5190 012B                        l5238 1784  
                      l5254 0100                        l5246 00AD                        l5270 037F  
                      l5262 036D                        l5318 09B5                        l5334 0943  
                      l5326 092B                        l5510 0F7B                        l5502 0F68  
                      l5414 0BAD                        l5406 0B61                        l5422 0D77  
                      l5430 0DDE                        l4624 0900                        l4616 08F6  
                      l4712 096F                        l4704 094D                        l4720 0AAE  
                      l5088 0D54                        l5096 0E29                        l5184 033E  
                      l5176 0314                        l5168 02D1                        l5192 0132  
                      l5256 0101                        l5248 00C4                        l5280 0474  
                      l5272 0384                        l5264 0370                        l5336 0947  
                      l5328 092E                        l5520 0FFC                        l5512 0F81  
                      l5504 0F6E                        l5416 0BB3                        l5408 0B66  
                      l5432 0DE9                        l5424 0D7D                        l4618 08F7  
                      l4714 0976                        l4706 0950                        l4730 0AD5  
                      l4722 0AB2                        l5098 0E2B                        l5178 0319  
                      l5186 1757                        l5194 0133                        l5258 0117  
                      l5282 0479                        l5290 048C                        l5274 03C1  
                      l5266 0376                        l5338 0A2B                        l5514 0F93  
                      l5522 0FFE                        l5506 0F70                        l5370 17CC  
                      l5426 0DB0                        l5418 0D56                        l5530 0681  
                      l4660 17A6                        l4652 179B                        l4708 0954  
                      l4740 0AF3                        l4732 0ADB                        l4724 0AB9  
                      l4716 0AA6                        l5196 0144                        l5188 0118  
                      l5284 047F                        l5276 03FE                        l5268 037C  
                      l5292 0493                        l5524 0FFF                        l5508 0F75  
                      l5516 0F94                        l5372 17CD                        l5380 04AE  
                      l5428 0DD5                        l5540 06EB                        l5532 0686  
                      l4654 179F                        l4662 1749                        l4670 0B1B  
                      l4734 0ADD                        l4726 0ABE                        l4718 0AA8  
                      l4750 0A78                        l4742 0A62                        l4910 0EA0  
                      l5198 014B                        l5294 04A2                        l5286 0485  
                      l5278 043B                        l5518 0FCD                        l5374 17D6  
                      l5390 0527                        l5382 04B5                        l5542 071E  
                      l5534 068D                        l5550 079C                        l5526 0650  
                      l4656 17A2                        l4672 0B2A                        l4664 0AF4  
                      l4680 09CE                        l4736 0AE4                        l4728 0AC4  
                      l4752 0A7E                        l4744 0A68                        l4760 0A9E  
                      l4840 0BCD                        l4920 0EC3                        l4912 0EA9  
                      l5296 04A7                        l5288 0487                        l5368 1750  
                      l5376 17DB                        l5392 0560                        l5384 04E7  
                      l5552 07A5                        l5544 0751                        l5536 06A9  
                      l5528 067C                        l4658 17A3                        l4666 0AFD  
                      l4674 0B39                        l4682 09F2                        l4690 17B4  
                      l4738 0AEC                        l4762 0AA5                        l4754 0A88  
                      l4746 0A6C                        l4850 0BF2                        l4842 0BCF  
                      l4834 0BBA                        l4930 0EE0                        l4922 0ECA  
                      l4914 0EAA                        l5298 04A8                        l5394 0565  
                      l5386 051B                        l5378 04A9                        l5554 07D8  
                      l5546 0785                        l5538 06B7                        l4676 0B40  
                      l4668 0B0C                        l4684 175F                        l4692 17B9  
                      l4756 0A8F                        l4748 0A73                        l4860 0C2F  
                      l4852 0C02                        l4844 0BDC                        l4836 0BBE  
                      l4940 0F06                        l4932 0EE2                        l4924 0ECC  
                      l4916 0EBC                        l4908 0E8D                        l5396 05CF  
                      l5388 0521                        l5556 07F2                        l5548 0786  
                      l4678 0B47                        l4686 1763                        l4694 17BE  
                      l4758 0A96                        l4862 0C33                        l4854 0C0D  
                      l4846 0BE4                        l4838 0BC6                        l4950 0F32  
                      l4942 0F12                        l4926 0ED0                        l4934 0EF5  
                      l4918 0EBD                        l5398 063B                        l5558 07F7  
                      l4688 176F                        l4696 17C0                        l4856 0C15  
                      l4848 0BE8                        l4936 0EFB                        l4944 0F19  
                      l4928 0ED7                        l5584 078D                        l4698 17C2  
                      l4858 0C1D                        l4946 0F1D                        l4938 0F04  
                      l5498 0F33                        l4948 0F29                        STR_1 0883  
                      STR_2 08B2                        STR_3 0853                        STR_4 08B2  
                      STR_5 08B9                        STR_6 08B2                        STR_7 0878  
                      STR_8 08B2                        STR_9 086C                        u3110 08FF  
                      u3111 08FE                        u3120 0906                        u3200 0B15  
                      u3121 0905                        u3201 0B14                        u3210 0B1B  
                      u3211 0B1A                        u3220 0B24                        u3300 0954  
                      u3221 0B23                        u3301 0953                        u3230 0B2A  
                      u3231 0B29                        u3240 0B33                        u3400 0AEA  
                      u4200 0C3D                        u5000 065A                        u3241 0B32  
                      u3401 0AE9                        u4201 0C3C                        u3250 0B3F  
                      u3170 0AFD                        u3330 096E                        u3410 0A68  
                      u4210 0C78                        u5010 066F                        u3251 0B3E  
                      u3171 0AFC                        u3331 096D                        u3315 095B  
                      u3411 0A67                        u4211 0C77                        u3180 0B06  
                      u3260 09FA                        u3340 0AAE                        u4220 0CB6  
                      u4300 025B                        u5100 0776                        u5020 0697  
                      u3181 0B05                        u3261 09F9                        u3325 0962  
                      u3341 0AAD                        u4301 025A                        u3190 0B0C  
                      u3270 1763                        u3430 0A7C                        u4230 0CC4  
                      u4310 0287                        u5110 07A4                        u5030 06C1  
                      u3191 0B0B                        u3271 1762                        u3431 0A7B  
                      u4215 0C74                        u4231 0CC3                        u4311 0286  
                      u5111 07A3                        u3280 17B9                        u3360 0AC2  
                      u3440 0A88                        u4240 0CFF                        u4320 029A  
                      u4400 015C                        u5120 07AF                        u5040 06DD  
                      u3281 17B8                        u3361 0AC1                        u3441 0A87  
                      u3425 0A6D                        u4241 0CFE                        u4321 0299  
                      u3290 17C7                        u4250 0D4C                        u4330 02B7  
                      u4410 016E                        u5130 07CB                        u5050 06F4  
                      u3291 17C6                        u3355 0AB3                        u4251 0D4B  
                      u4331 02B6                        u3380 0AD5                        u3460 0A9C  
                      u4180 08E1                        u4260 0E21                        u4340 02C3  
                      u4420 0190                        u5140 07E0                        u5060 0710  
                      u3381 0AD4                        u3461 0A9B                        u3445 0A84  
                      u4181 08E0                        u4245 0CFB                        u4261 0E20  
                      u4341 02C2                        u4421 018F                        u4405 0158  
                      u3710 0BBE                        u4190 08E8                        u4270 0E29  
                      u4350 02CA                        u4510 01E8                        u5070 0727  
                      u3375 0AC5                        u3455 0A90                        u4191 08E7  
                      u4255 0D48                        u4271 0E28                        u4351 02C9  
                      u4335 02B3                        u4511 01E7                        u4431 0199  
                      u4415 016A                        u5207 17EF                        u3800 0C26  
                      u3720 0BC5                        u4360 0323                        u4280 0214  
                      u4432 01A0                        u4520 0109                        u5080 0743  
                      u3385 0AD1                        u3721 0BC4                        u5217 0011  
                      u4361 0322                        u4281 0213                        u4505 01DB  
                      u3810 0C33                        u4370 0337                        u4290 0235  
                      u4610 0438                        u4530 037C                        u5090 075A  
                      u3395 0ADE                        u5227 001F                        u4371 0336  
                      u4291 0234                        u4611 0434                        u3740 0BE2  
                      u3900 0EA0                        u4460 01B7                        u4380 012B  
                      u3805 0C22                        u3741 0BE1                        u3901 0E9F  
                      u5237 002D                        u4461 01B6                        u4445 01A2  
                      u4381 012A                        u4605 0402                        u5157 064C  
                      u3910 0EB5                        u4470 01C1                        u4390 0144  
                      u4550 03BE                        u3735 0BD4                        u4471 01C0  
                      u4455 01AA                        u4391 0143                        u4551 03BA  
                      u5167 0F89                        u3760 0C00                        u3920 0ED0  
                      u4640 0471                        u4624 043B                        u4800 0DA3  
                      u3761 0BFF                        u3921 0ECF                        u4481 01CA  
                      u4641 046D                        u4545 0388                        u4705 09AC  
                      u5177 0930                        u3930 0ED7                        u4482 01D1  
                      u4810 0DC3                        u3755 0BF3                        u3931 0ED6  
                      u3915 0EB1                        u4635 043F                        u5187 09A7  
                      u4715 0935                        u3780 0C11                        u4660 0478  
                      u4580 03FB                        u4564 03C1                        u4740 17E3  
                      u4820 0DE8                        u3781 0C10                        u4661 0477  
                      u4581 03F7                        u5197 09C7                        u4741 17E2  
                      u4821 0DE7                        u3790 0C15                        u3950 0EF3  
                      u4670 047E                        u4654 0474                        u4750 04B5  
                      u3791 0C14                        u3775 0C05                        u3951 0EF2  
                      u4495 01D3                        u4671 047D                        u4575 03C5  
                      u4751 04B4                        u3960 0EFB                        u4680 0485  
                      u4760 0560                        u3961 0EFA                        u3945 0EE3  
                      u4681 0484                        u4761 055F                        u4825 0DE4  
                      u4690 04A1                        u4594 03FE                        u4770 0565  
                      u4691 04A0                        u4771 0564                        u3980 0F17  
                      u4780 0D60                        u3981 0F16                        u3990 0F1D  
                      u4790 0D87                        u3975 0F08                        u4695 049D  
                      u4980 0F66                        u4981 0F65                        u4990 0F6E  
                      u4991 0F6D                        _WREN 0C62                        abs@a 0070  
                      _data 092A                        cmd@c 0072                        _main 0650  
                      _left 0C35                ___ftpack@arg 0070                ___ftpack@exp 0073  
                      _spin 033F                        _wise 00E7                        btemp 007E  
                      start 0000             __end_of_DelayMs 0908           ___bmul@multiplier 0073  
              ___ftmul@cntr 0038                ___ftmul@sign 0039                ___fttol@exp1 0029  
                     ??_abs 0072                       ??_cmd 0070                ___fttol@lval 0025  
                     ?_data 0070                main@mainMenu 0190                       ?_main 0070  
                     ?_left 0020                       _EEADR 010D                       STR_10 08B2  
                     STR_11 0844                       STR_20 08BF                       STR_12 08B2  
                     STR_21 088C                       STR_13 08B3                       STR_22 0894  
                     STR_14 08C9                       STR_23 0834                       STR_15 08A4  
                     STR_24 0860                       STR_16 08CB                       STR_25 08AC  
                     STR_17 089C                       STR_18 08C2                       STR_19 08C4  
                     _CARRY 0018                       ?_spin 003A                       _ANSEL 0188  
           __end_of___ftmul 0206             __end_of___fttol 0F33             __end_of___lwdiv 0AF4  
           __end_of___lwmod 0AA6                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089             __end_of_getData 0118  
       __size_of_LCD_STROBE 0008                       _clear 1750                       data@c 0071  
                     _right 0CBC               ___ftpack@sign 0074             __end_of_takePic 1800  
                     _print 04A9                       _pulse 0806                       _start 0D56  
                     pclath 000A                main@settings 00AD                       spin@f 004E  
                     spin@i 0050                       spin@s 004C                       status 0003  
                     wtemp0 007E             __end_of_sprintf 033F                __end_of_data 094D  
              __end_of_main 0800                __end_of_left 0CBC                __end_of_spin 04A9  
                    ??_data 0070                      ??_main 0067                      ??_left 0074  
             ___fttol@sign1 0024                      ??_spin 0045                      ?_clear 0070  
                    _EEDATA 010C                      _EECON1 018C                      _EECON2 018D  
                    ?_right 0020                      ?_print 0030            __end_of___ftpack 0C35  
                    ?_start 0052                      _ANSELH 0189                   ??_DelayMs 0070  
          __end_of___lwtoft 179B                      _OSCCON 008F                      _DelayS 08CE  
          __end_of_deselect 0E8D            __end_of_lcd_init 0A62                      ___bmul 17B3  
                    ___wmul 094D                   ??___ftmul 0030                   ??___fttol 0020  
                    _getKey 0AF4                   ??___lwdiv 0074                   ??___lwmod 007C  
                    _select 0F33            __end_of_pic_init 17B3                   ??_getData 002D  
                    _string 17CB       ___ftmul@f3_as_product 0035                   ??_takePic 0073  
                    start@i 0065                   ??_sprintf 0025         ___bmul@multiplicand 0070  
              ??_LCD_STROBE 0070                  ___ftmul@f1 002A                  ___ftmul@f2 002D  
                ___fttol@f1 0078              __pcstackCOMMON 0070                __pidataBANK1 0908  
              __pidataBANK3 0977               __end_of_clear 1757               __end_of_right 0D56  
             __end_of_print 0650               __end_of_start 0DF0                  ___lwtoft@c 0078  
              _getData$3070 0039                     ??_clear 0073          __end_of_LCD_STROBE 175F  
                   ??_right 0074                     ??_print 003D                     ??_start 005D  
                __pbssBANK0 006F                  __pbssBANK1 00DC                     ?_DelayS 0070  
                __pmaintext 0650                     ?___bmul 0070                     ?___wmul 0070  
                   ?_getKey 0070                  __ptext1010 17CB                  __ptext1011 1750  
                __ptext1020 0118                  __ptext1012 0F33                  __ptext1021 1757  
                __ptext1013 0A2B                  __ptext1030 0A62                  __ptext1022 0206  
                __ptext1014 092A                  __ptext1031 0AA6                  __ptext1023 0007  
                __ptext1015 09A1                  __ptext1007 0D56                  __ptext1040 0000  
                __ptext1032 094D                  __ptext1024 0DF0                  __ptext1016 17E5  
                __ptext1008 0B48                  __ptext1033 17B3                  __ptext1025 0CBC  
                __ptext1017 033F                  __ptext1009 04A9                  __ptext1034 175F  
                __ptext1026 0C35                  __ptext1018 0039                  __ptext1035 09CD  
                __ptext1027 08CE                  __ptext1019 1784                  __ptext1036 0AF4  
                __ptext1028 0E8D                  __ptext1037 1749                  __ptext1029 0BBA  
                __ptext1038 179B                  __ptext1039 08EA                     ?_select 0020  
                 ?___ftpack 0070                     ?_string 0070                   ?___lwtoft 0078  
                   DelayS@i 0075          __size_of_printData 0072                   ?_deselect 0020  
                 ?_lcd_init 0070                 right@myMenu 0020                     _DelayMs 08EA  
                 ?_pic_init 0070             __size_of_DelayS 001C     __size_of_SendIRSequence 0032  
           __size_of___bmul 0018             __size_of___wmul 002A                     ___ftmul 0118  
                   ___fttol 0E8D                     ___lwdiv 0AA6                     ___lwmod 0A62  
           __size_of_getKey 0054                  ??___ftpack 0075                     _getData 0039  
           __size_of_select 00CD                  ??___lwtoft 007B             __size_of_string 001A  
                   _dpowers 0826                __size_of_abs 0012                __size_of_cmd 002C  
                   _takePic 17E5                  ??_deselect 0074                     _sprintf 0206  
                   main@key 00C2                  ??_lcd_init 0073                     main@try 00BB  
                 DelayS@cnt 0074        end_of_initialization 0A27                     init_ram 1775  
                ??_pic_init 0070           __end_of_printData 0BBA                  _motorRelax 1749  
                   string@q 0073              deselect@myMenu 0020                 print@buffer 004F  
               print@myMenu 0030                  main@myData 00C4                  main@myMenu 00CF  
            __end_of_DelayS 08EA                 ___ftmul@exp 0034                  left@myMenu 0020  
            __end_of___bmul 17CB              __end_of___wmul 0977              __end_of_getKey 0B48  
          _delayus_variable 006F              __end_of_select 1000              __end_of_string 17E5  
             getData@myData 003B         start_initialization 09FC               getData@myMenu 0020  
               __end_of_abs 1771                 __end_of_cmd 09CD                 start@myData 0052  
            _SendIRSequence 0007                    ??_DelayS 0073                    ??___bmul 0071  
               ?_motorRelax 0070                    ??___wmul 0074                    ??_getKey 0072  
               __pdataBANK1 00A0                 __pdataBANK3 0190                    ??_select 002D  
                  ??_string 0072           __size_of___ftpack 007B           __size_of___lwtoft 0017  
             __pcstackBANK0 0020               __pcstackBANK1 00C2           __size_of_deselect 009D  
                  ?_DelayMs 0070      __end_of_SendIRSequence 0039           __size_of_lcd_init 0037  
               sprintf@_val 002C                 sprintf@flag 0028                 sprintf@prec 0029  
          ___lwdiv@dividend 0072           __size_of_pic_init 0018          takePic@actualShots 0075  
                  ?___ftmul 002A                    ?___fttol 0078                    ?___lwdiv 0070  
                  ?___lwmod 0078                    ?_getData 0020                   __pstrings 0800  
                  ?_takePic 0070            ___lwdiv@quotient 0075              __size_of_clear 0007  
                  ?_sprintf 0020              __size_of_right 009A              __size_of_print 01A7  
       __size_of_motorRelax 0007              __size_of_start 009A             ?_SendIRSequence 0070  
            ___wmul@product 0074                    DelayMs@i 0072                   getKey@btn 0072  
              select@myMenu 0020                   main@F1933 00A0                   main@F1935 00DC  
                 _printData 0B48                  spin@myData 003A                 __stringbase 0805  
         ___wmul@multiplier 0070           _SendIRPulseCycles 09CD          ?_SendIRPulseCycles 0070  
          __size_of_DelayMs 001E         ??_SendIRPulseCycles 0070                   init_fetch 1771  
    printData@morelessspins 0050                  ?_printData 0030            __size_of___ftmul 00EE  
          __size_of___fttol 00A6            __size_of___lwdiv 004E            __size_of___lwmod 0044  
                  ___ftpack 0BBA                 _menuLengths 0830            __size_of_getData 00DF  
                  ___lwtoft 1784   __end_of_SendIRPulseCycles 09FC            __size_of_takePic 001B  
           ___lwdiv@divisor 0070                    _deselect 0DF0             ___lwdiv@counter 0077  
                  _lcd_init 0A2B            __size_of_sprintf 0139               __size_of_data 0023  
             __size_of_main 01B0               __size_of_left 0087               __size_of_spin 016A  
                  _pic_init 179B                  _LCD_STROBE 1757                ??_motorRelax 0070  
                  main@time 01A5                  DelayMs@cnt 0071     SendIRPulseCycles@cycles 0070  
                 sprintf@ap 002A                   sprintf@sp 002B          __end_of_motorRelax 1750  
          ___lwmod@dividend 007A                   stringcode 0800                 ??_printData 003B  
                  sprintf@c 002F                    sprintf@f 0020  __size_of_SendIRPulseCycles 002F  
           ___lwmod@divisor 0078             ___lwmod@counter 007D                    stringdir 0800  
                  stringtab 0800            ??_SendIRSequence 0071             printData@buffer 0040  
           printData@myData 0030                 ?_LCD_STROBE 0070  
